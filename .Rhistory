2*a^4 - 144 * a^2 + 5
a = c(-7, -6, 0, 6, 7)
2*a^4 - 144 * a^2 + 5
c = c(5, 11)
-1 * a^3 + 12*a^2 + 99 * a - 200
c = c(5, 11)
-1 * c^3 + 12*c^2 + 99 * c - 200
(151 * 755 - 755^2 / 10) * 1000
151000 * 755 - 100 * 755^2
a = c(-6, -5, 2, 3)
1/3 * a^3 + 3/2*a^2 + 10 * a + 2
a = c(-6, -5, 2, 3)
1/3 * a^3 + 3/2*a^2 - 10 * a + 2
128/8
b = c(-5, -4, 0, 4, 5)
2*b^4 - 64 * b^2 -4
c = c(5, 11)
-1 * c^3 + 12*c^2 + 144 * c - 400
c = c(-12, 4, 5)
-1 * c^3 + 12*c^2 + 144 * c - 400
c = c(5, 12)
-1 * c^3 + 12*c^2 + 144 * c - 400
(150 * 750 - 750^2 / 10) * 1000
(150 * 750 - 750^2 / 10) * 10
900 * 450
240000 / 6
425 + 592
d = 102
592 * d - 5*d*(d - 85)
d = 102
592 * d - 5*d*(d - 85)
12 * 48 - (48^2 / 8)
a = c(-6, -5, 2, 3)
1/3 * a^3 + 3/2*a^2 - 10 * a + 5
a = c(-7, -6, -1, 0)
1/3 * a^3 + 7/2*a^2 +6  * a + 5
a = c(-6, -5, 2, 3)
1/3 * a^3 + 3/2*a^2 - 10 * a + 5
a = c(-7, -6, -1, 0)
1/3 * a^3 + 7/2*a^2 +6  * a + 5
b = c(-5, -4, 0, 4, 5)
2*b^4 - 64 * b^2 -4
b = c(-7, -6, 0, 6, 7)
b^4 - 72 * b^2 +4
c = c(5, 8)
-1 * c^3 + 15*c^2 + 72 * c - 300
c = c(5, 12)
-1 * c^3 + 15*c^2 + 72 * c - 300
c = c(5, 10)
-1 * c^3 + 9*c^2 + 120 * c - 400
163 * 5
(163 * 815 - 815^2 / 10) * 10
157 * 5
(157 * 785 - 785^2 / 10) * 10
325 * 650
a = c(-3, -2, 1, 2)
1/3 * a^3 + 1/2*a^2 -2  * a -2
a = c(-2, -1, 4, 5)
1/3 * a^3 -3/2*a^2 -4  * a +1
a = c(-6, -5, 4, 5)
1/3 * a^3 +1/2*a^2 -20 * a +1
1/3 * a^3 +1/2*a^2 -20 * a -1
a = c(-6, -5, 4, 5)
1/3 * a^3 +1/2*a^2 -20 * a -1
b = c(-8, -7, 0, 7, 8)
2*b^4 - 196 * b^2 -5
3*b^4 - 96 * b^2 -1
b = c(-5, -4, 0, 4, 5)
3*b^4 - 96 * b^2 -1
c = c(5, 10)
-1 * c^3 + 12*c^2 + 60 * c - 200
b = c(-6, -5, 0, 5, 6)
1*b^4 - 50 * b^2 -1
c = c(5, 11)
-1 * c^3 + 9*c^2 + 165 * c - 300
c = c(5, 12)
-1 * c^3 + 15*c^2 + 72 * c - 300
153 * 5
(153 * 765 - 765^2 / 10) * 10
(160 * 800 - 800^2 / 10) * 10
159 * 5
(159 * 795 - 795^2 / 10) * 10
read_data = read.csv("Running_03_29_2019.csv", skip = 1)
read_data = read.csv("Running_03_29_18.csv", skip = 1)
library(knitr)
library(kableExtra)
library(dplyr)
library(stringr)
Start_Date = as.Date("1/28/2018", format = "%m/%d/%Y")
Update_Date = as.Date("3/29/2019", format = "%m/%d/%Y")
library(dplyr)
spotify = read.csv("Spotify_Wrapped.csv")
spotify = spotify %>% group_by(Year) %>% mutate(Score = max(row_number()) + 1 - row_number())
spotify %>%
group_by(Album)   %>%
count(Album)      %>%
rename(Count = n) %>%
arrange(desc(Count))
spotify %>%
group_by(Song, Artist.1, Artist.2, Artist.3, Artist.4, Artist.5, Artist.6) %>%
count(Song, Artist.1, Artist.2, Artist.3, Artist.4, Artist.5, Artist.6, Total = sum(Score)) %>%
rename(Appearances = n) %>%
arrange(desc(Total), desc(Appearances))
a2 = spotify %>%
count(Artist.2) %>%
rename(Total = n, Artist = Artist.2)
a1 = spotify %>%
count(Artist.1) %>%
rename(Total = n, Artist = Artist.1)
a2 = spotify %>%
count(Artist.2) %>%
rename(Total = n, Artist = Artist.2)
a3 = spotify %>%
count(Artist.3) %>%
rename(Total = n, Artist = Artist.3)
a4 = spotify %>%
count(Artist.4) %>%
rename(Total = n, Artist = Artist.4)
a5 = spotify %>%
count(Artist.5) %>%
rename(Total = n, Artist = Artist.5)
a6 = spotify %>%
count(Artist.6) %>%
rename(Total = n, Artist = Artist.6)
bind_rows(a1, a2, a3, a4, a5, a6) %>%
arrange(Artist) %>%
group_by(Artist) %>%
summarize(Total = sum(Total)) %>%
arrange(desc(Total)) %>%
tail(n = -1)
spotify %>%
filter(Year == 2016 | Year == 2017) %>%
arrange(Song) %>%
group_by(Song, Artist.1) %>%
count(Song, Total = sum(Score)) %>%
rename(Appearances = n) %>%
filter(Appearances == 2) %>%
arrange(desc(Total))
spotify %>%
filter(Year == 2017 | Year == 2018) %>%
arrange(Song) %>%
group_by(Song, Artist.1) %>%
count(Song, Total = sum(Score)) %>%
rename(Appearances = n) %>%
filter(Appearances == 2) %>%
arrange(desc(Total))
spotify %>%
filter(Year == 2016 | Year == 2018) %>%
arrange(Song) %>%
group_by(Song, Artist.1) %>%
count(Song, Total = sum(Score)) %>%
rename(Appearances = n) %>%
filter(Appearances == 2) %>%
arrange(desc(Total))
spotify %>%
group_by(Album)   %>%
count(Album)      %>%
rename(Count = n) %>%
arrange(desc(Count))
spotify = read.csv("Spotify_Wrapped.csv")
spotify = spotify %>% group_by(Year) %>% mutate(Score = max(row_number()) + 1 - row_number())
spotify %>%
group_by(Album)   %>%
count(Album)      %>%
rename(Count = n) %>%
arrange(desc(Count))
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("bsplus")
library(htmltools)
library(bsplus)
groupby_weekday = sleep %>%
group_by(Weekday) %>%
summarise(S = Sleep.Notes %>% str_extract(pattern = "Took a nap") %>% sum()
)
library(knitr)
library(kableExtra)
library(dplyr)
library(stringr)
Start_Date = as.Date("2/7/2017", format = "%m/%d/%Y")
percent = function(x, digits = 2, format = "f", ...) {
formatC(100 * x, format = format, digits = digits, ...) %>% paste("%", sep = "")
}
Update_Date = as.Date("3/20/2019", format = "%m/%d/%Y")
sleep = read.csv("sleepdata.csv", sep = ";")
sleep$Sleep.quality = str_extract(string = sleep$Sleep.quality, pattern = "[0-9]{1,3}") %>% as.integer()
sleep$Time.in.bed = paste(str_extract(string = sleep$Time.in.bed, pattern = "[0-9]{1,2}") %>% as.integer(),
ifelse(
test = str_extract(string = sleep$Time.in.bed, pattern = ":[0-9]{1,2}") %>% str_extract(pattern = "[0-9]{1,2}") %>% as.integer() <= 9,
yes = paste("0", str_extract(string = sleep$Time.in.bed, pattern = ":[0-9]{1,2}") %>% str_extract(pattern = "[0-9]{1,2}") %>% as.integer(), sep = ""),
no = paste(str_extract(string = sleep$Time.in.bed, pattern = ":[0-9]{1,2}") %>% str_extract(pattern = "[0-9]{1,2}") %>% as.integer(), sep = ""))
, sep = ":")
sleep$sleepmin = str_extract(string = sleep$Time.in.bed, pattern = "[0-9]{1,2}") %>% as.integer() * 60 + str_extract(string = sleep$Time.in.bed, pattern = ":[0-9]{1,2}") %>% str_extract(pattern = "[0-9]{1,2}") %>% as.integer()
sleep$enddates = str_extract(string = sleep$End, pattern = "[0-9]{4}-[0-9]{2}-[0-9]{2}") %>% as.Date()
add_on = cbind(matrix(setdiff(c(as.Date(1:(Update_Date - Start_Date), origin = Start_Date)), str_extract(string = sleep$End, pattern = "[0-9]{4}-[0-9]{2}-[0-9]{2}") %>% as.Date()),
nrow = length(setdiff(c(as.Date(1:(Update_Date - Start_Date), origin = Start_Date)), str_extract(string = sleep$End, pattern = "[0-9]{4}-[0-9]{2}-[0-9]{2}") %>% as.Date())),
ncol = 1),
matrix(NA,
nrow = length(setdiff(c(as.Date(1:(Update_Date - Start_Date), origin = Start_Date)), str_extract(string = sleep$End, pattern = "[0-9]{4}-[0-9]{2}-[0-9]{2}") %>% as.Date())),
ncol = ncol(sleep) - 1)) %>% as.data.frame()
add_on$V1 = as.Date(add_on$V1, origin = "1970-01-01")
names(add_on) = names(sleep)
add_on$enddates = add_on$Start
add_on$Start = add_on$End
sleep = rbind(sleep, add_on)
sleep = sleep[order(sleep$enddates, decreasing = FALSE), ]
sleep$Weekday = factor(x = rep(c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"), len = nrow(sleep)),
levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))
groupby_weekday = sleep %>%
group_by(Weekday) %>%
summarise(total = Sleep.quality %>% ">="(0) %>% sum(na.rm = TRUE),
avg_quality = Sleep.quality %>% mean(na.rm = TRUE) %>% "*"(100) %>% floor() %>% "/"(100),
time_in_bed = paste(str_extract(string = Time.in.bed, pattern = "[0-9]{1,2}") %>% as.numeric() %>% "*"(60) %>% "+"(str_extract(string = Time.in.bed, pattern = ":[0-9]{1,2}") %>% str_extract(pattern = "[0-9]{1,2}") %>% as.numeric()) %>% mean(na.rm = TRUE) %/% 60,
ifelse(str_extract(string = Time.in.bed, pattern = "[0-9]{1,2}") %>% as.numeric() %>% "*"(60) %>% "+"(str_extract(string = Time.in.bed, pattern = ":[0-9]{1,2}") %>% str_extract(pattern = "[0-9]{1,2}") %>% as.numeric()) %>% mean(na.rm = TRUE) %>% floor() <= 9,
yes = paste("0", str_extract(string = Time.in.bed, pattern = "[0-9]{1,2}") %>% as.numeric() %>% "*"(60) %>% "+"(str_extract(string = Time.in.bed, pattern = ":[0-9]{1,2}") %>% str_extract(pattern = "[0-9]{1,2}") %>% as.numeric()) %>% mean(na.rm = TRUE) %>% floor() %% 60, sep = ""),
no = paste(str_extract(string = Time.in.bed, pattern = "[0-9]{1,2}") %>% as.numeric() %>% "*"(60) %>% "+"(str_extract(string = Time.in.bed, pattern = ":[0-9]{1,2}") %>% str_extract(pattern = "[0-9]{1,2}") %>% as.numeric()) %>% mean(na.rm = TRUE) %>% floor() %% 60)), sep = ":")
#nap_prob = paste((Sleep.Notes %>% str_detect(pattern = "Took a nap \\(1 hour\\)") %>% sum(na.rm = TRUE) + Sleep.Notes %>% str_detect(pattern = "Took a nap \\(1.5 hours\\)") %>% sum(na.rm = TRUE) + Sleep.Notes %>% str_detect(pattern = "Took a nap \\(2 hours\\)") %>% sum(na.rm = TRUE)) %>% "/"(Sleep.quality %>% ">="(0) %>% sum(na.rm = TRUE)) %>% "*"(10000) %>% floor() %>% "/"(100), "%", sep = ""),
#avg_footsteps = Activity..steps. %>% mean(na.rm = TRUE) %>% floor()
)
names(groupby_weekday) = c("Weekday", "Sleeps Recorded", "Sleep Quality (%)", "Average Time in Bed")#, "Average Footsteps")
kable(groupby_weekday, format = "html", align = "l") %>%
kable_styling(bootstrap_options = c("hover", "responsive"))
groupby_weekday = sleep %>%
group_by(Weekday) %>%
summarise(S = Sleep.Notes %>% str_extract(pattern = "Took a nap") %>% sum()
)
groupby_weekday = sleep %>%
group_by(Weekday) %>%
summarise(S = Sleep.Notes %>% str_extract(pattern = "Took a nap") %>% sum()
)
groupby_weekday = sleep %>%
group_by(Weekday) %>%
summarise(total = Sleep.quality %>% ">="(0) %>% sum(na.rm = TRUE),
avg_quality = Sleep.quality %>% mean(na.rm = TRUE) %>% "*"(100) %>% floor() %>% "/"(100),
time_in_bed = paste(str_extract(string = Time.in.bed, pattern = "[0-9]{1,2}") %>% as.numeric() %>% "*"(60) %>% "+"(str_extract(string = Time.in.bed, pattern = ":[0-9]{1,2}") %>% str_extract(pattern = "[0-9]{1,2}") %>% as.numeric()) %>% mean(na.rm = TRUE) %/% 60,
ifelse(str_extract(string = Time.in.bed, pattern = "[0-9]{1,2}") %>% as.numeric() %>% "*"(60) %>% "+"(str_extract(string = Time.in.bed, pattern = ":[0-9]{1,2}") %>% str_extract(pattern = "[0-9]{1,2}") %>% as.numeric()) %>% mean(na.rm = TRUE) %>% floor() <= 9,
yes = paste("0", str_extract(string = Time.in.bed, pattern = "[0-9]{1,2}") %>% as.numeric() %>% "*"(60) %>% "+"(str_extract(string = Time.in.bed, pattern = ":[0-9]{1,2}") %>% str_extract(pattern = "[0-9]{1,2}") %>% as.numeric()) %>% mean(na.rm = TRUE) %>% floor() %% 60, sep = ""),
no = paste(str_extract(string = Time.in.bed, pattern = "[0-9]{1,2}") %>% as.numeric() %>% "*"(60) %>% "+"(str_extract(string = Time.in.bed, pattern = ":[0-9]{1,2}") %>% str_extract(pattern = "[0-9]{1,2}") %>% as.numeric()) %>% mean(na.rm = TRUE) %>% floor() %% 60)), sep = ":")
#nap_prob = paste((Sleep.Notes %>% str_detect(pattern = "Took a nap \\(1 hour\\)") %>% sum(na.rm = TRUE) + Sleep.Notes %>% str_detect(pattern = "Took a nap \\(1.5 hours\\)") %>% sum(na.rm = TRUE) + Sleep.Notes %>% str_detect(pattern = "Took a nap \\(2 hours\\)") %>% sum(na.rm = TRUE)) %>% "/"(Sleep.quality %>% ">="(0) %>% sum(na.rm = TRUE)) %>% "*"(10000) %>% floor() %>% "/"(100), "%", sep = ""),
#avg_footsteps = Activity..steps. %>% mean(na.rm = TRUE) %>% floor()
)
names(groupby_weekday) = c("Weekday", "Sleeps Recorded", "Sleep Quality (%)", "Average Time in Bed")#, "Average Footsteps")
tooth = kable(groupby_weekday, format = "html", align = "l") %>%
kable_styling(bootstrap_options = c("hover", "responsive"))
bs_button("She Loves You", button_type = "primary") %>%
bs_attach_collapse("yeah")
?bs_collapse
25 * 40 * 52
a = c(-7, 2, -6, 1)
(1/3) * a^3 + (-5/2) * a^2 + (-6) * a + 3
a = c(-6, 1, -7, 2)
(1/3) * a^3 + (-5/2) * a^2 + (-6) * a + 3
a = c(-6, 1, -7, 2)
(1/3) * a^3 + (5/2) * a^2 + (-6) * a + 3
a = c(0, -4, 4, -5, 5)
(3) * a^4 + (-96) * a^2 - 3
a = c(5, 10)
(-1) * a^3 + (12) * a^2  + (60) * a - 300
830 * 830 * 2
830 * 415 * 2
125 * 125 * 2
180000 / 8
sqrt(180000 / 8)
180000 / 150
SSR = 155.6231
SSE = 7.5312
SST = SSR + SSE
SST = SSR + SSE
k = 5
n = 18
SSR = 155.6231
SSE = 7.5312
SST = SSR + SSE
k = 5
n = 18
adj = 1 - (SSE / (n - k - 1)) / (SST / n - 1)
adj = 1 - (SSE / (n - k - 1)) / (SST / n - 1); adj
SSR = 155.6231
SSE = 7.5312
SST = SSR + SSE
k = 5
n = 18
adj = 1 - (SSE / (n - k - 1)) / (SST / n - 1); adj
SSR = 155.6231
SSE = 0
SST = SSR + SSE
k = 5
n = 18
adj = 1 - (SSE / (n - k - 1)) / (SST / n - 1); adj
SSR = 155.6231
SSE = 0
SST = SSR + SSE
k = 5
n = 18
adj = 1 - (SSE / (n - k - 1)) / (SST / n - 1); adj
SSR = 172.5213
SE2 = 8.9245
k = 5
n = 27
SST = SSR + SE2 * (n - k - 1)
adj = 1 - (SSE / (n - k - 1)) / (SST / n - 1); adj
SSR = 172.5213
SE2 = 8.9245
k = 5
n = 27
SSE = SE2 * (n - k - 1)
SST = SSR + SSE
adj = 1 - (SSE / (n - k - 1)) / (SST / n - 1); adj
SSR = 172.5213
SE2 = 8.9245
k = 5
n = 27
SSE = SE2 * (n - k - 1)
SST = SSR + SSE
adj = 1 - (SSE / (n - k - 1)) / (SST / n - 1); adj
SSR = 172.5213
SE2 = 8.9245
k = 6
n = 27
SSE = SE2 * (n - k - 1)
SST = SSR + SSE
adj = 1 - (SSE / (n - k - 1)) / (SST / n - 1); adj
SSR = 172.5213
SE2 = 8.9245
k = 7
n = 27
SSE = SE2 * (n - k - 1)
SST = SSR + SSE
adj = 1 - (SSE / (n - k - 1)) / (SST / n - 1); adj
SSR = 172.5213
SE2 = 8.9245
k = 7
n = 27
SSE = SE2 * (n - k - 1)
SST = SSR + SSE
adj = 1 - (SSE / (n - k - 1)) / (SST / n - 1); adj
SSR = 172.5213
SE2 = 8.9245
k = 7
n = 27
SSE = SE2 * (n - k - 1)
SST = SSR + SSE
adj = 1 - (SSE / (n - k - 1)) / (SST / n - 1); adj
SSR = 172.5213
SE2 = 8.9245
k = 7
n = 27
SSE = SE2 * (n - k - 1)
SST = SSR + SSE
adj = 1 - (SSE / (n - k - 1)) / (SST / n - 1); adj
SSR = 172.5213
SE = 8.9245
k = 7
n = 27
SSE = SE * (n - k - 1)
SST = SSR + SSE
adj = 1 - (SSE / (n - k - 1)) / (SST / n - 1); adj
SSR = 172.5213
SE = 8.9245
k = 8
n = 27
SSE = SE * (n - k - 1)
SST = SSR + SSE
adj = 1 - (SSE / (n - k - 1)) / (SST / n - 1); adj
k = 7
SSR = 172.5213
SE = 8.9245
k = 7
n = 27
SSE = SE * (n - k - 1)
SST = SSR + SSE
adj = 1 - (SSE / (n - k - 1)) / (SST / n - 1); adj
k = 4
n = 27
SSE = SE * (n - k - 1)
SST = SSR + SSE
adj = 1 - (SSE / (n - k - 1)) / (SST / n - 1); adj
SSR = 172.5213
SE = 8.9245
k = 7
n = 27
SSE = SE * (n - k - 1)
SST = SSR + SSE
adj = 1 - (SSE / (n - k - 1)) / (SST / n - 1); adj
SST
SSR = 172.5213
SE = 8.9245
k = 7
n = 27
SSE = SE * (n - k - 1)
SST = SSR + SSE
adj = 1 - (SSE / (n - k - 1)) / (SST / (n - 1)); adj
# Question 3
SST = 1212
SSE = 987
k = 18
n = 65
r = 1 - (SSE / SST); r
adj = 1 - (SSE / (n - k - 1)) / (SST / (n - 1)); adj
# Question 3
SST = 1212
SSE = 987
k = 18
n = 65
r = 1 - (SSE / SST); r
adj = 1 - (SSE / (n - k - 1)) / (SST / (n - 1)); adj
38.5116 / 4
55 / 128.431
(55 / 128.431) ^ -1
9.6279 / 2.3351
.35 / .2
.0427 * 2
tcdf(.1, .9, 9)
?tcdf
names(tcdf)
names(tcdf())
tcdf
fcdf
.58 / .38
.58 / .38
.58 / .38
2 * tcdf(1.5263, 9999, 55)
2 * tcdf(1.5263, 9999, 59)
2 * tcdf(1.5263, 9999, 55)
.58 / .38
2 * tcdf(1.526316, 9999, 55)
2 * tcdf(1.526316, 999999999, 55)
.45 / .5
2 * tcdf(.9, 999999999, 55)
a = c(1:5)
.8 *a - .13 * a^2
library(knitr)
library(kableExtra)
library(dplyr)
library(stringr)
Start_Date = as.Date("2/7/2017", format = "%m/%d/%Y")
percent = function(x, digits = 2, format = "f", ...) {
formatC(100 * x, format = format, digits = digits, ...) %>% paste("%", sep = "")
}
library(knitr)
library(kableExtra)
library(dplyr)
library(stringr)
Start_Date = as.Date("2/7/2017", format = "%m/%d/%Y")
percent = function(x, digits = 2, format = "f", ...) {
formatC(100 * x, format = format, digits = digits, ...) %>% paste("%", sep = "")
}
Update_Date = as.Date("3/20/2019", format = "%m/%d/%Y")
library(knitr)
library(kableExtra)
library(dplyr)
library(stringr)
Start_Date = as.Date("2/7/2017", format = "%m/%d/%Y")
percent = function(x, digits = 2, format = "f", ...) {
formatC(100 * x, format = format, digits = digits, ...) %>% paste("%", sep = "")
}
Update_Date = as.Date("3/20/2019", format = "%m/%d/%Y")
sleep = read.csv("sleepdata.csv", sep = ";")
sleep$Sleep.quality = str_extract(string = sleep$Sleep.quality, pattern = "[0-9]{1,3}") %>% as.integer()
sleep$Time.in.bed = paste(str_extract(string = sleep$Time.in.bed, pattern = "[0-9]{1,2}") %>% as.integer(),
ifelse(
test = str_extract(string = sleep$Time.in.bed, pattern = ":[0-9]{1,2}") %>% str_extract(pattern = "[0-9]{1,2}") %>% as.integer() <= 9,
yes = paste("0", str_extract(string = sleep$Time.in.bed, pattern = ":[0-9]{1,2}") %>% str_extract(pattern = "[0-9]{1,2}") %>% as.integer(), sep = ""),
no = paste(str_extract(string = sleep$Time.in.bed, pattern = ":[0-9]{1,2}") %>% str_extract(pattern = "[0-9]{1,2}") %>% as.integer(), sep = ""))
, sep = ":")
sleep$sleepmin = str_extract(string = sleep$Time.in.bed, pattern = "[0-9]{1,2}") %>% as.integer() * 60 + str_extract(string = sleep$Time.in.bed, pattern = ":[0-9]{1,2}") %>% str_extract(pattern = "[0-9]{1,2}") %>% as.integer()
sleep$enddates = str_extract(string = sleep$End, pattern = "[0-9]{4}-[0-9]{2}-[0-9]{2}") %>% as.Date()
add_on = cbind(matrix(setdiff(c(as.Date(1:(Update_Date - Start_Date), origin = Start_Date)), str_extract(string = sleep$End, pattern = "[0-9]{4}-[0-9]{2}-[0-9]{2}") %>% as.Date()),
nrow = length(setdiff(c(as.Date(1:(Update_Date - Start_Date), origin = Start_Date)), str_extract(string = sleep$End, pattern = "[0-9]{4}-[0-9]{2}-[0-9]{2}") %>% as.Date())),
ncol = 1),
matrix(NA,
nrow = length(setdiff(c(as.Date(1:(Update_Date - Start_Date), origin = Start_Date)), str_extract(string = sleep$End, pattern = "[0-9]{4}-[0-9]{2}-[0-9]{2}") %>% as.Date())),
ncol = ncol(sleep) - 1)) %>% as.data.frame()
add_on$V1 = as.Date(add_on$V1, origin = "1970-01-01")
names(add_on) = names(sleep)
add_on$enddates = add_on$Start
add_on$Start = add_on$End
sleep = rbind(sleep, add_on)
sleep = sleep[order(sleep$enddates, decreasing = FALSE), ]
sleep$Weekday = factor(x = rep(c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"), len = nrow(sleep)),
levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))
groupby_weekday = sleep %>%
group_by(Weekday) %>%
summarise(total = Sleep.quality %>% ">="(0) %>% sum(na.rm = TRUE),
avg_quality = Sleep.quality %>% mean(na.rm = TRUE) %>% "*"(100) %>% floor() %>% "/"(100),
time_in_bed = paste(str_extract(string = Time.in.bed, pattern = "[0-9]{1,2}") %>% as.numeric() %>% "*"(60) %>% "+"(str_extract(string = Time.in.bed, pattern = ":[0-9]{1,2}") %>% str_extract(pattern = "[0-9]{1,2}") %>% as.numeric()) %>% mean(na.rm = TRUE) %/% 60,
ifelse(str_extract(string = Time.in.bed, pattern = "[0-9]{1,2}") %>% as.numeric() %>% "*"(60) %>% "+"(str_extract(string = Time.in.bed, pattern = ":[0-9]{1,2}") %>% str_extract(pattern = "[0-9]{1,2}") %>% as.numeric()) %>% mean(na.rm = TRUE) %>% floor() <= 9,
yes = paste("0", str_extract(string = Time.in.bed, pattern = "[0-9]{1,2}") %>% as.numeric() %>% "*"(60) %>% "+"(str_extract(string = Time.in.bed, pattern = ":[0-9]{1,2}") %>% str_extract(pattern = "[0-9]{1,2}") %>% as.numeric()) %>% mean(na.rm = TRUE) %>% floor() %% 60, sep = ""),
no = paste(str_extract(string = Time.in.bed, pattern = "[0-9]{1,2}") %>% as.numeric() %>% "*"(60) %>% "+"(str_extract(string = Time.in.bed, pattern = ":[0-9]{1,2}") %>% str_extract(pattern = "[0-9]{1,2}") %>% as.numeric()) %>% mean(na.rm = TRUE) %>% floor() %% 60)), sep = ":")
#nap_prob = paste((Sleep.Notes %>% str_detect(pattern = "Took a nap \\(1 hour\\)") %>% sum(na.rm = TRUE) + Sleep.Notes %>% str_detect(pattern = "Took a nap \\(1.5 hours\\)") %>% sum(na.rm = TRUE) + Sleep.Notes %>% str_detect(pattern = "Took a nap \\(2 hours\\)") %>% sum(na.rm = TRUE)) %>% "/"(Sleep.quality %>% ">="(0) %>% sum(na.rm = TRUE)) %>% "*"(10000) %>% floor() %>% "/"(100), "%", sep = ""),
#avg_footsteps = Activity..steps. %>% mean(na.rm = TRUE) %>% floor()
)
names(groupby_weekday) = c("Weekday", "Sleeps Recorded", "Sleep Quality (%)", "Average Time in Bed")#, "Average Footsteps")
kable(groupby_weekday, format = "html", align = "l") %>%
kable_styling(bootstrap_options = c("hover", "responsive"))
library(htmltools)
library(bsplus)
bs_button("Click to show yeet", button_type = "primary") %>%
bs_attach_collapse("fjdsakjfsdakjsa")
?bs_collapse
a = c(-3, 2, -2, 1)
(1/3) * a^3 + (1/2) * a^2 - 2*a + 3
a = c(-4, -3, 0, 3, 4)
(3) * a^4 + (-54) * a^2 + 4
a = c(5, 10)
(-1) * a^3 + (12) * a^2 + 99*a - 400
a = c(5, 11)
(-1) * a^3 + (12) * a^2 + 99*a - 400
156 * 780 - 780^2 / 10
800 * 200 - 2 * 200^2
