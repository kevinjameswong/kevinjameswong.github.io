no = as.character(sum(RunSeconds) %% 60)), sep = ":"),
Pace = paste((ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %/% 60, ifelse(test = (ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60 <= 9,
yes = paste("0", (ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60, sep = ""),
no = paste((ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60)), sep = ":"))
# groupby_year = rbind(groupby_year, total_row)
names(groupby_year) = c("Year", "Total Runs", "Miles", "Time", "Pace")
groupby_year = groupby_year[order(groupby_year$Year), ]
kable(groupby_year, format = "html", align = "lrrrr") %>%
kable_styling(bootstrap_options = c("hover", "responsive"))# %>%
#row_spec(row = nrow(groupby_year), bold = TRUE, font_size = 21)
ggplot(data = groupby_year, aes(x = Year, y = Miles)) +
geom_bar(stat = "identity", fill = "darkblue") +
geom_text(aes(label = groupby_year$Miles), vjust = 1.6, color = "white", size = 5) +
xlab(label = "Year") +
ylab(label = "Miles") +
ggtitle(label = "Miles by Year") +
theme(plot.title = element_text(hjust = 0.5))
groupby_year = running %>%
group_by(Year) %>%
summarise(Total_Runs = sum(RunDistance > 0),
Days_Off = sum(RunDistance == 0),
Distance = sum(RunDistance),
Time = paste(ifelse(test = (sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60 <= 9,
yes = paste("0", (sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60, sep = ""),
no = as.character((sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60)),
ifelse(test = (sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60 <= 9,
yes = paste("0", (sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60, sep = ""),
no = as.character((sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60)),
ifelse(test = sum(RunSeconds) %% 60 <= 9,
yes = paste("0", sum(RunSeconds) %% 60, sep = ""),
no = as.character(sum(RunSeconds) %% 60)), sep = ":"),
Pace = paste((ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %/% 60, ifelse(test = (ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60 <= 9,
yes = paste("0", (ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60, sep = ""),
no = paste((ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60)), sep = ":"),
Miles_Per_Run = floor(sum(RunDistance) * 100 / sum(RunDistance > 0)) / 100,
Miles_Per_Day = floor(sum(RunDistance) * 100 / sum(RunDistance >= 0)) / 100,
Yearly_Mile_Rate = floor(sum(RunDistance) * 100 * 365 / sum(RunDistance >= 0)) / 100,
MPH = floor(sum(RunDistance) / (((((sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60) * 60 * 60 + ((sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60) * 60 + sum(RunSeconds) %% 60)) / (60 * 60)) * 1000) / 1000,
Calories = sum(RunCalories)
)
names(groupby_year) = c("Year", "Total Runs", "Days Off", "Miles", "Time", "Pace", "Miles Per Run", "Miles Per Day", "Yearly Mile Rate", "MPH", "Total Calories Burned")
kable(x = groupby_year, format = "html", align = "lrrrrrrrrrrrrrr") %>%
kable_styling(bootstrap_options = c("hover", "responsive")) %>%
scroll_box(width = "100%", height = "100%")
groupby_yearmonth = running %>%
group_by(YearMonth) %>%
summarise(Total_Runs = sum(RunDistance > 0),
Distance = sum(RunDistance),
Time = paste(ifelse(test = (sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60 <= 9,
yes = paste("0", (sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60, sep = ""),
no = as.character((sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60)),
ifelse(test = (sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60 <= 9,
yes = paste("0", (sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60, sep = ""),
no = as.character((sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60)),
ifelse(test = sum(RunSeconds) %% 60 <= 9,
yes = paste("0", sum(RunSeconds) %% 60, sep = ""),
no = as.character(sum(RunSeconds) %% 60)), sep = ":"),
Pace = paste((ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %/% 60, ifelse(test = (ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60 <= 9,
yes = paste("0", (ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60, sep = ""),
no = paste((ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60)), sep = ":"))
# groupby_yearmonth$yearmonth = paste(groupby_yearmonth$Month, groupby_yearmonth$Year, sep = " ")
# groupby_yearmonth = select(as.data.frame(select(groupby_yearmonth, - Month)), - Year)
# groupby_yearmonth = groupby_yearmonth[, c(ncol(groupby_yearmonth), 1:ncol(groupby_yearmonth) - 1)]
#
# groupby_yearmonth = rbind(groupby_yearmonth, total_row)
names(groupby_yearmonth) = c("Month", "Total Runs", "Miles", "Time", "Pace")
kable(groupby_yearmonth, format = "html", align = "lrrrr") %>%
kable_styling(bootstrap_options = c("hover", "responsive")) #%>%
#row_spec(row = nrow(groupby_yearmonth), bold = TRUE, font_size = 21)
groupby_yearmonth = running %>%
group_by(YearMonth) %>%
summarise(Total_Runs = sum(RunDistance > 0),
Days_Off = sum(RunDistance == 0),
Distance = sum(RunDistance),
Time = paste(ifelse(test = (sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60 <= 9,
yes = paste("0", (sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60, sep = ""),
no = as.character((sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60)),
ifelse(test = (sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60 <= 9,
yes = paste("0", (sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60, sep = ""),
no = as.character((sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60)),
ifelse(test = sum(RunSeconds) %% 60 <= 9,
yes = paste("0", sum(RunSeconds) %% 60, sep = ""),
no = as.character(sum(RunSeconds) %% 60)), sep = ":"),
Pace = paste((ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %/% 60, ifelse(test = (ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60 <= 9,
yes = paste("0", (ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60, sep = ""),
no = paste((ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60)), sep = ":"),
Miles_Per_Run = floor(sum(RunDistance) * 100 / sum(RunDistance > 0)) / 100,
Miles_Per_Day = floor(sum(RunDistance) * 100 / sum(RunDistance >= 0)) / 100,
Yearly_Mile_Rate = floor(sum(RunDistance) * 100 * 365 / sum(RunDistance >= 0)) / 100,
MPH = floor(sum(RunDistance) / (((((sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60) * 60 * 60 + ((sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60) * 60 + sum(RunSeconds) %% 60)) / (60 * 60)) * 1000) / 1000,
Calories = sum(RunCalories)
)
names(groupby_yearmonth) = c("Month", "Total Runs", "Days Off", "Miles", "Time", "Pace", "Miles Per Run", "Miles Per Day", "Yearly Mile Rate", "MPH", "Total Calories Burned")
kable(x = groupby_yearmonth, format = "html", align = "lrrrrrrrrrrrrrr") %>%
kable_styling(bootstrap_options = c("hover", "responsive")) %>%
scroll_box(width = "100%", height = "100%")
ggplot(data = groupby_yearmonth, aes(x = Month, y = Miles %>% as.numeric())) +
geom_bar(stat = "identity", fill = "darkblue") +
geom_text(aes(label = groupby_yearmonth$Miles), vjust = 1.6, color = "white", size = 2) +
ggtitle("Month vs. Miles") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = groupby_weekday, aes(x = Weekday, y = Miles)) +
geom_bar(stat = "identity", fill = "darkblue") +
geom_text(aes(label = groupby_weekday$Miles), vjust = 1.6, color = "white", size = 5) +
ggtitle("Weekday vs. Miles") +
theme(plot.title = element_text(hjust = 0.5))
library(knitr)
library(kableExtra)
library(tidyverse)
library(stringr)
library(ggplot2)
Start_Date = as.Date("1/28/2018", format = "%m/%d/%Y")
Update_Date = as.Date("5/27/2019", format = "%m/%d/%Y")
read_data = read.csv(file = "~/Documents/Kevin Stuff/Not Work/website/Website Files/more website files/Running_5_27_2019.csv", skip = 1)
running = head(x = read_data, n = (Update_Date - Start_Date - 1) %>% as.integer())[, c(1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 18, 19, 25)]
names(running) = c("Location", "Weekday_Read", "Month_Number_Read", "Day Number", "Date", "Run Calories", "Run Distance", "Run Minutes", "Run Seconds", "Walk Calories", "Walk Distance", "Walk Minutes", "Walk Seconds", "StartTime")
running$DayNumber    = running$`Day Number`    %>% as.character() %>% as.integer()
running$RunCalories  = running$`Run Calories`  %>% as.character() %>% as.integer()
running$RunDistance  = running$`Run Distance`  %>% as.character() %>% as.numeric()
running$RunMinutes   = running$`Run Minutes`   %>% as.character() %>% as.integer()
running$RunSeconds   = running$`Run Seconds`   %>% as.character() %>% as.integer()
running$WalkCalories = running$`Walk Calories` %>% as.character() %>% as.integer()
running$WalkDistance = running$`Walk Distance` %>% as.character() %>% as.numeric()
running$WalkMinutes  = running$`Walk Minutes`  %>% as.character() %>% as.integer()
running$WalkSeconds  = running$`Walk Seconds`  %>% as.character() %>% as.integer()
running = running[ , c(1, 2, 3, 5, 14:23)]
running$Month = factor(running$Month_Number_Read)
levels(running$Month) = c(month.name, "Total")
running$Year = paste("20", (str_sub(running$Date, start = 7, end = 8)), sep = "") %>% factor(levels = c(unique(paste("20", (str_sub(running$Date, start = 7, end = 8)), sep = "")), "Total"))
running$Weekday = factor(x = running$Weekday_Read,
levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday", "Total"))
running$YearMonth = paste(running$Month, " ", running$Year, sep = "") %>% factor(levels = paste(month.name, rep(running$Year %>% levels(), each = length(month.name)))[1:(Update_Date %>% str_extract(pattern = "-[0-9]{2}-") %>% str_extract(pattern = "[0-9]{2}") %>% as.integer() + (Update_Date %>% str_extract(pattern = "[0-9]{4}") %>% as.integer() - Start_Date %>% str_extract(pattern = "[0-9]{4}") %>% as.integer()) %>% "*"(12))])
running = select(running, - Weekday_Read, - Month_Number_Read)
total_row = c("Total",
sum(running$RunDistance > 0),
sum(running$RunDistance),
"ok",
"pace")
groupby_year = running %>%
group_by(Year) %>%
summarise(Total_Runs = sum(RunDistance > 0),
Distance = sum(RunDistance),
Time = paste(ifelse(test = (sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60 <= 9,
yes = paste("0", (sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60, sep = ""),
no = as.character((sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60)),
ifelse(test = (sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60 <= 9,
yes = paste("0", (sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60, sep = ""),
no = as.character((sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60)),
ifelse(test = sum(RunSeconds) %% 60 <= 9,
yes = paste("0", sum(RunSeconds) %% 60, sep = ""),
no = as.character(sum(RunSeconds) %% 60)), sep = ":"),
Pace = paste((ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %/% 60, ifelse(test = (ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60 <= 9,
yes = paste("0", (ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60, sep = ""),
no = paste((ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60)), sep = ":"))
# groupby_year = rbind(groupby_year, total_row)
names(groupby_year) = c("Year", "Total Runs", "Miles", "Time", "Pace")
groupby_year = groupby_year[order(groupby_year$Year), ]
kable(groupby_year, format = "html", align = "lrrrr") %>%
kable_styling(bootstrap_options = c("hover", "responsive"))# %>%
#row_spec(row = nrow(groupby_year), bold = TRUE, font_size = 21)
ggplot(data = groupby_year, aes(x = Year, y = Miles)) +
geom_bar(stat = "identity", fill = "darkblue") +
geom_text(aes(label = groupby_year$Miles), vjust = 1.6, color = "white", size = 5) +
xlab(label = "Year") +
ylab(label = "Miles") +
ggtitle(label = "Miles by Year") +
theme(plot.title = element_text(hjust = 0.5))
groupby_year = running %>%
group_by(Year) %>%
summarise(Total_Runs = sum(RunDistance > 0),
Days_Off = sum(RunDistance == 0),
Distance = sum(RunDistance),
Time = paste(ifelse(test = (sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60 <= 9,
yes = paste("0", (sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60, sep = ""),
no = as.character((sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60)),
ifelse(test = (sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60 <= 9,
yes = paste("0", (sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60, sep = ""),
no = as.character((sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60)),
ifelse(test = sum(RunSeconds) %% 60 <= 9,
yes = paste("0", sum(RunSeconds) %% 60, sep = ""),
no = as.character(sum(RunSeconds) %% 60)), sep = ":"),
Pace = paste((ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %/% 60, ifelse(test = (ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60 <= 9,
yes = paste("0", (ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60, sep = ""),
no = paste((ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60)), sep = ":"),
Miles_Per_Run = floor(sum(RunDistance) * 100 / sum(RunDistance > 0)) / 100,
Miles_Per_Day = floor(sum(RunDistance) * 100 / sum(RunDistance >= 0)) / 100,
Yearly_Mile_Rate = floor(sum(RunDistance) * 100 * 365 / sum(RunDistance >= 0)) / 100,
MPH = floor(sum(RunDistance) / (((((sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60) * 60 * 60 + ((sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60) * 60 + sum(RunSeconds) %% 60)) / (60 * 60)) * 1000) / 1000,
Calories = sum(RunCalories)
)
names(groupby_year) = c("Year", "Total Runs", "Days Off", "Miles", "Time", "Pace", "Miles Per Run", "Miles Per Day", "Yearly Mile Rate", "MPH", "Total Calories Burned")
kable(x = groupby_year, format = "html", align = "lrrrrrrrrrrrrrr") %>%
kable_styling(bootstrap_options = c("hover", "responsive")) %>%
scroll_box(width = "100%", height = "100%")
groupby_yearmonth = running %>%
group_by(YearMonth) %>%
summarise(Total_Runs = sum(RunDistance > 0),
Distance = sum(RunDistance),
Time = paste(ifelse(test = (sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60 <= 9,
yes = paste("0", (sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60, sep = ""),
no = as.character((sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60)),
ifelse(test = (sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60 <= 9,
yes = paste("0", (sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60, sep = ""),
no = as.character((sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60)),
ifelse(test = sum(RunSeconds) %% 60 <= 9,
yes = paste("0", sum(RunSeconds) %% 60, sep = ""),
no = as.character(sum(RunSeconds) %% 60)), sep = ":"),
Pace = paste((ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %/% 60, ifelse(test = (ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60 <= 9,
yes = paste("0", (ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60, sep = ""),
no = paste((ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60)), sep = ":"))
# groupby_yearmonth$yearmonth = paste(groupby_yearmonth$Month, groupby_yearmonth$Year, sep = " ")
# groupby_yearmonth = select(as.data.frame(select(groupby_yearmonth, - Month)), - Year)
# groupby_yearmonth = groupby_yearmonth[, c(ncol(groupby_yearmonth), 1:ncol(groupby_yearmonth) - 1)]
#
# groupby_yearmonth = rbind(groupby_yearmonth, total_row)
names(groupby_yearmonth) = c("Month", "Total Runs", "Miles", "Time", "Pace")
kable(groupby_yearmonth, format = "html", align = "lrrrr") %>%
kable_styling(bootstrap_options = c("hover", "responsive")) #%>%
#row_spec(row = nrow(groupby_yearmonth), bold = TRUE, font_size = 21)
groupby_yearmonth = running %>%
group_by(YearMonth) %>%
summarise(Total_Runs = sum(RunDistance > 0),
Days_Off = sum(RunDistance == 0),
Distance = sum(RunDistance),
Time = paste(ifelse(test = (sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60 <= 9,
yes = paste("0", (sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60, sep = ""),
no = as.character((sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60)),
ifelse(test = (sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60 <= 9,
yes = paste("0", (sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60, sep = ""),
no = as.character((sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60)),
ifelse(test = sum(RunSeconds) %% 60 <= 9,
yes = paste("0", sum(RunSeconds) %% 60, sep = ""),
no = as.character(sum(RunSeconds) %% 60)), sep = ":"),
Pace = paste((ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %/% 60, ifelse(test = (ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60 <= 9,
yes = paste("0", (ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60, sep = ""),
no = paste((ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60)), sep = ":"),
Miles_Per_Run = floor(sum(RunDistance) * 100 / sum(RunDistance > 0)) / 100,
Miles_Per_Day = floor(sum(RunDistance) * 100 / sum(RunDistance >= 0)) / 100,
Yearly_Mile_Rate = floor(sum(RunDistance) * 100 * 365 / sum(RunDistance >= 0)) / 100,
MPH = floor(sum(RunDistance) / (((((sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60) * 60 * 60 + ((sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60) * 60 + sum(RunSeconds) %% 60)) / (60 * 60)) * 1000) / 1000,
Calories = sum(RunCalories)
)
names(groupby_yearmonth) = c("Month", "Total Runs", "Days Off", "Miles", "Time", "Pace", "Miles Per Run", "Miles Per Day", "Yearly Mile Rate", "MPH", "Total Calories Burned")
kable(x = groupby_yearmonth, format = "html", align = "lrrrrrrrrrrrrrr") %>%
kable_styling(bootstrap_options = c("hover", "responsive")) %>%
scroll_box(width = "100%", height = "100%")
groupby_weekday = running %>%
group_by(Weekday) %>%
summarise(Total_Runs = sum(RunDistance > 0),
Distance = sum(RunDistance),
Time = paste(ifelse(test = (sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60 <= 9,
yes = paste("0", (sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60, sep = ""),
no = as.character((sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60)),
ifelse(test = (sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60 <= 9,
yes = paste("0", (sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60, sep = ""),
no = as.character((sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60)),
ifelse(test = sum(RunSeconds) %% 60 <= 9,
yes = paste("0", sum(RunSeconds) %% 60, sep = ""),
no = as.character(sum(RunSeconds) %% 60)), sep = ":"),
Pace = paste((ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %/% 60, ifelse(test = (ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60 <= 9,
yes = paste("0", (ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60, sep = ""),
no = paste((ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60)), sep = ":"))
# Miles_Per_Run = floor(sum(RunDistance) * 100 / sum(RunDistance > 0)) / 100,
#MPH = floor(sum(RunDistance) / (((((sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60) * 60 * 60 + ((sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60) * 60 + sum(RunSeconds) %% 60)) / (60 * 60)) * 1000) / 1000,
#Calories = sum(RunCalories)
#)
# groupby_weekday = rbind(groupby_weekday, total_row)
names(groupby_weekday) = c("Weekday", "Total Runs", "Miles", "Time", "Pace")#, "MPH", "Calories")
# names(groupby_weekday) = c("Weekday", "Total Runs", "Distance", "Time", "Pace", "Miles Per Run", "MPH", "Calories")
kable(groupby_weekday, format = "html", align = "lrrrr") %>%
kable_styling(bootstrap_options = c("hover", "responsive"))# %>%
#row_spec(row = nrow(groupby_weekday), bold = TRUE, font_size = 21)
ggplot(data = groupby_weekday, aes(x = Weekday, y = Miles)) +
geom_bar(stat = "identity", fill = "darkblue") +
geom_text(aes(label = groupby_weekday$Miles), vjust = 1.6, color = "white", size = 5) +
ggtitle("Weekday vs. Miles") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = groupby_weekday, aes(x = Weekday, y = Miles)) +
geom_bar(stat = "identity", fill = "darkblue") +
geom_text(aes(label = groupby_weekday$Distance), vjust = 1.6, color = "white", size = 5) +
ggtitle("Weekday vs. Miles") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = groupby_weekday, aes(x = Weekday, y = Miles)) +
geom_bar(stat = "identity", fill = "darkblue") +
geom_text(aes(label = groupby_weekday$Miles), vjust = 1.6, color = "white", size = 5) +
ggtitle("Weekday vs. Miles") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = groupby_weekday, aes(x = Weekday, y = Distance)) +
geom_bar(stat = "identity", fill = "darkblue") +
geom_text(aes(label = groupby_weekday$Miles), vjust = 1.6, color = "white", size = 5) +
ggtitle("Weekday vs. Miles") +
theme(plot.title = element_text(hjust = 0.5))
View(groupby_weekday)
str(groupby_weekday)
groupby_weekday$Miles
ggplot(data = groupby_weekday, aes(x = Weekday, y = Miles)) +
geom_bar(stat = "identity", fill = "darkblue") +
geom_text(aes(label = groupby_weekday$Miles %>% as.character()), vjust = 1.6, color = "white", size = 5) +
ggtitle("Weekday vs. Miles") +
theme(plot.title = element_text(hjust = 0.5))
groupby_weekday$Miles %>% as.character()
groupby_weekday$Miles
c = c(3, 4.93)
c = c(3, 4.93); c
Sys.time(), '%d %B %Y'
format(Sys.time(), '%d %B %Y')
format(Sys.time(), '%dd %B %Y')
format(Sys.time(), '% %B %Y')
format(Sys.time(), '%d %B %Y')
Sys.time()
format(Sys.time(), '%d') %>% as.numeric
format(Sys.time(), '%d') %>% as.numeric()
?format
format(Update_Date, "%D")
format(Update_Date, "%B")
format(Update_Date, "%d")
Update_Date = as.Date("5/18/2019", format = "%m/%d/%Y")
format(Update_Date, "%B")
format(Update_Date, "%d")
format(Update_Date, "%Y") #returns 18
format(Update_Date, "%a")
format(Update_Date, "%A")
format(Update_Date, "%C") #returns Saturday
format(Update_Date, "%c") #returns Saturday
format(Update_Date, "%D") #returns Saturday
format(Update_Date, "%e") #returns Saturday
format(Update_Date, "%E") #returns Saturday
format(Update_Date, "%e") #returns Saturday
format(Update_Date, "%F") #returns Saturday
format(Update_Date, "%f") #returns Saturday
format(Update_Date, "%G") #returns Saturday
format(Update_Date, "%g") #returns Saturday
format(x = Update_Date, "%B") #returns May
format(x = Update_Date, "%d") #returns 18
format(x = Update_Date, "%Y") #returns 2019
format(x = Update_Date, digits = "%B") #returns May
format(x = Update_Date, "%B") #returns May
format(x = Update_Date, format = "%B") #returns May
format(x = Update_Date, "%d") #returns 18
format(x = Update_Date, f ormat = "%d") #returns 18
format(x = Update_Date, format = "%Y") #returns 2019
format(x = Update_Date, format = "%B") #returns May
format(x = Update_Date, format = "%d") #returns 18
format(x = Update_Date, format = "%Y") #returns 2019
paste(
format(x = Update_Date, format = "%B"),
format(x = Update_Date, format = "%B"),
format(x = Update_Date, format = "%Y"),
sep = ""
)
paste(
format(x = Update_Date, format = "%B"),
format(x = Update_Date, format = "%d"),
format(x = Update_Date, format = "%Y"),
sep = ""
)
paste(
format(x = Update_Date, format = "%B"),
" ",
format(x = Update_Date, format = "%d"),
" ",
format(x = Update_Date, format = "%Y"),
sep = ""
)
paste(
format(x = Update_Date, format = "%B"),
" ",
format(x = Update_Date, format = "%d"),
" ,",
format(x = Update_Date, format = "%Y"),
sep = ""
)
paste(
format(x = Update_Date, format = "%B"),
" ",
format(x = Update_Date, format = "%d"),
", ",
format(x = Update_Date, format = "%Y"),
sep = ""
)
paste(
format(x = Update_Date, format = "%B"),
" ",
format(x = Update_Date, format = "%d"),
",",
format(x = Update_Date, format = "%Y"),
sep = ""
)
paste(
format(x = Update_Date, format = "%B"),
" ",
format(x = Update_Date, format = "%d"),
", ",
format(x = Update_Date, format = "%Y"),
sep = ""
)
paste(format(x = Update_Date, format = "%B"), " ", format(x = Update_Date, format = "%d"), ", ", format(x = Update_Date, format = "%Y"), sep = "")
Update_Date = as.Date("5/3/2019", format = "%m/%d/%Y")
format(x = Update_Date, format = "%B") #returns May
format(x = Update_Date, format = "%d") #returns 18
format(x = Update_Date, format = "%Y") #returns 2019
paste(format(x = Update_Date, format = "%B"), " ", format(x = Update_Date, format = "%d"), ", ", format(x = Update_Date, format = "%Y"), sep = "")
Update_Date = as.Date("5/3/19", format = "%m/%d/%Y")
format(x = Update_Date, format = "%B") #returns May
format(x = Update_Date, format = "%d") #returns 18
format(x = Update_Date, format = "%Y") #returns 2019
paste(format(x = Update_Date, format = "%B"), " ", format(x = Update_Date, format = "%d"), ", ", format(x = Update_Date, format = "%Y"), sep = "")
paste(format(x = Update_Date, format = "%B"), " ", format(x = Update_Date, format = "%d") %>% as.numeric(), ", ", format(x = Update_Date, format = "%Y") %>% as.numeric(), sep = "")
x = c(8.5, 8.1, 8.05, 8.01, 8.005, 8.001, 7.9, 7.95, 7.99, 7.995, 7.999)
a = (x^2 - 8*x) / x^2 - x - 56; a
x = c(8.5, 8.1, 8.05, 8.01, 8.005, 8.001, 7.9, 7.95, 7.99, 7.995, 7.999)
a = (x^2 - 8*x) / (x^2 - x - 56); a
?tan()
x = c(1, 0.5, .1, .05, .01, .005)
a = (tan(x)-x) / x^3; a
cot(pi + 0.01)
tan(pi + 0.01)
1 / tan(pi + 0.01)
1 / tan(2pi - 0.01)
1 / tan(2*pi - 0.01)
1 / tan(pi + 0.01)
3 - 5 * 64  +8 * 8 * 8
195 *3
sqrt(576)
sqrt(576 + 49)
library(knitr)
library(kableExtra)
library(tidyverse)
library(stringr)
library(ggplot2)
Start_Date = as.Date("1/28/2018", format = "%m/%d/%Y")
read_data = read.csv(file = "~/Documents/Kevin Stuff/Not Work/website/Website Files/more website files/Running_6_8_2019.csv", skip = 1)
Update_Date = as.Date("6/8/2019", format = "%m/%d/%Y")
read_data = read.csv(file = "~/Documents/Kevin Stuff/Not Work/website/Website Files/more website files/Running_6_8_2019.csv", skip = 1)
running = head(x = read_data, n = (Update_Date - Start_Date - 1) %>% as.integer())[, c(1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 18, 19, 25)]
names(running) = c("Location", "Weekday_Read", "Month_Number_Read", "Day Number", "Date", "Run Calories", "Run Distance", "Run Minutes", "Run Seconds", "Walk Calories", "Walk Distance", "Walk Minutes", "Walk Seconds", "StartTime")
running$DayNumber    = running$`Day Number`    %>% as.character() %>% as.integer()
running$RunCalories  = running$`Run Calories`  %>% as.character() %>% as.integer()
running$RunDistance  = running$`Run Distance`  %>% as.character() %>% as.numeric()
running$RunMinutes   = running$`Run Minutes`   %>% as.character() %>% as.integer()
running$RunSeconds   = running$`Run Seconds`   %>% as.character() %>% as.integer()
running$WalkCalories = running$`Walk Calories` %>% as.character() %>% as.integer()
running$WalkDistance = running$`Walk Distance` %>% as.character() %>% as.numeric()
running$WalkMinutes  = running$`Walk Minutes`  %>% as.character() %>% as.integer()
running$WalkSeconds  = running$`Walk Seconds`  %>% as.character() %>% as.integer()
running = running[ , c(1, 2, 3, 5, 14:23)]
running$Month = factor(running$Month_Number_Read)
levels(running$Month) = c(month.name, "Total")
running$Year = paste("20", (str_sub(running$Date, start = 7, end = 8)), sep = "") %>% factor(levels = c(unique(paste("20", (str_sub(running$Date, start = 7, end = 8)), sep = "")), "Total"))
running$Weekday = factor(x = running$Weekday_Read,
levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday", "Total"))
running$YearMonth = paste(running$Month, " ", running$Year, sep = "") %>% factor(levels = paste(month.name, rep(running$Year %>% levels(), each = length(month.name)))[1:(Update_Date %>% str_extract(pattern = "-[0-9]{2}-") %>% str_extract(pattern = "[0-9]{2}") %>% as.integer() + (Update_Date %>% str_extract(pattern = "[0-9]{4}") %>% as.integer() - Start_Date %>% str_extract(pattern = "[0-9]{4}") %>% as.integer()) %>% "*"(12))])
running = select(running, - Weekday_Read, - Month_Number_Read)
running
running$Year == 2019
running$Year == 2019 & running$Location == "Outside"
running[,(running$Year == 2019 & running$Location == "Outside")]
running[(running$Year == 2019 & running$Location == "Outside"), ]
t = running[(running$Year == 2019 & running$Location == "Outside"), ]
t$RunDistance
sum(t$RunDistance)
sum(t$RunMinutes) * 60
sum(t$RunMinutes) * 60 + sum(t$RunSeconds)
sum(t$RunDistance) / (sum(t$RunMinutes) * 60 + sum(t$RunSeconds))
(sum(t$RunMinutes) * 60 + sum(t$RunSeconds)) / sum(t$RunDistance)
l = (sum(t$RunMinutes) * 60 + sum(t$RunSeconds)) / sum(t$RunDistance)
l // 60
l %% 60
t = running[(running$Year == 2019 & running$Location == "Outside" & running$RunDistance < 10), ]
l = (sum(t$RunMinutes) * 60 + sum(t$RunSeconds)) / sum(t$RunDistance)
l = (sum(t$RunMinutes) * 60 + sum(t$RunSeconds)) / sum(t$RunDistance); l
t = running[(running$Year == 2018 & running$Location == "Outside"), ]
u = running[(running$Year == 2019 & running$Location == "Outside"), ]
k = (sum(t$RunMinutes) * 60 + sum(t$RunSeconds)) / sum(t$RunDistance); k
l = (sum(u$RunMinutes) * 60 + sum(u$RunSeconds)) / sum(u$RunDistance); l
t = running[(running$Year == 2018 & running$Location == "Outside"), ]
u = running[(running$Year == 2019 & running$Location == "Outside"), ]
k = (sum(t$RunMinutes) * 60 + sum(t$RunSeconds)) / sum(t$RunDistance); k
l = (sum(u$RunMinutes) * 60 + sum(u$RunSeconds)) / sum(u$RunDistance); l
t = running[(running$Year == 2018 & running$Location == "Outside"), ]
u = running[(running$Year == 2019 & running$Location == "Outside"), ]
k = (sum(t$RunMinutes) * 60 + sum(t$RunSeconds)) / sum(t$RunDistance); k
l = (sum(u$RunMinutes) * 60 + sum(u$RunSeconds)) / sum(u$RunDistance); l
a = average(t$RunDistance); a
t = running[(running$Year == 2018 & running$Location == "Outside"), ]
u = running[(running$Year == 2019 & running$Location == "Outside"), ]
k = (sum(t$RunMinutes) * 60 + sum(t$RunSeconds)) / sum(t$RunDistance); k
l = (sum(u$RunMinutes) * 60 + sum(u$RunSeconds)) / sum(u$RunDistance); l
a = mean(t$RunDistance); a
b = mean(u$RunDistance); b
t$RunDistance
a = mean(t$RunDistance); a
mean(t$RunDistance)
u$RunDistance
t = running[(running$Year == 2018 & running$Location == "Outside" & running$RunDistance < 10), ]
u = running[(running$Year == 2019 & running$Location == "Outside" & running$RunDistance < 10), ]
k = (sum(t$RunMinutes) * 60 + sum(t$RunSeconds)) / sum(t$RunDistance); k
l = (sum(u$RunMinutes) * 60 + sum(u$RunSeconds)) / sum(u$RunDistance); l
a = mean(t$RunDistance); a
b = mean(u$RunDistance); b
t = running[(running$Year == 2018 & running$Location == "Outside"), ]
u = running[(running$Year == 2019 & running$Location == "Outside"), ]
k = (sum(t$RunMinutes) * 60 + sum(t$RunSeconds)) / sum(t$RunDistance); k
l = (sum(u$RunMinutes) * 60 + sum(u$RunSeconds)) / sum(u$RunDistance); l
a = mean(t$RunDistance); a
b = mean(u$RunDistance); b
t = running[(running$Year == 2018 & running$Location == "Outside"), ]
u = running[(running$Year == 2019 & running$Location == "Outside"), ]
k = (sum(t$RunMinutes) * 60 + sum(t$RunSeconds)) / sum(t$RunDistance); k
l = (sum(u$RunMinutes) * 60 + sum(u$RunSeconds)) / sum(u$RunDistance); l
a = mean(t$RunDistance); a
b = mean(u$RunDistance); b
