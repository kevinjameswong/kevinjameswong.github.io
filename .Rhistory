read_data = read.csv(file = "~/Documents/Kevin Stuff/Not Work/website/Website Files/more website files/Running_5_12_2019.csv", skip = 1)
read_data = read_data[c(1:(Update_Date - Start_Date) - 1), ]
running = read_data[, c(1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 18, 19, 25)]
names(running) = c("Location", "Weekday_Read", "Month_Number_Read", "Day Number", "Date", "Run Calories", "Run Distance", "Run Minutes", "Run Seconds", "Walk Calories", "Walk Distance", "Walk Minutes", "Walk Seconds", "StartTime")
running$DayNumber    = running$`Day Number`    %>% as.character() %>% as.integer()
running$RunCalories  = running$`Run Calories`  %>% as.character() %>% as.integer()
running$RunDistance  = running$`Run Distance`  %>% as.character() %>% as.numeric()
running$RunMinutes   = running$`Run Minutes`   %>% as.character() %>% as.integer()
running$RunSeconds   = running$`Run Seconds`   %>% as.character() %>% as.integer()
running$WalkCalories = running$`Walk Calories` %>% as.character() %>% as.integer()
running$WalkDistance = running$`Walk Distance` %>% as.character() %>% as.numeric()
running$WalkMinutes  = running$`Walk Minutes`  %>% as.character() %>% as.integer()
running$WalkSeconds  = running$`Walk Seconds`  %>% as.character() %>% as.integer()
running = running[ , c(1, 2, 3, 5, 14:23)]
running$Month = factor(running$Month_Number_Read)
levels(running$Month) = c("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December", "Total")
running$Year = factor(x = as.factor(paste("20", (str_sub(running$Date, start = 7, end = 8)), sep = "")),
levels = c(2018, 2019, "Total"))
running$Weekday = factor(x = running$Weekday_Read,
levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday", "Total"))
running$YearMonth = paste(running$Month, " ", running$Year, sep = "") %>% as.factor()
running = select(running, - Weekday_Read, - Month_Number_Read)
str(running)
paste(running$Month, " ", running$Year, sep = "") %>% as.factor()
sort(running$YearMonth)
running$Month
running$Month %>% factor
running$Month %>% levels()
paste(running$Month, " ", running$Year, sep = "") %>% as.factor()
running$Month %>% levels() %>% count()
running %>% group_by(Year, Month) %>% levels() %>% count()
running %>% group_by(Year, Month)
running %>% group_by(YearMonth)
running$YearMonth
running %>% group_by(Year, Month)
running
read_data = read_data[c(1:(Update_Date - Start_Date) - 1), ]
running = read_data[, c(1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 18, 19, 25)]
names(running) = c("Location", "Weekday_Read", "Month_Number_Read", "Day Number", "Date", "Run Calories", "Run Distance", "Run Minutes", "Run Seconds", "Walk Calories", "Walk Distance", "Walk Minutes", "Walk Seconds", "StartTime")
running$DayNumber    = running$`Day Number`    %>% as.character() %>% as.integer()
running$RunCalories  = running$`Run Calories`  %>% as.character() %>% as.integer()
running$RunDistance  = running$`Run Distance`  %>% as.character() %>% as.numeric()
running$RunMinutes   = running$`Run Minutes`   %>% as.character() %>% as.integer()
running$RunSeconds   = running$`Run Seconds`   %>% as.character() %>% as.integer()
running$WalkCalories = running$`Walk Calories` %>% as.character() %>% as.integer()
running$WalkDistance = running$`Walk Distance` %>% as.character() %>% as.numeric()
running$WalkMinutes  = running$`Walk Minutes`  %>% as.character() %>% as.integer()
running$WalkSeconds  = running$`Walk Seconds`  %>% as.character() %>% as.integer()
running = running[ , c(1, 2, 3, 5, 14:23)]
running$Month = factor(running$Month_Number_Read)
levels(running$Month) = c("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December", "Total")
running$Year = factor(x = as.factor(paste("20", (str_sub(running$Date, start = 7, end = 8)), sep = "")),
levels = c(2018, 2019, "Total"))
running$Weekday = factor(x = running$Weekday_Read,
levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday", "Total"))
# running$YearMonth = paste(running$Month, " ", running$Year, sep = "") %>% as.factor()
running = select(running, - Weekday_Read, - Month_Number_Read)
months = c("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December")
years = c(2018, 2019)
c(paste(months,"2018"),paste(months,"2019"))[1:17]
months = c("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December")
years = c(2018, 2019)
paste( month.name, rep( years, each=12) )
output <- paste( month.name, rep( years, each=12) )
output[1:17]
month.name
output <- paste( month.name, rep(years, each = length(month.name)))
output[1:17]
Start_Date = as.Date("1/28/2018", format = "%m/%d/%Y")
Update_Date = as.Date("5/12/2019", format = "%m/%d/%Y")
Start_Date = as.Date("1/28/2018", format = "%m/%d/%Y")
Update_Date = as.Date("5/12/2019", format = "%m/%d/%Y")
running$Year = factor(x = as.factor(paste("20", (str_sub(running$Date, start = 7, end = 8)), sep = "")),
levels = c(2018, 2019, "Total"))
cake = factor(x = as.factor(paste("20", (str_sub(running$Date, start = 7, end = 8)), sep = "")),
levels = c(2018, 2019, "Total"))
weekdays.Date()
month.name
cake
unique(cake)
cake = factor(x = as.factor(paste("20", (str_sub(running$Date, start = 7, end = 8)), sep = "")),
levels = c(unique(as.factor(paste("20", (str_sub(running$Date, start = 7, end = 8)), sep = ""))), "Total"))
unique(cake)
cake
paste("20", (str_sub(running$Date, start = 7, end = 8)), sep = "")
paste("20", (str_sub(running$Date, start = 7, end = 8)), sep = "") %>% factor()
paste("20", (str_sub(running$Date, start = 7, end = 8)), sep = "") %>% factor(levels = unique(paste("20", (str_sub(running$Date, start = 7, end = 8)), sep = "")))
paste("20", (str_sub(running$Date, start = 7, end = 8)), sep = "") %>% factor(levels = c(unique(paste("20", (str_sub(running$Date, start = 7, end = 8)), sep = ""), "Total")))
cake = factor(x = as.factor(paste("20", (str_sub(running$Date, start = 7, end = 8)), sep = "")),
levels = c(2018, 2019, "Total"))
cake
paste("20", (str_sub(running$Date, start = 7, end = 8)
unique(paste("20", (str_sub(running$Date, start = 7, end = 8)), sep = "")
unique(paste("20", (str_sub(running$Date, start = 7, end = 8)), sep = "")
unique(paste("20", (str_sub(running$Date, start = 7, end = 8)), sep = "")
paste("20", (str_sub(running$Date, start = 7, end = 8)), sep = "") %>%
factor(levels = c(unique(paste("20", (str_sub(running$Date, start = 7, end = 8)), sep = ""), "Total")))
paste("20", (str_sub(running$Date, start = 7, end = 8)), sep = "") %>%
factor(levels = c(unique(paste("20", (str_sub(running$Date, start = 7, end = 8)), sep = "")), "Total"))
factor(levels = c(unique(paste("20", (str_sub(running$Date, start = 7, end = 8)), sep = "")))
factor(levels = c(unique(paste("20", (str_sub(running$Date, start = 7, end = 8)), sep = ""))
paste("20", (str_sub(running$Date, start = 7, end = 8)), sep = "") %>%
factor(levels = c(unique(paste("20", (str_sub(running$Date, start = 7, end = 8)), sep = ""))))
paste("20", (str_sub(running$Date, start = 7, end = 8)), sep = "") %>%
factor(levels = unique(paste("20", (str_sub(running$Date, start = 7, end = 8)), sep = "")))
paste("20", (str_sub(running$Date, start = 7, end = 8)), sep = "") %>%
factor(levels = c(unique(paste("20", (str_sub(running$Date, start = 7, end = 8)), sep = "")), "Total"))
paste("20", (str_sub(running$Date, start = 7, end = 8)), sep = "") %>%
factor(levels = unique(paste("20", (str_sub(running$Date, start = 7, end = 8)), sep = "")))
paste("20", (str_sub(running$Date, start = 7, end = 8)), sep = "")
paste("20", (str_sub(running$Date, start = 7, end = 8)), sep = "") %>%
factor(levels = unique(paste("20", (str_sub(running$Date, start = 7, end = 8)), sep = ""))) %>%
levels()
meow = paste("20", (str_sub(running$Date, start = 7, end = 8)), sep = "") %>%
factor(levels = unique(paste("20", (str_sub(running$Date, start = 7, end = 8)), sep = ""))) %>%
levels()
meow
output = paste(month.name, rep(meow %>% levels(), each = length(month.name)))
output
paste("20", (str_sub(running$Date, start = 7, end = 8)), sep = "") %>%
factor(levels = c(unique(paste("20", (str_sub(running$Date, start = 7, end = 8)), sep = "")), "Total"))
meow = paste("20", (str_sub(running$Date, start = 7, end = 8)), sep = "") %>%
factor(levels = unique(paste("20", (str_sub(running$Date, start = 7, end = 8)), sep = ""))) %>%
levels()
meow
t
t
t
output = paste(month.name, rep(meow %>% levels(), each = length(month.name)))
output
meow
meow = paste("20", (str_sub(running$Date, start = 7, end = 8)), sep = "") %>%
factor(levels = unique(paste("20", (str_sub(running$Date, start = 7, end = 8)), sep = "")))
paste("20", (str_sub(running$Date, start = 7, end = 8)), sep = "") %>%
factor(levels = c(unique(paste("20", (str_sub(running$Date, start = 7, end = 8)), sep = "")), "Total"))
meow = paste("20", (str_sub(running$Date, start = 7, end = 8)), sep = "") %>%
factor(levels = unique(paste("20", (str_sub(running$Date, start = 7, end = 8)), sep = "")))
meow
output = paste(month.name, rep(meow %>% levels(), each = length(month.name)))
output
output = paste(month.name, rep(meow %>% levels(), each = length(month.name)))[1:17]
output
Update_Date
Update_Date
tail(running)
tail(running, 1)
Update_Date
Update_Date %>% str_extract(pattern = "-*-")
Update_Date %>% str_extract(pattern = "-[0-9]{2}-")
Update_Date %>% str_extract(pattern = "-[0-9]{2}-") %>% str_extract(pattern = "[0-9]{2}") %>% as.integer()
(Update_Date %>% str_extract(pattern = "[0-9]{4}") %>% as.integer() - Start_Date %>% str_extract(pattern = "[0-9]{4}") %>% as.integer()) %>% "*"12
(Update_Date %>% str_extract(pattern = "[0-9]{4}") %>% as.integer() - Start_Date %>% str_extract(pattern = "[0-9]{4}") %>% as.integer()) %>% "*"12
(Update_Date %>% str_extract(pattern = "[0-9]{4}") %>% as.integer() - Start_Date %>% str_extract(pattern = "[0-9]{4}") %>% as.integer()) %>% "*"(12)
Update_Date %>% str_extract(pattern = "-[0-9]{2}-") %>% str_extract(pattern = "[0-9]{2}") %>% as.integer() + (Update_Date %>% str_extract(pattern = "[0-9]{4}") %>% as.integer() - Start_Date %>% str_extract(pattern = "[0-9]{4}") %>% as.integer()) %>% "*"(12)
Update_Date %>% str_extract(pattern = "-[0-9]{2}-") %>% str_extract(pattern = "[0-9]{2}") %>% as.integer() + (Update_Date %>% str_extract(pattern = "[0-9]{4}") %>% as.integer() - Start_Date %>% str_extract(pattern = "[0-9]{4}") %>% as.integer()) %>% "*"(12)
output = paste(month.name, rep(meow %>% levels(), each = length(month.name)))[1:Update_Date %>% str_extract(pattern = "-[0-9]{2}-") %>% str_extract(pattern = "[0-9]{2}") %>% as.integer() + (Update_Date %>% str_extract(pattern = "[0-9]{4}") %>% as.integer() - Start_Date %>% str_extract(pattern = "[0-9]{4}") %>% as.integer()) %>% "*"(12)]
output
output = paste(month.name, rep(meow %>% levels(), each = length(month.name)))[1:length(Update_Date %>% str_extract(pattern = "-[0-9]{2}-") %>% str_extract(pattern = "[0-9]{2}") %>% as.integer() + (Update_Date %>% str_extract(pattern = "[0-9]{4}") %>% as.integer() - Start_Date %>% str_extract(pattern = "[0-9]{4}") %>% as.integer()) %>% "*"(12))]
output
output = paste(month.name, rep(meow %>% levels(), each = length(month.name)))[1:(Update_Date %>% str_extract(pattern = "-[0-9]{2}-") %>% str_extract(pattern = "[0-9]{2}") %>% as.integer() + (Update_Date %>% str_extract(pattern = "[0-9]{4}") %>% as.integer() - Start_Date %>% str_extract(pattern = "[0-9]{4}") %>% as.integer()) %>% "*"(12))]
output
running$YearMonth = paste(running$Month, " ", running$Year, sep = "") %>% factor(levels = paste(month.name, rep(meow %>% levels(), each = length(month.name)))[1:(Update_Date %>% str_extract(pattern = "-[0-9]{2}-") %>% str_extract(pattern = "[0-9]{2}") %>% as.integer() + (Update_Date %>% str_extract(pattern = "[0-9]{4}") %>% as.integer() - Start_Date %>% str_extract(pattern = "[0-9]{4}") %>% as.integer()) %>% "*"(12))])
read_data = read_data[c(1:(Update_Date - Start_Date) - 1), ]
running = read_data[, c(1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 18, 19, 25)]
names(running) = c("Location", "Weekday_Read", "Month_Number_Read", "Day Number", "Date", "Run Calories", "Run Distance", "Run Minutes", "Run Seconds", "Walk Calories", "Walk Distance", "Walk Minutes", "Walk Seconds", "StartTime")
running$DayNumber    = running$`Day Number`    %>% as.character() %>% as.integer()
running$RunCalories  = running$`Run Calories`  %>% as.character() %>% as.integer()
running$RunDistance  = running$`Run Distance`  %>% as.character() %>% as.numeric()
running$RunMinutes   = running$`Run Minutes`   %>% as.character() %>% as.integer()
running$RunSeconds   = running$`Run Seconds`   %>% as.character() %>% as.integer()
running$WalkCalories = running$`Walk Calories` %>% as.character() %>% as.integer()
running$WalkDistance = running$`Walk Distance` %>% as.character() %>% as.numeric()
running$WalkMinutes  = running$`Walk Minutes`  %>% as.character() %>% as.integer()
running$WalkSeconds  = running$`Walk Seconds`  %>% as.character() %>% as.integer()
running = running[ , c(1, 2, 3, 5, 14:23)]
running$Month = factor(running$Month_Number_Read)
levels(running$Month) = c("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December", "Total")
running$Year = paste("20", (str_sub(running$Date, start = 7, end = 8)), sep = "") %>% factor(levels = c(unique(paste("20", (str_sub(running$Date, start = 7, end = 8)), sep = "")), "Total"))
running$Weekday = factor(x = running$Weekday_Read,
levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday", "Total"))
running$YearMonth = paste(running$Month, " ", running$Year, sep = "") %>% factor(levels = paste(month.name, rep(meow %>% levels(), each = length(month.name)))[1:(Update_Date %>% str_extract(pattern = "-[0-9]{2}-") %>% str_extract(pattern = "[0-9]{2}") %>% as.integer() + (Update_Date %>% str_extract(pattern = "[0-9]{4}") %>% as.integer() - Start_Date %>% str_extract(pattern = "[0-9]{4}") %>% as.integer()) %>% "*"(12))])
running = select(running, - Weekday_Read, - Month_Number_Read)
running$YearMonth
groupby_yearmonth = running %>%
group_by(YearMonth) %>%
summarise(Total_Runs = sum(RunDistance > 0),
Distance = sum(RunDistance),
Time = paste(ifelse(test = (sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60 <= 9,
yes = paste("0", (sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60, sep = ""),
no = as.character((sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60)),
ifelse(test = (sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60 <= 9,
yes = paste("0", (sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60, sep = ""),
no = as.character((sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60)),
ifelse(test = sum(RunSeconds) %% 60 <= 9,
yes = paste("0", sum(RunSeconds) %% 60, sep = ""),
no = as.character(sum(RunSeconds) %% 60)), sep = ":"),
Pace = paste((ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %/% 60, ifelse(test = (ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60 <= 9,
yes = paste("0", (ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60, sep = ""),
no = paste((ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60)), sep = ":"))
# groupby_yearmonth$yearmonth = paste(groupby_yearmonth$Month, groupby_yearmonth$Year, sep = " ")
# groupby_yearmonth = select(as.data.frame(select(groupby_yearmonth, - Month)), - Year)
# groupby_yearmonth = groupby_yearmonth[, c(ncol(groupby_yearmonth), 1:ncol(groupby_yearmonth) - 1)]
#
# groupby_yearmonth = rbind(groupby_yearmonth, total_row)
names(groupby_yearmonth) = c("Month", "Total Runs", "Miles", "Time", "Pace")
kable(groupby_yearmonth, format = "html", align = "lrrrr") %>%
kable_styling(bootstrap_options = c("hover", "responsive")) #%>%
#row_spec(row = nrow(groupby_yearmonth), bold = TRUE, font_size = 21)
ggplot(data = groupby_yearmonth, aes(x = Month, y = Miles %>% as.numeric())) +
geom_bar(stat = "identity", fill = "darkblue") +
geom_text(aes(label = groupby_yearmonth$Miles), vjust = 1.6, color = "white", size = 2) +
ggtitle("Month vs. Miles") +
theme(plot.title = element_text(hjust = 0.5))
levels(running$Month) = c(month.name, "Total")
levels(running$Month)
?month.name
LETTERS
letters
format(ISOdate(2000, 1:12, 1), "%B")
format(ISOdate(2000, 1:12, 1), "%b")
Update_Date = as.Date("5/13/2019", format = "%m/%d/%Y")
# The morning of the last sleep
sleep = read.csv("~/Documents/Kevin Stuff/Not Work/website/Website Files/more website files/sleepdata_5_13_2019.csv", sep = ";")
minutes_to_time = function(insert_min) {
hours = insert_min %/% 60 %>% as.character()
minutes = strptime(insert_min %% 60, format="%M") %>% str_extract(pattern = ":[0-9]{1,2}:") %>% str_extract(pattern = "[0-9]{1,2}")
return(paste(hours, ":", minutes, sep = ""))
}
library(knitr)
library(kableExtra)
library(tidyverse)
library(stringr)
library(ggplot2)
Start_Date = as.Date("1/28/2018", format = "%m/%d/%Y")
Update_Date = as.Date("5/12/2019", format = "%m/%d/%Y")
read_data = read.csv(file = "~/Documents/Kevin Stuff/Not Work/website/Website Files/more website files/Running_5_12_2019.csv", skip = 1)
read_data = read_data[c(1:(Update_Date - Start_Date) - 1), ]
running = read_data[, c(1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 18, 19, 25)]
names(running) = c("Location", "Weekday_Read", "Month_Number_Read", "Day Number", "Date", "Run Calories", "Run Distance", "Run Minutes", "Run Seconds", "Walk Calories", "Walk Distance", "Walk Minutes", "Walk Seconds", "StartTime")
running$DayNumber    = running$`Day Number`    %>% as.character() %>% as.integer()
running$RunCalories  = running$`Run Calories`  %>% as.character() %>% as.integer()
running$RunDistance  = running$`Run Distance`  %>% as.character() %>% as.numeric()
running$RunMinutes   = running$`Run Minutes`   %>% as.character() %>% as.integer()
running$RunSeconds   = running$`Run Seconds`   %>% as.character() %>% as.integer()
running$WalkCalories = running$`Walk Calories` %>% as.character() %>% as.integer()
running$WalkDistance = running$`Walk Distance` %>% as.character() %>% as.numeric()
running$WalkMinutes  = running$`Walk Minutes`  %>% as.character() %>% as.integer()
running$WalkSeconds  = running$`Walk Seconds`  %>% as.character() %>% as.integer()
running = running[ , c(1, 2, 3, 5, 14:23)]
running$Month = factor(running$Month_Number_Read)
levels(running$Month) = c(month.name, "Total")
running$Year = paste("20", (str_sub(running$Date, start = 7, end = 8)), sep = "") %>% factor(levels = c(unique(paste("20", (str_sub(running$Date, start = 7, end = 8)), sep = "")), "Total"))
running$Weekday = factor(x = running$Weekday_Read,
levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday", "Total"))
running$YearMonth = paste(running$Month, " ", running$Year, sep = "") %>% factor(levels = paste(month.name, rep(meow %>% levels(), each = length(month.name)))[1:(Update_Date %>% str_extract(pattern = "-[0-9]{2}-") %>% str_extract(pattern = "[0-9]{2}") %>% as.integer() + (Update_Date %>% str_extract(pattern = "[0-9]{4}") %>% as.integer() - Start_Date %>% str_extract(pattern = "[0-9]{4}") %>% as.integer()) %>% "*"(12))])
running = select(running, - Weekday_Read, - Month_Number_Read)
paste(running$Month, " ", running$Year, sep = "")
running$YearMonth = paste(running$Month, " ", running$Year, sep = "") %>% factor(levels = paste(month.name, rep(meow %>% levels(), each = length(month.name)))
paste(running$Month, " ", running$Year, sep = "") %>% factor(levels = paste(month.name, rep(meow %>% levels(), each = length(month.name)))
paste(running$Month, " ", running$Year, sep = "") %>% factor(levels = paste(month.name, rep(meow %>% levels(), each = length(month.name))))
meow
paste(running$Month, " ", running$Year, sep = "") %>% factor(levels = paste(month.name, rep(running$Year %>% levels(), each = length(month.name))))
running$YearMonth = paste(running$Month, " ", running$Year, sep = "") %>% factor(levels = paste(month.name, rep(running$Year %>% levels(), each = length(month.name)))[1:(Update_Date %>% str_extract(pattern = "-[0-9]{2}-") %>% str_extract(pattern = "[0-9]{2}") %>% as.integer() + (Update_Date %>% str_extract(pattern = "[0-9]{4}") %>% as.integer() - Start_Date %>% str_extract(pattern = "[0-9]{4}") %>% as.integer()) %>% "*"(12))])
ggplot(data = groupby_year, aes(x = Year, y = Miles)) +
geom_bar(stat = "identity", fill = "darkblue") +
geom_text(aes(label = groupby_year$Miles), vjust = 1.6, color = "white", size = 3) +
xlab(label = "Weekday") +
ylab(label = "Miles") +
ggtitle(label = "Miles by Weekday") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = groupby_year, aes(x = Year, y = Miles)) +
geom_bar(stat = "identity", fill = "darkblue") +
geom_text(aes(label = groupby_year$Miles), vjust = 1.6, color = "white", size = 5) +
ggtitle("Year vs. Miles") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = groupby_year, aes(x = Year, y = Miles)) +
geom_bar(stat = "identity", fill = "darkblue") +
geom_text(aes(label = groupby_year$Miles), vjust = 1.6, color = "white", size = 3) +
xlab(label = "Weekday") +
ylab(label = "Miles") +
ggtitle(label = "Miles by Weekday") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = groupby_year, aes(x = Year, y = Miles)) +
geom_bar(stat = "identity", fill = "darkblue") +
geom_text(aes(label = groupby_year$Miles), vjust = 1.6, color = "white", size = 5) +
ggtitle("Year vs. Miles") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = groupby_year, aes(x = Year, y = Miles)) +
geom_bar(stat = "identity", fill = "darkblue") +
geom_text(aes(label = groupby_year$Miles), vjust = 1.6, color = "white", size = 5) +
xlab(label = "Weekday") +
ylab(label = "Miles") +
ggtitle(label = "Miles by Weekday") +
theme(plot.title = element_text(hjust = 0.5))
x = "Year"
x = "Year"
x
running$Year
running$x
x = "Year"
ggplot(data = groupby_year, aes(x = Year, y = Miles)) +
geom_bar(stat = "identity", fill = "darkblue") +
geom_text(aes(label = groupby_year$Miles), vjust = 1.6, color = "white", size = 5) +
xlab(label = "Year") +
ylab(label = "Miles") +
ggtitle(label = paste("Miles by ", x, sep = "")) +
theme(plot.title = element_text(hjust = 0.5))
var = "Year"
ggplot(data = groupby_year, aes(x = Year, y = Miles)) +
geom_bar(stat = "identity", fill = "darkblue") +
geom_text(aes(label = groupby_year$Miles), vjust = 1.6, color = "white", size = 5) +
xlab(label = var) +
ylab(label = "Miles") +
ggtitle(label = paste("Miles by ", var, sep = "")) +
theme(plot.title = element_text(hjust = 0.5))
var = Year
ggplot(data = groupby_year, aes(x = Year, y = Miles)) +
geom_bar(stat = "identity", fill = "darkblue") +
geom_text(aes(label = groupby_year$Miles), vjust = 1.6, color = "white", size = 5) +
xlab(label = var) +
ylab(label = "Miles") +
ggtitle(label = paste("Miles by ", var, sep = "")) +
theme(plot.title = element_text(hjust = 0.5))
var = "Year"
ggplot(data = groupby_year, aes(x = Year, y = Miles)) +
geom_bar(stat = "identity", fill = "darkblue") +
geom_text(aes(label = groupby_year$Miles), vjust = 1.6, color = "white", size = 5) +
xlab(label = var) +
ylab(label = "Miles") +
ggtitle(label = paste("Miles by ", var, sep = "")) +
theme(plot.title = element_text(hjust = 0.5))
var = "Year"
var = data.frame(unlist(as.list(match.call())[c("Year")])[1])
var
ggplot(data = groupby_year, aes(x = var, y = Miles)) +
geom_bar(stat = "identity", fill = "darkblue") +
geom_text(aes(label = groupby_year$Miles), vjust = 1.6, color = "white", size = 5) +
xlab(label = var) +
ylab(label = "Miles") +
ggtitle(label = paste("Miles by ", var, sep = "")) +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = groupby_year, aes(x = Year, y = Miles)) +
geom_bar(stat = "identity", fill = "darkblue") +
geom_text(aes(label = groupby_year$Miles), vjust = 1.6, color = "white", size = 5) +
xlab(label = var) +
ylab(label = "Miles") +
ggtitle(label = paste("Miles by ", var, sep = "")) +
theme(plot.title = element_text(hjust = 0.5))
Year = data.frame(unlist(as.list(match.call())[c("var")])[1])
ggplot(data = groupby_year, aes(x = Year, y = Miles)) +
geom_bar(stat = "identity", fill = "darkblue") +
geom_text(aes(label = groupby_year$Miles), vjust = 1.6, color = "white", size = 5) +
xlab(label = var) +
ylab(label = "Miles") +
ggtitle(label = paste("Miles by ", var, sep = "")) +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = groupby_year, aes(x = var, y = Miles)) +
geom_bar(stat = "identity", fill = "darkblue") +
geom_text(aes(label = groupby_year$Miles), vjust = 1.6, color = "white", size = 5) +
xlab(label = var) +
ylab(label = "Miles") +
ggtitle(label = paste("Miles by ", var, sep = "")) +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = groupby_year, aes(x = Year, y = Miles)) +
geom_bar(stat = "identity", fill = "darkblue") +
geom_text(aes(label = groupby_year$Miles), vjust = 1.6, color = "white", size = 5) +
xlab(label = var) +
ylab(label = "Miles") +
ggtitle(label = paste("Miles by ", var, sep = "")) +
theme(plot.title = element_text(hjust = 0.5))
g$t = c(1, 2, 3)
t = c(1, 2, 3)
g = data.frame(
t = t
)
g$t
var = t
g$var
ggplot(data = groupby_year, aes(x = Year, y = Miles)) +
geom_bar(stat = "identity", fill = "darkblue") +
geom_text(aes(label = groupby_year$Miles), vjust = 1.6, color = "white", size = 5) +
xlab(label = "Year") +
ylab(label = "Miles") +
ggtitle(label = "Miles by Year") +
theme(plot.title = element_text(hjust = 0.5))
Update_Date = as.Date("5/12/2019", format = "%m/%d/%Y")
read_data = read.csv(file = "~/Documents/Kevin Stuff/Not Work/website/Website Files/more website files/Running_5_12_2019.csv", skip = 1)
View(read_data)
head(read_data)
?head
head(read_data, n = Update_Date - Start_Date - 1)
head(x = read_data, n = 1)
head(x = read_data, n = 100)
head(x = read_data, n = (Update_Date - Start_Date - 1))
(Update_Date - Start_Date - 1)
Update_Date - Start_Date) - 1
Update_Date - Start_Date - 1
(Update_Date - Start_Date - 1) %>% as.numeric
head(x = read_data, n = (Update_Date - Start_Date - 1) %>% as.integer())
head(x = read_data, n = (Update_Date - Start_Date) %>% as.integer())
head(x = read_data, n = (Update_Date - Start_Date) %>% as.integer())
head(x = read_data, n = (Update_Date - Start_Date - 1) %>% as.integer())
Update_Date = as.Date("5/12/2019", format = "%m/%d/%Y")
read_data = read.csv(file = "~/Documents/Kevin Stuff/Not Work/website/Website Files/more website files/Running_5_12_2019.csv", skip = 1)
read_data = head(x = read_data, n = (Update_Date - Start_Date - 1) %>% as.integer())
running = read_data[, c(1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 18, 19, 25)]
library(shiny)
library(ggplot2)
running = read.csv("~/Documents/Kevin Stuff/Not Work/website/Website Files/more website files/shiny_data.csv")
ui <- fluidPage(
titlePanel("BC Liquor Store prices title panel"),
headerPanel("BC Liquor Store prices header panel"),
sidebarLayout(
sidebarPanel(
radioButtons(inputId = "typeInput",
label = "Variable:",
choices = c("Miles", "Calories Burned", "Time", "Runs"),
selected = "Miles"),
selectInput(inputId = "filterInput",
label = "Filter By:",
choices = c("Year", "Month", "Weekday"),
selected = "Year")
),
mainPanel(
h3(textOutput("caption")),
plotOutput("mpgPlot")
)
)
)
server = function(input, output) {
# formulaText <- reactive({
#   paste("mpg ~", input$variable)
# })
#
# output$caption <- renderText({
#   formulaText()
# })
groupby_weekday = running %>%
group_by(filterInput) %>%
summarise(Total_Runs = sum(RunDistance > 0),
Distance = sum(RunDistance),
Time = paste(ifelse(test = (sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60 <= 9,
yes = paste("0", (sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60, sep = ""),
no = as.character((sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60)),
ifelse(test = (sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60 <= 9,
yes = paste("0", (sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60, sep = ""),
no = as.character((sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60)),
ifelse(test = sum(RunSeconds) %% 60 <= 9,
yes = paste("0", sum(RunSeconds) %% 60, sep = ""),
no = as.character(sum(RunSeconds) %% 60)), sep = ":"),
Pace = paste((ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %/% 60, ifelse(test = (ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60 <= 9,
yes = paste("0", (ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60, sep = ""),
no = paste((ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60)), sep = ":"))
output$mpgPlot <- renderPlot({
ggplot(data = groupby_year, aes(x = Year, y = Miles)) +
geom_bar(stat = "identity", fill = "darkblue") +
geom_text(aes(label = groupby_year$Miles), vjust = 1.6, color = "white", size = 5) +
ggtitle("Year vs. Miles") +
theme(plot.title = element_text(hjust = 0.5))
})
}
shinyApp(ui = ui, server = server)
3+3
View(WorldPhones)
mpg
mtcars
library(shiny)
library(ggplot2)
ui <- fluidPage(
titlePanel("mtcars yeet"),
sidebarLayout(
sidebarPanel(
radioButtons(inputId = "typeInput",
label = "Variable:",
choices = c("Miles", "Calories Burned", "Time", "Runs"),
selected = "Miles"),
selectInput(inputId = "filterInput",
label = "Filter By:",
choices = c("Year", "Month", "Weekday"),
selected = "Year")
),
mainPanel(
h3(textOutput("caption")),
plotOutput("mpgPlot")
)
)
)
server = function(input, output) {
# formulaText <- reactive({
#   paste("mpg ~", input$variable)
# })
#
# output$caption <- renderText({
#   formulaText()
# })
output$mpgPlot <- renderPlot({
ggplot(data = groupby_year, aes(x = Year, y = Miles)) +
geom_bar(stat = "identity", fill = "darkblue") +
geom_text(aes(label = groupby_year$Miles), vjust = 1.6, color = "white", size = 5) +
ggtitle("Year vs. Miles") +
theme(plot.title = element_text(hjust = 0.5))
})
}
shinyApp(ui = ui, server = server)
library(knitr)
library(kableExtra)
library(tidyverse)
library(stringr)
library(ggplot2)
library(dplyr)
library(dplyr)
library(caret)
