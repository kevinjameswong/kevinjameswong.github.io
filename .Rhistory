,To.WinNum
,To.ProfitNum
,Influence
,Live
,Sportsbook
)
names(prod_data) = c("ID", "Person", "Date", "Sport", "Legs", "Wager_Num", "End", "Payout_Num", "Description", "Notes", "Boost", "Before", "After", "ToWin_Num", "ToProfit_Num", "Influencer", "Live_Boole", "Sportsbook")
prep_data$Wager
prep_data1$Wager
prep_data1$WagerNum
prep_data1$WagerNum     = prep_data1$Wager     %>% (sub("\\$","") %>% as.numeric()
prep_data1$WagerNum     = prep_data1$Wager     %>% (sub("\\$","") %>% as.numeric()
prep_data1$WagerNum     = prep_data1$Wager     %>% (sub("\\$","") %>% as.numeric()
prep_data1$Wager     %>% (sub("\\$","")
prep_data1$WagerNum     = prep_data1$Wager     %>% sub("\\$","") %>% as.numeric()
prep_data1$Wager     %>% sub("\\$","")
prep_data1$Wager     %>% sub("$","")
help(sub)
sub("$$", "$")
sub("$$", "$", x= "t")
sub("$$$$", "$", x= "t")
sub("$$$x$", "$", x= "t")
sub("$$$x$", "$", x = "t")
sub("$$$x$", "$", x = "y")
sub("$$$x$", "x", x = "y")
sub("$$$x$", "x", x = "P")
sub("$$$x$", "x", x = "PPP")
sub("$$$x$", "x", x = "$")
sub("$$$x$", text = "x", x = "$")
sub(pattern "$$$x$", text = "x", x = "$")
sub(pattern = "$$$x$", text = "x", x = "$")
sub(pattern = "$$$x$", text = "xx", x = "$")
prep_data1$PayoutNum    = prep_data1$Payout    %>% as.numeric()
prep_data1$WagerNum     = prep_data1$Wager     %>% sub(pattern = "$", replacement = "") %>% as.numeric()
prep_data1$Wager
prep_data1$WagerNum     = prep_data1$Wager     %>% str_replace_all(pattern = "\\t", replacement = "")(pattern = "$", replacement = "") %>% as.numeric()
prep_data1$WagerNum     = prep_data1$Wager     %>% str_replace_all(string = "$", replacement = "") %>% as.numeric()
prep_data1$Wager     %>% str_replace_all(string = "$", replacement = "")
prep_data1$Wager     %>% str_replace_all(pattern = "$", replacement = "") %>% as.numeric()
prep_data1$Wager     %>% str_replace_all(pattern = "$", replacement = "")
prep_data1$Wager     %>% str_replace_all(pattern = "\\$", replacement = "")
prep_data1$Wager     %>% str_replace_all(pattern = "\\$", replacement = "") %>% as.numeric()
read_data = read.csv(file = "~/Documents/KevinWebsite/kevinjameswong.github.io/2022 Bets - Wagers.csv", skip = 1)
prep_data1 = read_data %>%
drop_na(Legs) %>%
select(Kevin
,Person
,Date
,Sport
,Legs
,Wager
,End
,Payout
,Description
,Notes
,Boost
,Before
,After
,To.Win
,To.Profit
,Influence
,Live
,Sportsbook
)
prep_data1$DateDate     = prep_data1$Date      %>% as.Date(format = "%m/%d/%y")
prep_data1$WagerNum     = prep_data1$Wager     %>% str_replace_all(pattern = "\\$", replacement = "") %>% as.numeric()
prep_data1$PayoutNum    = prep_data1$Payout    %>% str_replace_all(pattern = "\\$", replacement = "") %>% as.numeric()
prep_data1$To.WinNum    = prep_data1$To.Win    %>% str_replace_all(pattern = "\\$", replacement = "") %>% as.numeric()
prep_data1$To.ProfitNum = prep_data1$To.Profit %>% str_replace_all(pattern = "\\$", replacement = "") %>% as.numeric()
prod_data = prep_data1 %>%
select(Kevin
,Person
,DateDate
,Sport
,Legs
,WagerNum
,End
,PayoutNum
,Description
,Notes
,Boost
,Before
,After
,To.WinNum
,To.ProfitNum
,Influence
,Live
,Sportsbook
)
names(prod_data) = c("ID", "Person", "Date", "Sport", "Legs", "Wager_Num", "End", "Payout_Num", "Description", "Notes", "Boost", "Before", "After", "ToWin_Num", "ToProfit_Num", "Influencer", "Live_Boole", "Sportsbook")
view(prod_data)
git remote set-url origin git@github.com:username/repo.git
Update_Date = as.Date("07-32-2023", format = "%m-%d-%Y")
Update_Date
Update_Date = as.Date("07-32-2023", format = "%m-%d-%Y")
Update_Date = 20230101
Update_Date
Update_Date = as.Date("07-32-2023", format = "%m-%d-%Y")
Update_Date
install.packages(c("bit", "blob", "boot", "broom", "bslib", "callr", "class", "cli", "cluster", "codetools", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "digest", "dplyr", "dtplyr", "evaluate", "fansi", "farver", "fastmap", "forcats", "foreign", "fs", "gargle", "generics", "ggplot2", "googledrive", "googlesheets4", "gtable", "haven", "highr", "hms", "htmltools", "httr", "isoband", "jsonlite", "KernSmooth", "knitr", "lattice", "lifecycle", "lubridate", "markdown", "MASS", "Matrix", "mgcv", "modelr", "nlme", "nnet", "openssl", "pillar", "processx", "ps", "purrr", "readr", "readxl", "reprex", "rlang", "rmarkdown", "RMySQL", "rpart", "rstudioapi", "rvest", "sass", "scales", "spatial", "stringi", "stringr", "survival", "svglite", "sys", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "tzdb", "utf8", "uuid", "vctrs", "viridisLite", "vroom", "webshot", "xfun", "xml2", "yaml"))
install.packages(c("bit", "blob", "boot", "broom", "bslib", "callr", "class", "cli", "cluster", "codetools", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "digest", "dplyr", "dtplyr", "evaluate", "fansi", "farver", "fastmap", "forcats", "foreign", "fs", "gargle", "generics", "ggplot2", "googledrive", "googlesheets4", "gtable", "haven", "highr", "hms", "htmltools", "httr", "isoband", "jsonlite", "KernSmooth", "knitr", "lattice", "lifecycle", "lubridate", "markdown", "MASS", "Matrix", "mgcv", "modelr", "nlme", "nnet", "openssl", "pillar", "processx", "ps", "purrr", "readr", "readxl", "reprex", "rlang", "rmarkdown", "RMySQL", "rpart", "rstudioapi", "rvest", "sass", "scales", "spatial", "stringi", "stringr", "survival", "svglite", "sys", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "tzdb", "utf8", "uuid", "vctrs", "viridisLite", "vroom", "webshot", "xfun", "xml2", "yaml"))
install.packages(c("bit", "blob", "boot", "broom", "bslib", "callr", "class", "cli", "cluster", "codetools", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "digest", "dplyr", "dtplyr", "evaluate", "fansi", "farver", "fastmap", "forcats", "foreign", "fs", "gargle", "generics", "ggplot2", "googledrive", "googlesheets4", "gtable", "haven", "highr", "hms", "htmltools", "httr", "isoband", "jsonlite", "KernSmooth", "knitr", "lattice", "lifecycle", "lubridate", "markdown", "MASS", "Matrix", "mgcv", "modelr", "nlme", "nnet", "openssl", "pillar", "processx", "ps", "purrr", "readr", "readxl", "reprex", "rlang", "rmarkdown", "RMySQL", "rpart", "rstudioapi", "rvest", "sass", "scales", "spatial", "stringi", "stringr", "survival", "svglite", "sys", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "tzdb", "utf8", "uuid", "vctrs", "viridisLite", "vroom", "webshot", "xfun", "xml2", "yaml"))
install.packages(c("bit", "blob", "boot", "broom", "bslib", "callr", "class", "cli", "cluster", "codetools", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "digest", "dplyr", "dtplyr", "evaluate", "fansi", "farver", "fastmap", "forcats", "foreign", "fs", "gargle", "generics", "ggplot2", "googledrive", "googlesheets4", "gtable", "haven", "highr", "hms", "htmltools", "httr", "isoband", "jsonlite", "KernSmooth", "knitr", "lattice", "lifecycle", "lubridate", "markdown", "MASS", "Matrix", "mgcv", "modelr", "nlme", "nnet", "openssl", "pillar", "processx", "ps", "purrr", "readr", "readxl", "reprex", "rlang", "rmarkdown", "RMySQL", "rpart", "rstudioapi", "rvest", "sass", "scales", "spatial", "stringi", "stringr", "survival", "svglite", "sys", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "tzdb", "utf8", "uuid", "vctrs", "viridisLite", "vroom", "webshot", "xfun", "xml2", "yaml"))
install.packages(c("bit", "blob", "boot", "broom", "bslib", "callr", "class", "cli", "cluster", "codetools", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "digest", "dplyr", "dtplyr", "evaluate", "fansi", "farver", "fastmap", "forcats", "foreign", "fs", "gargle", "generics", "ggplot2", "googledrive", "googlesheets4", "gtable", "haven", "highr", "hms", "htmltools", "httr", "isoband", "jsonlite", "KernSmooth", "knitr", "lattice", "lifecycle", "lubridate", "markdown", "MASS", "Matrix", "mgcv", "modelr", "nlme", "nnet", "openssl", "pillar", "processx", "ps", "purrr", "readr", "readxl", "reprex", "rlang", "rmarkdown", "RMySQL", "rpart", "rstudioapi", "rvest", "sass", "scales", "spatial", "stringi", "stringr", "survival", "svglite", "sys", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "tzdb", "utf8", "uuid", "vctrs", "viridisLite", "vroom", "webshot", "xfun", "xml2", "yaml"))
install.packages(c("bit", "blob", "boot", "broom", "bslib", "callr", "class", "cli", "cluster", "codetools", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "digest", "dplyr", "dtplyr", "evaluate", "fansi", "farver", "fastmap", "forcats", "foreign", "fs", "gargle", "generics", "ggplot2", "googledrive", "googlesheets4", "gtable", "haven", "highr", "hms", "htmltools", "httr", "isoband", "jsonlite", "KernSmooth", "knitr", "lattice", "lifecycle", "lubridate", "markdown", "MASS", "Matrix", "mgcv", "modelr", "nlme", "nnet", "openssl", "pillar", "processx", "ps", "purrr", "readr", "readxl", "reprex", "rlang", "rmarkdown", "RMySQL", "rpart", "rstudioapi", "rvest", "sass", "scales", "spatial", "stringi", "stringr", "survival", "svglite", "sys", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "tzdb", "utf8", "uuid", "vctrs", "viridisLite", "vroom", "webshot", "xfun", "xml2", "yaml"))
install.packages(c("bit", "blob", "boot", "broom", "bslib", "callr", "class", "cli", "cluster", "codetools", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "digest", "dplyr", "dtplyr", "evaluate", "fansi", "farver", "fastmap", "forcats", "foreign", "fs", "gargle", "generics", "ggplot2", "googledrive", "googlesheets4", "gtable", "haven", "highr", "hms", "htmltools", "httr", "isoband", "jsonlite", "KernSmooth", "knitr", "lattice", "lifecycle", "lubridate", "markdown", "MASS", "Matrix", "mgcv", "modelr", "nlme", "nnet", "openssl", "pillar", "processx", "ps", "purrr", "readr", "readxl", "reprex", "rlang", "rmarkdown", "RMySQL", "rpart", "rstudioapi", "rvest", "sass", "scales", "spatial", "stringi", "stringr", "survival", "svglite", "sys", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "tzdb", "utf8", "uuid", "vctrs", "viridisLite", "vroom", "webshot", "xfun", "xml2", "yaml"))
install.packages(c("bit", "blob", "boot", "broom", "bslib", "callr", "class", "cli", "cluster", "codetools", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "digest", "dplyr", "dtplyr", "evaluate", "fansi", "farver", "fastmap", "forcats", "foreign", "fs", "gargle", "generics", "ggplot2", "googledrive", "googlesheets4", "gtable", "haven", "highr", "hms", "htmltools", "httr", "isoband", "jsonlite", "KernSmooth", "knitr", "lattice", "lifecycle", "lubridate", "markdown", "MASS", "Matrix", "mgcv", "modelr", "nlme", "nnet", "openssl", "pillar", "processx", "ps", "purrr", "readr", "readxl", "reprex", "rlang", "rmarkdown", "RMySQL", "rpart", "rstudioapi", "rvest", "sass", "scales", "spatial", "stringi", "stringr", "survival", "svglite", "sys", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "tzdb", "utf8", "uuid", "vctrs", "viridisLite", "vroom", "webshot", "xfun", "xml2", "yaml"))
install.packages(c("bit", "blob", "boot", "broom", "bslib", "callr", "class", "cli", "cluster", "codetools", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "digest", "dplyr", "dtplyr", "evaluate", "fansi", "farver", "fastmap", "forcats", "foreign", "fs", "gargle", "generics", "ggplot2", "googledrive", "googlesheets4", "gtable", "haven", "highr", "hms", "htmltools", "httr", "isoband", "jsonlite", "KernSmooth", "knitr", "lattice", "lifecycle", "lubridate", "markdown", "MASS", "Matrix", "mgcv", "modelr", "nlme", "nnet", "openssl", "pillar", "processx", "ps", "purrr", "readr", "readxl", "reprex", "rlang", "rmarkdown", "RMySQL", "rpart", "rstudioapi", "rvest", "sass", "scales", "spatial", "stringi", "stringr", "survival", "svglite", "sys", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "tzdb", "utf8", "uuid", "vctrs", "viridisLite", "vroom", "webshot", "xfun", "xml2", "yaml"))
install.packages(c("bit", "blob", "boot", "broom", "bslib", "callr", "class", "cli", "cluster", "codetools", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "digest", "dplyr", "dtplyr", "evaluate", "fansi", "farver", "fastmap", "forcats", "foreign", "fs", "gargle", "generics", "ggplot2", "googledrive", "googlesheets4", "gtable", "haven", "highr", "hms", "htmltools", "httr", "isoband", "jsonlite", "KernSmooth", "knitr", "lattice", "lifecycle", "lubridate", "markdown", "MASS", "Matrix", "mgcv", "modelr", "nlme", "nnet", "openssl", "pillar", "processx", "ps", "purrr", "readr", "readxl", "reprex", "rlang", "rmarkdown", "RMySQL", "rpart", "rstudioapi", "rvest", "sass", "scales", "spatial", "stringi", "stringr", "survival", "svglite", "sys", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "tzdb", "utf8", "uuid", "vctrs", "viridisLite", "vroom", "webshot", "xfun", "xml2", "yaml"))
install.packages(c("bit", "blob", "boot", "broom", "bslib", "callr", "class", "cli", "cluster", "codetools", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "digest", "dplyr", "dtplyr", "evaluate", "fansi", "farver", "fastmap", "forcats", "foreign", "fs", "gargle", "generics", "ggplot2", "googledrive", "googlesheets4", "gtable", "haven", "highr", "hms", "htmltools", "httr", "isoband", "jsonlite", "KernSmooth", "knitr", "lattice", "lifecycle", "lubridate", "markdown", "MASS", "Matrix", "mgcv", "modelr", "nlme", "nnet", "openssl", "pillar", "processx", "ps", "purrr", "readr", "readxl", "reprex", "rlang", "rmarkdown", "RMySQL", "rpart", "rstudioapi", "rvest", "sass", "scales", "spatial", "stringi", "stringr", "survival", "svglite", "sys", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "tzdb", "utf8", "uuid", "vctrs", "viridisLite", "vroom", "webshot", "xfun", "xml2", "yaml"))
install.packages(c("bit", "blob", "boot", "broom", "bslib", "callr", "class", "cli", "cluster", "codetools", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "digest", "dplyr", "dtplyr", "evaluate", "fansi", "farver", "fastmap", "forcats", "foreign", "fs", "gargle", "generics", "ggplot2", "googledrive", "googlesheets4", "gtable", "haven", "highr", "hms", "htmltools", "httr", "isoband", "jsonlite", "KernSmooth", "knitr", "lattice", "lifecycle", "lubridate", "markdown", "MASS", "Matrix", "mgcv", "modelr", "nlme", "nnet", "openssl", "pillar", "processx", "ps", "purrr", "readr", "readxl", "reprex", "rlang", "rmarkdown", "RMySQL", "rpart", "rstudioapi", "rvest", "sass", "scales", "spatial", "stringi", "stringr", "survival", "svglite", "sys", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "tzdb", "utf8", "uuid", "vctrs", "viridisLite", "vroom", "webshot", "xfun", "xml2", "yaml"))
install.packages(c("bit", "blob", "boot", "broom", "bslib", "callr", "class", "cli", "cluster", "codetools", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "digest", "dplyr", "dtplyr", "evaluate", "fansi", "farver", "fastmap", "forcats", "foreign", "fs", "gargle", "generics", "ggplot2", "googledrive", "googlesheets4", "gtable", "haven", "highr", "hms", "htmltools", "httr", "isoband", "jsonlite", "KernSmooth", "knitr", "lattice", "lifecycle", "lubridate", "markdown", "MASS", "Matrix", "mgcv", "modelr", "nlme", "nnet", "openssl", "pillar", "processx", "ps", "purrr", "readr", "readxl", "reprex", "rlang", "rmarkdown", "RMySQL", "rpart", "rstudioapi", "rvest", "sass", "scales", "spatial", "stringi", "stringr", "survival", "svglite", "sys", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "tzdb", "utf8", "uuid", "vctrs", "viridisLite", "vroom", "webshot", "xfun", "xml2", "yaml"))
install.packages(c("bit", "blob", "boot", "broom", "bslib", "callr", "class", "cli", "cluster", "codetools", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "digest", "dplyr", "dtplyr", "evaluate", "fansi", "farver", "fastmap", "forcats", "foreign", "fs", "gargle", "generics", "ggplot2", "googledrive", "googlesheets4", "gtable", "haven", "highr", "hms", "htmltools", "httr", "isoband", "jsonlite", "KernSmooth", "knitr", "lattice", "lifecycle", "lubridate", "markdown", "MASS", "Matrix", "mgcv", "modelr", "nlme", "nnet", "openssl", "pillar", "processx", "ps", "purrr", "readr", "readxl", "reprex", "rlang", "rmarkdown", "RMySQL", "rpart", "rstudioapi", "rvest", "sass", "scales", "spatial", "stringi", "stringr", "survival", "svglite", "sys", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "tzdb", "utf8", "uuid", "vctrs", "viridisLite", "vroom", "webshot", "xfun", "xml2", "yaml"))
install.packages(c("bit", "blob", "boot", "broom", "bslib", "callr", "class", "cli", "cluster", "codetools", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "digest", "dplyr", "dtplyr", "evaluate", "fansi", "farver", "fastmap", "forcats", "foreign", "fs", "gargle", "generics", "ggplot2", "googledrive", "googlesheets4", "gtable", "haven", "highr", "hms", "htmltools", "httr", "isoband", "jsonlite", "KernSmooth", "knitr", "lattice", "lifecycle", "lubridate", "markdown", "MASS", "Matrix", "mgcv", "modelr", "nlme", "nnet", "openssl", "pillar", "processx", "ps", "purrr", "readr", "readxl", "reprex", "rlang", "rmarkdown", "RMySQL", "rpart", "rstudioapi", "rvest", "sass", "scales", "spatial", "stringi", "stringr", "survival", "svglite", "sys", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "tzdb", "utf8", "uuid", "vctrs", "viridisLite", "vroom", "webshot", "xfun", "xml2", "yaml"))
install.packages(c("bit", "blob", "boot", "broom", "bslib", "callr", "class", "cli", "cluster", "codetools", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "digest", "dplyr", "dtplyr", "evaluate", "fansi", "farver", "fastmap", "forcats", "foreign", "fs", "gargle", "generics", "ggplot2", "googledrive", "googlesheets4", "gtable", "haven", "highr", "hms", "htmltools", "httr", "isoband", "jsonlite", "KernSmooth", "knitr", "lattice", "lifecycle", "lubridate", "markdown", "MASS", "Matrix", "mgcv", "modelr", "nlme", "nnet", "openssl", "pillar", "processx", "ps", "purrr", "readr", "readxl", "reprex", "rlang", "rmarkdown", "RMySQL", "rpart", "rstudioapi", "rvest", "sass", "scales", "spatial", "stringi", "stringr", "survival", "svglite", "sys", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "tzdb", "utf8", "uuid", "vctrs", "viridisLite", "vroom", "webshot", "xfun", "xml2", "yaml"))
install.packages(c("bit", "blob", "boot", "broom", "bslib", "callr", "class", "cli", "cluster", "codetools", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "digest", "dplyr", "dtplyr", "evaluate", "fansi", "farver", "fastmap", "forcats", "foreign", "fs", "gargle", "generics", "ggplot2", "googledrive", "googlesheets4", "gtable", "haven", "highr", "hms", "htmltools", "httr", "isoband", "jsonlite", "KernSmooth", "knitr", "lattice", "lifecycle", "lubridate", "markdown", "MASS", "Matrix", "mgcv", "modelr", "nlme", "nnet", "openssl", "pillar", "processx", "ps", "purrr", "readr", "readxl", "reprex", "rlang", "rmarkdown", "RMySQL", "rpart", "rstudioapi", "rvest", "sass", "scales", "spatial", "stringi", "stringr", "survival", "svglite", "sys", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "tzdb", "utf8", "uuid", "vctrs", "viridisLite", "vroom", "webshot", "xfun", "xml2", "yaml"))
install.packages(c("bit", "blob", "boot", "broom", "bslib", "callr", "class", "cli", "cluster", "codetools", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "digest", "dplyr", "dtplyr", "evaluate", "fansi", "farver", "fastmap", "forcats", "foreign", "fs", "gargle", "generics", "ggplot2", "googledrive", "googlesheets4", "gtable", "haven", "highr", "hms", "htmltools", "httr", "isoband", "jsonlite", "KernSmooth", "knitr", "lattice", "lifecycle", "lubridate", "markdown", "MASS", "Matrix", "mgcv", "modelr", "nlme", "nnet", "openssl", "pillar", "processx", "ps", "purrr", "readr", "readxl", "reprex", "rlang", "rmarkdown", "RMySQL", "rpart", "rstudioapi", "rvest", "sass", "scales", "spatial", "stringi", "stringr", "survival", "svglite", "sys", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "tzdb", "utf8", "uuid", "vctrs", "viridisLite", "vroom", "webshot", "xfun", "xml2", "yaml"))
install.packages(c("bit", "blob", "boot", "broom", "bslib", "callr", "class", "cli", "cluster", "codetools", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "digest", "dplyr", "dtplyr", "evaluate", "fansi", "farver", "fastmap", "forcats", "foreign", "fs", "gargle", "generics", "ggplot2", "googledrive", "googlesheets4", "gtable", "haven", "highr", "hms", "htmltools", "httr", "isoband", "jsonlite", "KernSmooth", "knitr", "lattice", "lifecycle", "lubridate", "markdown", "MASS", "Matrix", "mgcv", "modelr", "nlme", "nnet", "openssl", "pillar", "processx", "ps", "purrr", "readr", "readxl", "reprex", "rlang", "rmarkdown", "RMySQL", "rpart", "rstudioapi", "rvest", "sass", "scales", "spatial", "stringi", "stringr", "survival", "svglite", "sys", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "tzdb", "utf8", "uuid", "vctrs", "viridisLite", "vroom", "webshot", "xfun", "xml2", "yaml"))
install.packages(c("bit", "blob", "boot", "broom", "bslib", "callr", "class", "cli", "cluster", "codetools", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "digest", "dplyr", "dtplyr", "evaluate", "fansi", "farver", "fastmap", "forcats", "foreign", "fs", "gargle", "generics", "ggplot2", "googledrive", "googlesheets4", "gtable", "haven", "highr", "hms", "htmltools", "httr", "isoband", "jsonlite", "KernSmooth", "knitr", "lattice", "lifecycle", "lubridate", "markdown", "MASS", "Matrix", "mgcv", "modelr", "nlme", "nnet", "openssl", "pillar", "processx", "ps", "purrr", "readr", "readxl", "reprex", "rlang", "rmarkdown", "RMySQL", "rpart", "rstudioapi", "rvest", "sass", "scales", "spatial", "stringi", "stringr", "survival", "svglite", "sys", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "tzdb", "utf8", "uuid", "vctrs", "viridisLite", "vroom", "webshot", "xfun", "xml2", "yaml"))
install.packages(c("bit", "blob", "boot", "broom", "bslib", "callr", "class", "cli", "cluster", "codetools", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "digest", "dplyr", "dtplyr", "evaluate", "fansi", "farver", "fastmap", "forcats", "foreign", "fs", "gargle", "generics", "ggplot2", "googledrive", "googlesheets4", "gtable", "haven", "highr", "hms", "htmltools", "httr", "isoband", "jsonlite", "KernSmooth", "knitr", "lattice", "lifecycle", "lubridate", "markdown", "MASS", "Matrix", "mgcv", "modelr", "nlme", "nnet", "openssl", "pillar", "processx", "ps", "purrr", "readr", "readxl", "reprex", "rlang", "rmarkdown", "RMySQL", "rpart", "rstudioapi", "rvest", "sass", "scales", "spatial", "stringi", "stringr", "survival", "svglite", "sys", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "tzdb", "utf8", "uuid", "vctrs", "viridisLite", "vroom", "webshot", "xfun", "xml2", "yaml"))
install.packages(c("bit", "blob", "boot", "broom", "bslib", "callr", "class", "cli", "cluster", "codetools", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "digest", "dplyr", "dtplyr", "evaluate", "fansi", "farver", "fastmap", "forcats", "foreign", "fs", "gargle", "generics", "ggplot2", "googledrive", "googlesheets4", "gtable", "haven", "highr", "hms", "htmltools", "httr", "isoband", "jsonlite", "KernSmooth", "knitr", "lattice", "lifecycle", "lubridate", "markdown", "MASS", "Matrix", "mgcv", "modelr", "nlme", "nnet", "openssl", "pillar", "processx", "ps", "purrr", "readr", "readxl", "reprex", "rlang", "rmarkdown", "RMySQL", "rpart", "rstudioapi", "rvest", "sass", "scales", "spatial", "stringi", "stringr", "survival", "svglite", "sys", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "tzdb", "utf8", "uuid", "vctrs", "viridisLite", "vroom", "webshot", "xfun", "xml2", "yaml"))
install.packages(c("broom", "Matrix"))
library(lubridate)
library(knitr)
library(kableExtra)
library(tidyverse)
library(tidyverse)
library(stringr)
library(ggplot2)
Start_Date = as.Date("1/28/2018", format = "%m/%d/%Y")
Update_Date = as.Date("1/1/2020", format = "%m/%d/%Y")
read_data = read.csv(file = "~/Documents/KevinWebsite/kevinjameswong.github.io/Book4.csv", skip = 1)
running = read_data %>%
SELECT(Location,
Day,
Month,
Day.1,
Date,
Run.Calories,
Run.Distance,
Run.Minutes,
Run.Seconds,
Walk.Calories,
Walk.Distance,
Walk.Minutes,
Walk.Seconds,
Start.Time) %>%
# slice(1:(Update_Date - Start_Date - 1) %>% as.integer())
slice(1:713 %>% as.integer())
running = read_data %>%
select(Location,
Day,
Month,
Day.1,
Date,
Run.Calories,
Run.Distance,
Run.Minutes,
Run.Seconds,
Walk.Calories,
Walk.Distance,
Walk.Minutes,
Walk.Seconds,
Start.Time) %>%
# slice(1:(Update_Date - Start_Date - 1) %>% as.integer())
slice(1:713 %>% as.integer())
library(lubridate)
library(lubridate)
library(knitr)
library(kableExtra)
library(tidyverse)
library(stringr)
library(ggplot2)
summary(cars)
```{r cars, echo = FALSE, warning = FALSE, message = FALSE}
library(lubridate)
View(cars)
str(cars)
test(distance = 2, minutes = 5)
test = function(distance, minutes) {
m = 2
s = 2 * distince + minutes
return(s)
}
test = function(distance, minutes) {
m = 2
s = 2 * distince + minutes
return(s)
}
test = function(distance, minutes) {
m = 2
s = 2 * distince + minutes
return(s)
}
test(distance = 2, minutes = 5)
pace_calculator = function(distance, minutes, seconds) {
m = ((minutes * 60 + seconds) / distance) %>% ceiling() %>% "%/%"(60)
s = ((minutes * 60 + seconds) / distance) %>% ceiling() %>% "%%"(60)
pace = paste(m %>% as.numeric() %>% as.character(),
":",
s %>% paste(":01 ", today(), sep = "") %>% as.POSIXct(format = "%M:%S %Y-%m-%d") %>% str_sub(start = 15, end = 16),
sep = "")
return(pace)
}
pace_calculator = function(distance, minutes, seconds) {
m = ((minutes * 60 + seconds) / distance) %>% ceiling() %>% "%/%"(60)
s = ((minutes * 60 + seconds) / distance) %>% ceiling() %>% "%%"(60)
pace = paste(m %>% as.numeric() %>% as.character(),
":",
s %>% paste(":01 ", today(), sep = "") %>% as.POSIXct(format = "%M:%S %Y-%m-%d") %>% str_sub(start = 15, end = 16),
sep = "")
return(pace)
}
function(distance, minutes) {
m = 2
s = 2 * distince + minutes
return(s)
}
function(distance, minutes) {
m = 2
s = 2 * distince + minutes
return(s)
}
function(distance, minutes) {
m = 2
s = 2 * distince + minutes
return(s)
}
function(distance, minutes) {
m = 2
s = 2 * distince + minutes
return(s)
}
function(distance, minutes) {
m = 2
s = 2 * distince + minutes
return(s)
}
function(distance, minutes) {
m = 2
s = 2 * distince + minutes
return(s)
}
install.packages(c("broom", "Matrix"))
install.packages("Matrix")
install.packages("Matrix")
pace_calculator = function(distance, minutes, seconds) {
m = ((minutes * 60 + seconds) / distance) %>% ceiling() %>% "%/%"(60)
s = ((minutes * 60 + seconds) / distance) %>% ceiling() %>% "%%"(60)
pace = paste(m %>% as.numeric() %>% as.character(),
":",
s %>% paste(":01 ", today(), sep = "") %>% as.POSIXct(format = "%M:%S %Y-%m-%d") %>% str_sub(start = 15, end = 16),
sep = "")
return(pace)
}
install.packages("Matrix")
remove.packages("Matrix")
install.packages("Matrix")
library(Matrix)
test = function(distance, minutes) {
m = 2
s = 2 * distince + minutes
return(s)
}
test(distance = 2, minutes = 5)
test = function(distance, minutes) {
m = 2
s = 2 * distance + minutes
return(s)
}
test(distance = 2, minutes = 5)
View(cars)
library(dplyr)
test(distance = 2, minutes = 5)
table(cars)
test3 = function(x){
k = sample(x, 1)
return(k)
}
test3(x = 9)
test3(x = 9)
test3(x = 9)
test3(x = 9)
install.packages(c("cpp11", "dbplyr", "digest", "haven", "jsonlite", "processx", "readxl", "rmarkdown", "rstudioapi", "webshot", "xml2"))
install.packages(c("cpp11", "dbplyr", "digest", "haven", "jsonlite", "processx", "readxl", "rmarkdown", "rstudioapi", "webshot", "xml2"))
install.packages(c("cpp11", "dbplyr", "digest", "haven", "jsonlite", "processx", "readxl", "rmarkdown", "rstudioapi", "webshot", "xml2"))
install.packages(c("cpp11", "dbplyr", "digest", "haven", "jsonlite", "processx", "readxl", "rmarkdown", "rstudioapi", "webshot", "xml2"))
install.packages(c("cpp11", "dbplyr", "digest", "haven", "jsonlite", "processx", "readxl", "rmarkdown", "rstudioapi", "webshot", "xml2"))
install.packages(c("cpp11", "dbplyr", "digest", "haven", "jsonlite", "processx", "readxl", "rmarkdown", "rstudioapi", "webshot", "xml2"))
install.packages(c("cpp11", "dbplyr", "digest", "haven", "jsonlite", "processx", "readxl", "rmarkdown", "rstudioapi", "webshot", "xml2"))
install.packages(c("cpp11", "dbplyr", "digest", "haven", "jsonlite", "processx", "readxl", "rmarkdown", "rstudioapi", "webshot", "xml2"))
install.packages(c("cpp11", "dbplyr", "digest", "haven", "jsonlite", "processx", "readxl", "rmarkdown", "rstudioapi", "webshot", "xml2"))
<h1>Kevin Wongsz</h1>
spotify = read.csv("~/Documents/Kevin Stuff/Not Work/website/Website Files/more website files/Spotify_Wrapped.csv")
library(dplyr)
spotify = read.csv("~/Documents/Kevin Stuff/Not Work/website/Website Files/more website files/Spotify_Wrapped.csv")
spotify = read.csv("~/Documents/Kevin Stuff/Not Work/website/Website Files/more website files/Spotify_Wrapped.csv")
spotify = read.csv("~/Documents/Kevin Website/kevinjameswong.github.io/Spotify Wrapped - Spotify Wrapped.csv")
spotify = read.csv("~/Documents/Kevin Website/kevinjameswong.github.io/Spotify Wrapped - Spotify Wrapped.csv")
library(dplyr)
spotify = read.csv("~/Documents/Kevin Website/kevinjameswong.github.io/Spotify Wrapped - Spotify Wrapped.csv")
spotify = read.csv("~/Documents/Kevin Website/kevinjameswong.github.io/Spotify Wrapped - Spotify Wrapped.csv")
spotify = read.csv("~/Documents/KevinWebsite/kevinjameswong.github.io/Spotify Wrapped - Spotify Wrapped.csv")
view(spotify)
View(spotify)
spotify = spotify %>% group_by(Year) %>% mutate(Score = max(row_number()) + 1 - row_number())
View (spotify)
View (spotify)
spotify = spotify %>% group_by(Year) %>% mutate(Score = max(row_number()) + 1 - row_number())
spotify = spotify %>% group_by(Year) %>% mutate(Score = max(row_number()) + 1 - row_number())
View(spotify)
View(spotify)
spotify = spotify %>% group_by(Year) %>% mutate(Score = max(row_number()) + 1 - row_number())
View(spotify)
spotify = spotify %>% group_by(Year) %>% mutate(Score = max(row_number()) + 1 - row_number(), Kevin = 2)
View(spotify)
spotify = read.csv("~/Documents/KevinWebsite/kevinjameswong.github.io/Spotify Wrapped - Spotify Wrapped.csv")
spotify = spotify %>% group_by(Year) %>% mutate(Score = max(row_number()) + 1 - row_number(), Devin = 2)
View(spotify)
View(spotify)
filter(spotify)
?filter
filter(.data = spotify)
filter(.data = spotify, na.rm = TRUE)
filter(.data = spotify, Song != NA)
filter(.data = spotify, is.na(Song) != FALSE)
filter(.data = spotify, is.na(Song) = TRUE)
filter(.data = spotify, is.na(Song) != TRUE)
filter(.data = spotify, is.na(Song))
filter(.data = spotify, Song != "")
spotify = spotify %>% group_by(Year) %>% mutate(Score = max(row_number()) + 1 - row_number(), Devin = 2) %>% filter(Song != "")
View(spotify)
spotify = spotify %>% group_by(Year) %>% mutate(Score = max(row_number()) + 1 - row_number(), Devin = 2) %>% filter(Song != "")
spotify = read.csv("~/Documents/KevinWebsite/kevinjameswong.github.io/Spotify Wrapped - Spotify Wrapped.csv")
spotify = spotify %>% group_by(Year) %>% mutate(Score = max(row_number()) + 1 - row_number(), Devin = 2) %>% filter(Song != "")
View(spotify)
spotify %>%
group_by(Album)   %>%
count(Album)      %>%
rename(Count = n) %>%
arrange(desc(Count))
spotify %>%
group_by(Album)   %>%
count(Album)      %>%
rename(Count = n) %>%
arrange(desc(Count))
a1 = spotify %>%
count(Artist.1) %>%
rename(Total = n, Artist = Artist.1)
a2 = spotify %>%
count(Artist.2) %>%
rename(Total = n, Artist = Artist.2)
a3 = spotify %>%
count(Artist.3) %>%
rename(Total = n, Artist = Artist.3)
a4 = spotify %>%
count(Artist.4) %>%
rename(Total = n, Artist = Artist.4)
a5 = spotify %>%
count(Artist.5) %>%
rename(Total = n, Artist = Artist.5)
a6 = spotify %>%
count(Artist.6) %>%
rename(Total = n, Artist = Artist.6)
bind_rows(a1, a2, a3, a4, a5, a6) %>%
arrange(Artist) %>%
group_by(Artist) %>%
summarize(Total = sum(Total)) %>%
arrange(desc(Total)) %>%
tail(n = -1)
spotify %>%
group_by(Song, Artist.1, Artist.2, Artist.3, Artist.4, Artist.5, Artist.6) %>%
count(Song, Artist.1, Artist.2, Artist.3, Artist.4, Artist.5, Artist.6, Total = sum(Score)) %>%
rename(Appearances = n) %>%
arrange(desc(Total), desc(Appearances))
spotify %>%
group_by(Song, Artist.1, Artist.2, Artist.3, Artist.4, Artist.5, Artist.6)
spotify = read.csv("~/Documents/KevinWebsite/kevinjameswong.github.io/Spotify Wrapped - Spotify Wrapped.csv")
spotify = spotify %>% group_by(Year) %>% mutate(Score = max(row_number()) + 1 - row_number(), Devin = 2) %>% filter(Song != "")
Update_Date = as.Date("11-01-2023", format = "%m-%d-%Y")
library(tidyverse)
library(tidyverse)
library(dplyr)
library(lubridate)
library(knitr)
library(kableExtra)
library(tidyverse)
library(dplyr)
library(lubridate)
library(knitr)
library(kableExtra)
library(tidyverse)
library(stringr)
library(ggplot2)
spotify = read.csv("~/Documents/KevinWebsite/kevinjameswong.github.io/Spotify Wrapped - Spotify Wrapped.csv")
spotify = spotify %>% group_by(Year) %>% mutate(Score = max(row_number()) + 1 - row_number(), Devin = 2) %>% filter(Song != "")
View(spotify)
spotify = spotify %>% group_by(Year) %>% mutate(Score = max(row_number()) + 1 - row_number(), Kevin = 2) %>% filter(Song != "")
View(spotify)
spotify = read.csv("~/Documents/KevinWebsite/kevinjameswong.github.io/Spotify Wrapped - Spotify Wrapped.csv")
spotify = spotify %>% group_by(Year) %>% mutate(Score = max(row_number()) + 1 - row_number(), Kevin = 2) %>% filter(Song != "")
View(spotify)
View(spotify)
test = max(spotify) %>% group_by(Year)
spotify %>% group_by(Year)
spotify %>% group_by(Year) %>% max()
spotify %>% group_by(Year) %>% max(Score)
spotify = read.csv("~/Documents/KevinWebsite/kevinjameswong.github.io/Spotify Wrapped - Spotify Wrapped.csv")
spotify = spotify %>% group_by(Year) %>% mutate(Score = max(row_number()) + 1 - row_number(), Kevin = 1) %>% filter(Song != "")
View(spotify)
spotify %>%
group_by(Album)   %>%
count(Album)      %>%
rename(Count = n) %>%
arrange(desc(Count))
View(spotify)
spotify %>% group_by(Song) %>% sum(Score)
spotify = spotify %>% group_by(Year) %>% mutate(Score = max(row_number()) + 1 - row_number(), Kevin = 1) %>% filter(Song != "")
View(spotify)
spotify %>% group_by(Song) %>% sum(Score)
spotify %>% group_by(Song) %>% sum()
spotify %>% group_by(Song)
spotify %>% summarise()
spotify %>% group_by(Song) %>% summarise(
score = sum(Score)
)
```{r echo = FALSE, warning = FALSE, message = FALSE}
library(lubridate)
library(knitr)
library(kableExtra)
library(tidyverse)
library(tidyverse)
library(stringr)
library(ggplot2)
Start_Date = as.Date("1/28/2018", format = "%m/%d/%Y")
Start_Date
Start_Date = as.Date("01-28-2018", format = "%m/%d/%Y")
Start_Date
Start_Date = as.Date("01-28-2018", format = "%m-%d-%Y")
Start_Date
Sys.Date()
rleid(b)
library(rvest)
rleid(b)
rleid(a)
a = "https://open.spotify.com/track/161pnfRpiTTMZC1NWmjwh4"
library(rvest)
a %>% read_html() %>%
```
a %>% read_html()
rleid(a)
library(rvest)
rleid(a)
?rleid
??rleid
pie = data.frame(
s = s, t = t
)
s = 1:length(t)
t = c(3.49, 3.07, 3.58, 1.13, 1.81, 2.37, 2.25, 3.32, 3.61, 4.15, 3.97, 3.28, 2.51, 2.87, 3.23, 2.36, 3.61)
pie = data.frame(
s = s, t = t
)
s = 1:length(t)
t = c(3.49, 3.07, 3.58, 1.13, 1.81, 2.37, 2.25, 3.32, 3.61, 4.15, 3.97, 3.28, 2.51, 2.87, 3.23, 2.36, 3.61)
pie = data.frame(
s = s, t = t
)
t = c(3.49, 3.07, 3.58, 1.13, 1.81, 2.37, 2.25, 3.32, 3.61, 4.15, 3.97, 3.28, 2.51, 2.87, 3.23, 2.36, 3.61)
s = 1:length(t)
pie = data.frame(
s = s, t = t
)
po = lm(t ~ s, data = pie)
summary(po)
ggplot(data = pie, aes(x = s, y = t)) + geom_point()
library(ggplot2)
ggplot(data = pie, aes(x = s, y = t)) + geom_point()
ggplot(data = pie, aes(x = s, y = t))
ggplot(data = pie, aes(x = s, y = t)) + geom_point()
git config
git config --global user.email
test
$ gif config
read_data = read.csv(file = "~/Documents/KevinWebsite/kevinjameswong.github.io/files/psychology.csv", skip = 1)
View(read_data)
read_data = read.csv(file = "~/Documents/KevinWebsite/kevinjameswong.github.io/files/psychology.csv", skip = 1)
View(read_data)
read_data = read.csv(file = "~/Documents/KevinWebsite/kevinjameswong.github.io/files/psychology.csv", skip = 0)
View(read_data)
read_data$index = Kevin
read_data = read.csv(file = "~/Documents/KevinWebsite/kevinjameswong.github.io/files/psychology.csv", skip = 0)
read_data$index = read_data$Kevin
View(read_data)
kable(read_data, format = "html", align = "lrrrr") %>%
kable_styling(bootstrap_options = c("hover", "responsive"))#
library(knitr)
library(kableExtra)
library(rlang)
library(tidyverse)
library(stringr)
library(ggplot2)
library(dplyr)
read_data = read.csv(file = "~/Documents/KevinWebsite/kevinjameswong.github.io/files/psychology.csv", skip = 0)
read_data$Index = read_data$Kevin
kable(read_data, format = "html", align = "lrrrr") %>%
kable_styling(bootstrap_options = c("hover", "responsive"))
?kable
kable(x = read_data, format = "html", align = "lllll") %>%
kable_styling(bootstrap_options = c("hover", "responsive"))
git push
git add
