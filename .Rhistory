runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
install.packages("learrn")
install.packages("learnr")
library(learnr)
quiz(
question("What number is the letter A in the alphabet?",
answer("8"),
answer("14"),
answer("1", correct = TRUE),
answer("23"),
incorrect = "See [here](https://en.wikipedia.org/wiki/English_alphabet) and try again.",
allow_retry = TRUE
),
question("Where are you right now? (select ALL that apply)",
answer("Planet Earth", correct = TRUE),
answer("Pluto"),
answer("At a computing device", correct = TRUE),
answer("In the Milky Way", correct = TRUE),
incorrect = paste0("Incorrect. You're on Earth, ",
"in the Milky Way, at a computer.")
)
)
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
korean = read.csv(file = "files/koreanphrases.csv")
korean$Index = korean %>% nrow() %>% seq.int()
korean = korean %>%
group_by(English, Korean, Romanization) %>%
mutate(count = n()) %>%
#filter(Romanization == "hwajangsil") %>%
mutate(TT = min(Index)) %>% #the min Index per row
mutate(Duplicate = ifelse(TT == Index, 0, 1)) %>%
select(English, Korean, Romanization, Index, Duplicate)
View(korean)
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
korean = korean %>%
group_by(English, Korean, Romanization) %>%
mutate(count = n()) %>%
#filter(Romanization == "hwajangsil") %>%
mutate(TT = min(Index)) %>% #the min Index per row
mutate(Duplicate = ifelse(TT == Index, 0, 1)) %>%
select(English, Korean, Romanization, Index, Duplicate) %>%
filter(Index <= 5)
sample(x = 1:length(table(korean$Index)), size = 3, replace = TRUE)
sample(x = 1:length(table(korean$Index)), size = 3, replace = TRUE)
sample(x = 1:length(table(korean$Index)), size = 3, replace = FALSE)
sample(x = 1:length(table(korean$Index)), size = 3, replace = FALSE)
sample(x = 1:length(table(korean$Index)), size = 3, replace = FALSE)
sample(x = 1:length(table(korean$Index)), size = 3, replace = FALSE)
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
?sample_n()
sample_n(tbl = korean$Index, size = 3, replace = FALSE)
korean = korean %>%
group_by(English, Korean, Romanization) %>%
mutate(count = n()) %>%
#filter(Romanization == "hwajangsil") %>%
mutate(TT = min(Index)) %>% #the min Index per row
mutate(Duplicate = ifelse(TT == Index, 0, 1)) %>%
select(English, Korean, Romanization, Index, Duplicate) %>%
filter(Index <= 5)
sample_n(tbl = korean$Index, size = 3, replace = FALSE)
sample_n(tbl = korean, size = 3, replace = FALSE)
korean = korean %>%
group_by(English, Korean, Romanization) %>%
mutate(count = n()) %>%
#filter(Romanization == "hwajangsil") %>%
mutate(TT = min(Index)) %>% #the min Index per row
mutate(Duplicate = ifelse(TT == Index, 0, 1)) %>%
select(English, Korean, Romanization, Index, Duplicate) %>%
filter(Index <= 5)
korean = read.csv(file = "files/koreanphrases.csv")
korean$Index = korean %>% nrow() %>% seq.int()
korean = korean %>%
group_by(English, Korean, Romanization) %>%
mutate(count = n()) %>%
#filter(Romanization == "hwajangsil") %>%
mutate(TT = min(Index)) %>% #the min Index per row
mutate(Duplicate = ifelse(TT == Index, 0, 1)) %>%
select(English, Korean, Romanization, Index, Duplicate) %>%
filter(Index <= 5)
korean = read.csv(file = "files/koreanphrases.csv")
korean$Index = korean %>% nrow() %>% seq.int()
korean = korean %>%
group_by(English, Korean, Romanization) %>%
mutate(count = n()) %>%
#filter(Romanization == "hwajangsil") %>%
mutate(TT = min(Index)) %>% #the min Index per row
mutate(Duplicate = ifelse(TT == Index, 0, 1)) %>%
select(English, Korean, Romanization, Index, Duplicate) %>%
filter(Index <= 5)
sample_n(tbl = korean, size = 3, replace = FALSE)
sample_n(tbl = korean$Index, size = 3, replace = FALSE)
sample_n(tbl = korean, size = 3, replace = FALSE)
sample_n(tbl = korean, size = 2, replace = FALSE)
sample_n(tbl = korean, size = 1, replace = FALSE)
df[sample(nrow(korean), 3), ]
df[sample(nrow(korean), 3), ]
df[sample(korean, 3), ]
korean = korean %>%
group_by(English, Korean, Romanization) %>%
mutate(count = n()) %>%
#filter(Romanization == "hwajangsil") %>%
mutate(TT = min(Index)) %>% #the min Index per row
mutate(Duplicate = ifelse(TT == Index, 0, 1)) %>%
select(English, Korean, Romanization, Index, Duplicate) %>%
filter(Index <= 5)
Korean$Index %>% filter(Index != correct_answer_int)
korean$Index %>% filter(Index != correct_answer_int)
wrong_answers_int = korean$Index %>% filter(as.integer(Index) != correct_answer_int)
wrong_answers_int = korean$Index %>% filter(as.integer(Index) != as.integer(correct_answer_int))
wrong_answers_int = korean$Index %>% filter(as.numeric(Index) != as.numeric(correct_answer_int))
korean = korean %>%
group_by(English, Korean, Romanization) %>%
mutate(count = n()) %>%
#filter(Romanization == "hwajangsil") %>%
mutate(TT = min(Index)) %>% #the min Index per row
mutate(Duplicate = ifelse(TT == Index, 0, 1)) %>%
select(English, Korean, Romanization, Index, Duplicate) %>%
filter(Index <= 5)
str(korean)
korean = read.csv(file = "files/koreanphrases.csv")
korean$Index = korean %>% nrow() %>% seq.int()
korean = korean %>%
group_by(English, Korean, Romanization) %>%
mutate(count = n()) %>%
#filter(Romanization == "hwajangsil") %>%
mutate(TT = min(Index)) %>% #the min Index per row
mutate(Duplicate = ifelse(TT == Index, 0, 1) %>% as.integer()) %>%
select(English, Korean, Romanization, Index, Duplicate) %>%
filter(Index <= 10)
str(korean)
correct_answer_int = 2
wrong_answers_int = korean$Index %>% filter(Index!= correct_answer_int)
correct_answer_int = 2 %>% as.integer()
wrong_answers_int = korean$Index %>% filter(Index!= correct_answer_int)
correct_answer_int = 2 %>% as.integer()
wrong_answers_int = korean$Index %>% filter(Index!= correct_answer_int)
wrong_answers_int = korean$Index %>% slice(Index != correct_answer_int)
wrong_answers_int = korean$Index %>% slice(Index != 2)
korean = read.csv(file = "files/koreanphrases.csv")
korean$Index = korean %>% nrow() %>% seq.int()
korean = korean %>%
group_by(English, Korean, Romanization) %>%
mutate(count = n()) %>%
#filter(Romanization == "hwajangsil") %>%
mutate(TT = min(Index)) %>% #the min Index per row
mutate(Duplicate = ifelse(TT == Index, 0, 1) %>% as.integer()) %>%
select(English, Korean, Romanization, Index, Duplicate) %>%
slicer(Index <= 10)
korean = korean %>%
group_by(English, Korean, Romanization) %>%
mutate(count = n()) %>%
#filter(Romanization == "hwajangsil") %>%
mutate(TT = min(Index)) %>% #the min Index per row
mutate(Duplicate = ifelse(TT == Index, 0, 1) %>% as.integer()) %>%
select(English, Korean, Romanization, Index, Duplicate) %>%
slice(Index <= 10)
korean = read.csv(file = "files/koreanphrases.csv")
korean$Index = korean %>% nrow() %>% as.integer()
korean = korean %>%
group_by(English, Korean, Romanization) %>%
mutate(count = n()) %>%
#filter(Romanization == "hwajangsil") %>%
mutate(TT = min(Index)) %>% #the min Index per row
mutate(Duplicate = ifelse(TT == Index, 0, 1) %>% as.integer()) %>%
select(English, Korean, Romanization, Index, Duplicate) %>%
filter(Index <= 10)
str(korean)
correct_answer_int = 2 %>% as.integer()
wrong_answers_int = korean$Index %>% slicer(Index != 2)
wrong_answers_int = korean$Index %>% filter(Index != 2)
filter(korean$Index, Index = 3)
korean %>% filter(Index != 2)
korean = korean %>%
group_by(English, Korean, Romanization) %>%
mutate(count = n()) %>%
#filter(Romanization == "hwajangsil") %>%
mutate(TT = min(Index)) %>% #the min Index per row
mutate(Duplicate = ifelse(TT == Index, 0, 1) %>% as.integer()) %>%
select(English, Korean, Romanization, Index, Duplicate) %>%
filter(Index <= 10)
korean = read.csv(file = "files/koreanphrases.csv")
korean$Index = korean %>% nrow() %>% as.integer()
korean = korean %>%
group_by(English, Korean, Romanization) %>%
mutate(count = n()) %>%
#filter(Romanization == "hwajangsil") %>%
mutate(TT = min(Index)) %>% #the min Index per row
mutate(Duplicate = ifelse(TT == Index, 0, 1) %>% as.integer()) %>%
select(English, Korean, Romanization, Index, Duplicate) %>%
filter(Index <= 10)
korean %>% filter(Index != 2)
wrong_answers_int = korean %>% filter(Index == 2)
korean %>% filter(Index == 2)
korean
korean = read.csv(file = "files/koreanphrases.csv")
korean$Index = korean %>% nrow() %>% as.integer()
korean = korean %>%
group_by(English, Korean, Romanization) %>%
mutate(count = n()) %>%
#filter(Romanization == "hwajangsil") %>%
mutate(TT = min(Index)) %>% #the min Index per row
mutate(Duplicate = ifelse(TT == Index, 0, 1) %>% as.integer()) %>%
select(English, Korean, Romanization, Index, Duplicate) %>%
filter(Index <= 10)
View(korean)
korean = read.csv(file = "files/koreanphrases.csv")
View(korean)
korean$Index = korean %>% nrow() %>% as.integer()
View(korean)
korean$Index = korean %>% nrow() %>% seq.int()
korean = korean %>%
group_by(English, Korean, Romanization) %>%
mutate(count = n()) %>%
#filter(Romanization == "hwajangsil") %>%
mutate(TT = min(Index)) %>% #the min Index per row
mutate(Duplicate = ifelse(TT == Index, 0, 1) %>% as.integer()) %>%
select(English, Korean, Romanization, Index, Duplicate) %>%
filter(Index <= 10)
korean %>% filter(Index == 2)
korean$Index %>% filter(Index == 2)
korean %>% filter(Index == 2) %>% select(Index)
korean %>% filter(Index == 2)
korean %>% filter(Index == 2) %>% select(Index)
t = korean %>% filter(Index == 2) %>% select(Index)
t + 2
t = korean %>% filter(Index == 2) %>% select(Index)
t = korean %>% filter(Index == 2) %>% group_by(Index) %>% select(Index)
t + 2
t = korean %>% filter(Index == 2) %>% group_by(Index)
t
tt = 2
t = korean %>% filter(Index != tt) %>% group_by(Index) %>% select(Index)
t
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
korean = read.csv(file = "files/koreanphrases.csv")
korean$Index = korean %>% nrow() %>% seq.int()
korean = korean %>%
group_by(English, Korean, Romanization) %>%
mutate(count = n()) %>%
#filter(Romanization == "hwajangsil") %>%
mutate(TT = min(Index)) %>% #the min Index per row
mutate(Duplicate = ifelse(TT == Index, 0, 1) %>% as.integer()) %>%
select(English, Korean, Romanization, Index, Duplicate) %>%
filter(Index <= 10)
correct_answer_int = 2
wrong_answers_int = sample(x = korean %>% filter(Index != correct_answer_int) %>% group_by(Index) %>% select(Index), size = 3, replace = FALSE)
korean %>% filter(Index != correct_answer_int) %>% group_by(Index) %>% select(Index)
korean %>% filter(Index != correct_answer_int) %>% group_by(Index) %>% select(Index) %>% list()
korean %>% filter(Index != correct_answer_int) %>% group_by(Index) %>% select(Index) %>% as.list()
korean %>% filter(Index != correct_answer_int) %>% group_by(Index) %>% select(Index) %>% c()
wrong_answers_int = sample(x = korean %>% filter(Index != correct_answer_int) %>% group_by(Index) %>% select(Index) %>% c(), size = 3, replace = FALSE)
korean %>% filter(Index != correct_answer_int) %>% group_by(Index) %>% select(Index) %>% c()
korean %>% filter(Index != correct_answer_int) %>% group_by(Index) %>% select(Index) %>% c() %>% unlist()
wrong_answers_int = sample(x = korean %>% filter(Index != correct_answer_int) %>% group_by(Index) %>% select(Index) %>% c() %>% unlist(), size = 3, replace = FALSE)
wrong_answers_int
wrong_answers_int
),
wrong_answers_int = sample(x = korean %>% filter(Index != correct_answer_int) %>% group_by(Index) %>% select(Index) %>% c() %>% unlist() %>% c(), size = 3, replace = FALSE)
wrong_answers_int
wrong_answers_int = sample(x = korean %>% filter(Index != correct_answer_int) %>% group_by(Index) %>% select(Index) %>% c() %>% unlist() %>% c(), size = 3, replace = FALSE)
wrong_answers_int
wrong_answers_int = sample(x = korean %>% filter(Index != correct_answer_int) %>% group_by(Index) %>% select(Index) %>% c() %>% unlist() %>% c(), size = 3, replace = FALSE)
wrong_answers_int
wrong_answers_int = sample(x = korean %>% filter(Index != correct_answer_int) %>% group_by(Index) %>% select(Index) %>% unlist() %>% c(), size = 3, replace = FALSE)
wrong_answers_int
wrong_answers_int = sample(x = korean %>% filter(Index != correct_answer_int) %>% group_by(Index) %>% select(Index) %>% unlist() %>% c(), size = 3, replace = FALSE)
wrong_answers_int
sample(x = korean %>% filter(Index != correct_answer_int) %>% group_by(Index) %>% select(Index)
sample(x = korean %>% filter(Index != correct_answer_int) %>% group_by(Index) %>% select(Index)
korean %>% filter(Index != correct_answer_int) %>% group_by(Index) %>% select(Index)
runApp('korean.R')
korean %>% filter(Index != correct_answer_int) %>% group_by(Index) %>% select(Index)
sample_n(x = korean %>% filter(Index != correct_answer_int) %>% group_by(Index) %>% select(Index), size = 3, replace = FALSE)
sample_n(tbl = korean %>% filter(Index != correct_answer_int) %>% group_by(Index) %>% select(Index), size = 3, replace = FALSE)
?dput
korean %>% filter(Index != correct_answer_int) %>% group_by(Index) %>% select(Index) %>% dput()
korean %>% filter(Index != correct_answer_int) %>% group_by(Index) %>% select(Index) %>% dput()
wrong_answers_int = sample_n(x = korean %>% filter(Index != correct_answer_int) %>% group_by(Index) %>% select(Index) %>% dput(), size = 3, replace = FALSE)
wrong_answers_int = sample(x = korean %>% filter(Index != correct_answer_int) %>% group_by(Index) %>% select(Index) %>% dput(), size = 3, replace = FALSE)
korean %>% filter(Index != correct_answer_int) %>% group_by(Index) %>% select(Index) %>% dput()
wrong_answers_int = sample(x = korean %>% filter(Index != correct_answer_int) %>% group_by(Index) %>% select(Index) %>% unilst() %>% unname(), size = 3, replace = FALSE)
wrong_answers_int = sample(x = korean %>% filter(Index != correct_answer_int) %>% group_by(Index) %>% select(Index) %>% unlist() %>% unname(), size = 3, replace = FALSE)
wrong_answers_int
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('TTTTTTT.R')
runApp('TTTTTTT.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
question1_correct_answer_int_1 = sample(x = korean %>% filter(Duplicate == 0) %>% group_by(Index) %>% select(Index) %>% unlist() %>% unname(), size = 1, replace = FALSE)
question1_wrong_answer_int_1 = sample(x = korean %>% filter(Index != correct_answer_int, Duplicate == 0) %>% group_by(Index) %>% select(Index) %>% unlist() %>% unname(), size = 3, replace = FALSE)
question1_questionType = sample(x = input$questionType)[1]
question1_questionType = sample(x = 2)[1]
EtoK_question1 = korean[question1_correct_answer_int_1, ]$English
KtoE_question1 = korean[question1_correct_answer_int_1, ]$Korean
KtoR_question1 = korean[question1_correct_answer_int_1, ]$Korean
RtoK_question1 = korean[question1_correct_answer_int_1, ]$Romanization
EtoK_correct_answer1 = korean[question1_correct_answer_int_1, ]$Korean
KtoE_correct_answer1 = korean[question1_correct_answer_int_1, ]$English
KtoR_correct_answer1 = korean[question1_correct_answer_int_1, ]$Romanization
RtoK_correct_answer1 = korean[question1_correct_answer_int_1, ]$Korean
EtoK_wrong_answer1 = korean[question1_wrong_answer_int_1, ]$Korean
KtoE_wrong_answer1 = korean[question1_wrong_answer_int_1, ]$English
KtoR_wrong_answer1 = korean[question1_wrong_answer_int_1, ]$Romanization
RtoK_wrong_answer1 = korean[question1_wrong_answer_int_1, ]$Korean
all_questions_1 = c(EtoK_question1, KtoE_question1, KtoR_question1, RtoK_question1)
all_correct_answers_1 = c(EtoK_correct_answer1, KtoE_correct_answer1, KtoR_correct_answer1, RtoK_correct_answer1)
all_wrong_answers_1 = c(EtoK_wrong_answer1, KtoE_wrong_answer1, KtoR_wrong_answer1, RtoK_wrong_answer1)
all_questions_1[1]
question1_questionType = sample(x = 3)[1]
EtoK_question1 = korean[question1_correct_answer_int_1, ]$English
KtoE_question1 = korean[question1_correct_answer_int_1, ]$Korean
KtoR_question1 = korean[question1_correct_answer_int_1, ]$Korean
RtoK_question1 = korean[question1_correct_answer_int_1, ]$Romanization
EtoK_correct_answer1 = korean[question1_correct_answer_int_1, ]$Korean
KtoR_correct_answer1 = korean[question1_correct_answer_int_1, ]$Romanization
EtoK_wrong_answer1 = korean[question1_wrong_answer_int_1, ]$Korean
KtoE_wrong_answer1 = korean[question1_wrong_answer_int_1, ]$English
RtoK_wrong_answer1 = korean[question1_wrong_answer_int_1, ]$Korean
all_questions_1 = c(EtoK_question1, KtoE_question1, KtoR_question1, RtoK_question1)
all_correct_answers_1 = c(EtoK_correct_answer1, KtoE_correct_answer1, KtoR_correct_answer1, RtoK_correct_answer1)
all_wrong_answers_1 = c(EtoK_wrong_answer1, KtoE_wrong_answer1, KtoR_wrong_answer1, RtoK_wrong_answer1)
all_questions_1[1]
question1_questionType = sample(x = 3)[3]
EtoK_question1 = korean[question1_correct_answer_int_1, ]$English
KtoE_question1 = korean[question1_correct_answer_int_1, ]$Korean
KtoR_correct_answer1 = korean[question1_correct_answer_int_1, ]$Romanization
EtoK_wrong_answer1 = korean[question1_wrong_answer_int_1, ]$Korean
EtoK_wrong_answer1 = korean[question1_wrong_answer_int_1, ]$Korean
KtoE_wrong_answer1 = korean[question1_wrong_answer_int_1, ]$English
all_correct_answers_1 = c(EtoK_correct_answer1, KtoE_correct_answer1, KtoR_correct_answer1, RtoK_correct_answer1)
all_wrong_answers_1 = c(EtoK_wrong_answer1, KtoE_wrong_answer1, KtoR_wrong_answer1, RtoK_wrong_answer1)
all_questions_1[1]
all_questions_1
all_questions_1[3]
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
question1_correct_answer_int_1 = sample(x = korean %>% filter(Duplicate == 0) %>% group_by(Index) %>% select(Index) %>% unlist() %>% unname(), size = 1, replace = FALSE)
question1_wrong_answer_int_1 = sample(x = korean %>% filter(Index != correct_answer_int, Duplicate == 0) %>% group_by(Index) %>% select(Index) %>% unlist() %>% unname(), size = 3, replace = FALSE)
question1_questionType = sample(x = 3)[3]
EtoK_question1 = korean[question1_correct_answer_int_1, ]$English
KtoE_question1 = korean[question1_correct_answer_int_1, ]$Korean
KtoR_question1 = korean[question1_correct_answer_int_1, ]$Korean
EtoK_correct_answer1 = korean[question1_correct_answer_int_1, ]$Korean
KtoE_correct_answer1 = korean[question1_correct_answer_int_1, ]$English
KtoR_correct_answer1 = korean[question1_correct_answer_int_1, ]$Romanization
RtoK_correct_answer1 = korean[question1_correct_answer_int_1, ]$Korean
EtoK_wrong_answer1 = korean[question1_wrong_answer_int_1, ]$Korean
KtoE_wrong_answer1 = korean[question1_wrong_answer_int_1, ]$English
KtoR_wrong_answer1 = korean[question1_wrong_answer_int_1, ]$Romanization
RtoK_wrong_answer1 = korean[question1_wrong_answer_int_1, ]$Korean
all_questions_1 = c(EtoK_question1, KtoE_question1, KtoR_question1, RtoK_question1)
all_correct_answers_1 = c(EtoK_correct_answer1, KtoE_correct_answer1, KtoR_correct_answer1, RtoK_correct_answer1)
all_wrong_answers_1 = c(EtoK_wrong_answer1, KtoE_wrong_answer1, KtoR_wrong_answer1, RtoK_wrong_answer1)
all_wrong_answers_1[question1_questionType]
all_wrong_answers_1
KtoE_wrong_answer1
KtoE_wrong_answer1 %>% as.list()
question1_correct_answer_int_1 = sample(x = korean %>% filter(Duplicate == 0) %>% group_by(Index) %>% select(Index) %>% unlist() %>% unname(), size = 1, replace = FALSE)
question1_wrong_answer_int_1 = sample(x = korean %>% filter(Index != correct_answer_int, Duplicate == 0) %>% group_by(Index) %>% select(Index) %>% unlist() %>% unname(), size = 3, replace = FALSE)
question1_questionType = sample(x = 3)[3]
EtoK_question1 = korean[question1_correct_answer_int_1, ]$English
KtoE_question1 = korean[question1_correct_answer_int_1, ]$Korean
KtoR_question1 = korean[question1_correct_answer_int_1, ]$Korean
RtoK_question1 = korean[question1_correct_answer_int_1, ]$Romanization
EtoK_correct_answer1 = korean[question1_correct_answer_int_1, ]$Korean
KtoE_correct_answer1 = korean[question1_correct_answer_int_1, ]$English
KtoR_correct_answer1 = korean[question1_correct_answer_int_1, ]$Romanization
RtoK_correct_answer1 = korean[question1_correct_answer_int_1, ]$Korean
EtoK_wrong_answer1 = korean[question1_wrong_answer_int_1, ]$Korean
KtoE_wrong_answer1 = korean[question1_wrong_answer_int_1, ]$English
KtoR_wrong_answer1 = korean[question1_wrong_answer_int_1, ]$Romanization
RtoK_wrong_answer1 = korean[question1_wrong_answer_int_1, ]$Korean
all_questions_1 = c(EtoK_question1, KtoE_question1, KtoR_question1, RtoK_question1)
all_correct_answers_1 = c(EtoK_correct_answer1, KtoE_correct_answer1, KtoR_correct_answer1, RtoK_correct_answer1)
all_wrong_answers_1 = c(EtoK_wrong_answer1, KtoE_wrong_answer1, KtoR_wrong_answer1, RtoK_wrong_answer1)
all_wrong_answers_1
all_wrong_answers_1 = as.data.frame(EtoK_wrong_answer1, KtoE_wrong_answer1, KtoR_wrong_answer1, RtoK_wrong_answer1)
korean[c(2, 3, 4), ]$Korean
question1_wrong_answer_int_1
all_wrong_answers_1 = as.list(EtoK_wrong_answer1, KtoE_wrong_answer1, KtoR_wrong_answer1, RtoK_wrong_answer1)
all_wrong_answers_1
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
runApp('korean.R')
