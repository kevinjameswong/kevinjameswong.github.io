str_c(Rank %>% as.character(), "th"))))
) %>%
select(ArtistName, Year, Score, Song_Count, Rank, Rank_Text)
#TopArtists_ByYear$Year = as.factor(TopArtists_ByYear$Year)
TopArtists_ByYear$Rank = as.integer(TopArtists_ByYear$Rank)
TopArtists_ByYear$Brave = max(TopArtists_ByYear$Rank) + 1
TopArtists_ByYear$NewRank = TopArtists_ByYear$Brave - TopArtists_ByYear$Rank
left_join(x = TopArtists_ByYear, y = TopArtists_ByYear, by = c("ArtistName")) %>%
mutate("RepeatArtist" = ifelse(test = Year > Year, 1, 0),
"NewArtist" = ifelse(test = Year > Year, 0, 1))
left_join(x = TopArtists_ByYear, y = TopArtists_ByYear, by = c("ArtistName")) %>%
mutate("RepeatArtist" = ifelse(test = Year.y > Year.x, 1, 0),
"NewArtist" = ifelse(test = Year.y > Year.x, 0, 1))
left_join(x = TopArtists_ByYear, y = TopArtists_ByYear, by = c("ArtistName")) %>%
mutate("RepeatArtist" = ifelse(test = Year.y > Year.x, 1, 0),
"NewArtist" = ifelse(test = Year.y > Year.x, 0, 1)) %>%
filter(Year.y >= Year.x) %>%
group_by(Year.y, ArtistName) %>%
mutate("RepeatArtist2" = max(RepeatArtist),
"NewArtist2" = min(NewArtist)
) %>%
select(ArtistName, Year.y, RepeatArtist2, NewArtist2) %>%
unique()
left_join(x = TopArtists_ByYear, y = TopArtists_ByYear, by = c("ArtistName")) %>%
mutate("RepeatArtist" = ifelse(test = Year.y > Year.x, 1, 0),
"NewArtist" = ifelse(test = Year.y > Year.x, 0, 1)) %>%
filter(Year.y >= Year.x) %>%
group_by(Year.y, ArtistName) %>%
mutate("RepeatArtist2" = max(RepeatArtist),
"NewArtist2" = min(NewArtist)
) %>%
select(ArtistName, Year.y, Song_Count, RepeatArtist2, NewArtist2) %>%
unique()
TopArtists_ByYear =
spotify %>%
group_by(Year, ArtistName) %>%
summarize(xt = sum(Score), Song_Count = n()) %>%
rename("Score" = xt) %>%
arrange(Year, desc(Score), ArtistName) %>%
group_by(Year) %>%
mutate(Rank = row_number(Year), xx = str_sub(string = row_number(Year), start = (row_number(Year) %>% str_length()), end = 100) %>% as.integer()) %>%
mutate(
Rank_Text = ifelse(xx == 1, str_c(Rank %>% as.character(), "st"),
ifelse(xx == 2, str_c(Rank %>% as.character(), "nd"),
ifelse(xx == 3, str_c(Rank %>% as.character(), "rd"),
str_c(Rank %>% as.character(), "th"))))
) %>%
select(ArtistName, Year, Score, Song_Count, Rank, Rank_Text)
#TopArtists_ByYear$Year = as.factor(TopArtists_ByYear$Year)
TopArtists_ByYear$Rank = as.integer(TopArtists_ByYear$Rank)
TopArtists_ByYear$Brave = max(TopArtists_ByYear$Rank) + 1
TopArtists_ByYear$NewRank = TopArtists_ByYear$Brave - TopArtists_ByYear$Rank
left_join(x = TopArtists_ByYear, y = TopArtists_ByYear, by = c("ArtistName")) %>%
mutate("RepeatArtist" = ifelse(test = Year.y > Year.x, 1, 0),
"NewArtist" = ifelse(test = Year.y > Year.x, 0, 1)) %>%
filter(Year.y >= Year.x) %>%
group_by(Year.y, ArtistName) %>%
mutate("RepeatArtist2" = max(RepeatArtist),
"NewArtist2" = min(NewArtist)
) %>%
select(ArtistName, Year.y, Song_Count, RepeatArtist2, NewArtist2) %>%
unique()
left_join(x = TopArtists_ByYear, y = TopArtists_ByYear, by = c("ArtistName")) %>%
mutate("RepeatArtist" = ifelse(test = Year.y > Year.x, 1, 0),
"NewArtist" = ifelse(test = Year.y > Year.x, 0, 1)) %>%
filter(Year.y >= Year.x) %>%
group_by(Year.y, ArtistName) %>%
mutate("RepeatArtist2" = max(RepeatArtist),
"NewArtist2" = min(NewArtist)
) %>%
select(ArtistName, Year.y, Song_Count,y, RepeatArtist2, NewArtist2) %>%
unique()
left_join(x = TopArtists_ByYear, y = TopArtists_ByYear, by = c("ArtistName")) %>%
mutate("RepeatArtist" = ifelse(test = Year.y > Year.x, 1, 0),
"NewArtist" = ifelse(test = Year.y > Year.x, 0, 1)) %>%
filter(Year.y >= Year.x) %>%
group_by(Year.y, ArtistName) %>%
mutate("RepeatArtist2" = max(RepeatArtist),
"NewArtist2" = min(NewArtist)
)
left_join(x = TopArtists_ByYear, y = TopArtists_ByYear, by = c("ArtistName")) %>%
mutate("RepeatArtist" = ifelse(test = Year.y > Year.x, 1, 0),
"NewArtist" = ifelse(test = Year.y > Year.x, 0, 1)) %>%
filter(Year.y >= Year.x) %>%
group_by(Year.y, ArtistName) %>%
mutate("RepeatArtist2" = max(RepeatArtist),
"NewArtist2" = min(NewArtist)
) %>%
select(ArtistName, Year.y, Song_Count.y, RepeatArtist2, NewArtist2) %>%
unique()
Year_Artist =
left_join(x = TopArtists_ByYear, y = TopArtists_ByYear, by = c("ArtistName")) %>%
mutate("RepeatArtist" = ifelse(test = Year.y > Year.x, 1, 0),
"NewArtist" = ifelse(test = Year.y > Year.x, 0, 1)) %>%
filter(Year.y >= Year.x) %>%
group_by(Year.y, ArtistName) %>%
mutate("RepeatArtist2" = max(RepeatArtist),
"NewArtist2" = min(NewArtist)
) %>%
select(ArtistName, Year.y, Song_Count.y, RepeatArtist2, NewArtist2) %>%
unique()
sum(Year_Artist$Song_Count.y)
runApp('spotify.R')
Year_Artist
Year_Artist =
left_join(x = TopArtists_ByYear, y = TopArtists_ByYear, by = c("ArtistName")) %>%
mutate("RepeatArtist" = ifelse(test = Year.y > Year.x, 1, 0),
"NewArtist" = ifelse(test = Year.y > Year.x, 0, 1)) %>%
filter(Year.y >= Year.x) %>%
group_by(Year.y, ArtistName) %>%
mutate("RepeatArtist2" = max(RepeatArtist),
"NewArtist2" = min(NewArtist),
AA = ifelse(max(RepeatArtist = 1, "Repeat Artist", "New Artist"))
) %>%
select(ArtistName, Year.y, Song_Count.y, RepeatArtist2, NewArtist2) %>%
unique()
Year_Artist
Year_Artist =
left_join(x = TopArtists_ByYear, y = TopArtists_ByYear, by = c("ArtistName")) %>%
mutate("RepeatArtist" = ifelse(test = Year.y > Year.x, 1, 0),
"NewArtist" = ifelse(test = Year.y > Year.x, 0, 1)) %>%
filter(Year.y >= Year.x) %>%
group_by(Year.y, ArtistName) %>%
mutate("RepeatArtist2" = max(RepeatArtist),
"NewArtist2" = min(NewArtist),
AA = ifelse(max(RepeatArtist = 1, "Repeat Artist", "New Artist"))
) %>%
select(ArtistName, Year.y, Song_Count.y, RepeatArtist2, NewArtist2, AA) %>%
unique()
Year_Artist
Year_Artist =
left_join(x = TopArtists_ByYear, y = TopArtists_ByYear, by = c("ArtistName")) %>%
mutate("RepeatArtist" = ifelse(test = Year.y > Year.x, 1, 0),
"NewArtist" = ifelse(test = Year.y > Year.x, 0, 1)) %>%
filter(Year.y >= Year.x) %>%
group_by(Year.y, ArtistName) %>%
mutate("RepeatArtist2" = max(RepeatArtist),
"NewArtist2" = min(NewArtist),
AA = ifelse(test = RepeatArtist = 1, yes = "Repeat Artist", no = "New Artist")
Year_Artist =
left_join(x = TopArtists_ByYear, y = TopArtists_ByYear, by = c("ArtistName")) %>%
mutate("RepeatArtist" = ifelse(test = Year.y > Year.x, 1, 0),
"NewArtist" = ifelse(test = Year.y > Year.x, 0, 1)) %>%
filter(Year.y >= Year.x) %>%
group_by(Year.y, ArtistName) %>%
mutate("RepeatArtist2" = max(RepeatArtist),
"NewArtist2" = min(NewArtist),
AA = ifelse(test = RepeatArtist == 1, yes = "Repeat Artist", no = "New Artist")
) %>%
select(ArtistName, Year.y, Song_Count.y, RepeatArtist2, NewArtist2, AA) %>%
unique()
Year_Artist
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
Year_Artist %>%
filter(Year.y == input$SelectedYear) %>%
group_by(AA) %>%
summarize(`Song Count` = sum(Song_Count.y))
Year_Artist %>%
filter(Year.y == 2024) %>%
group_by(AA) %>%
summarize(`Song Count` = sum(Song_Count.y))
Year_Artist
Year_Artist %>%
filter(Year.y == 2024)
Year_Artist %>%
filter(Year.y == 2024, ArtistName = "Red Rocks Worship")
Year_Artist %>%
filter(Year.y == 2024, ArtistName == "Red Rocks Worship")
left_join(x = TopArtists_ByYear, y = TopArtists_ByYear, by = c("ArtistName")) %>%
mutate("RepeatArtist" = ifelse(test = Year.y > Year.x, 1, 0),
"NewArtist" = ifelse(test = Year.y > Year.x, 0, 1)) %>%
filter(Year.y >= Year.x) %>%
group_by(Year.y, ArtistName)
#Year_Artist =
left_join(x = TopArtists_ByYear, y = TopArtists_ByYear, by = c("ArtistName")) %>%
mutate("RepeatArtist" = ifelse(test = Year.y > Year.x, 1, 0),
"NewArtist" = ifelse(test = Year.y > Year.x, 0, 1)) %>%
filter(Year.y >= Year.x) %>%
group_by(Year.y, ArtistName) %>%
mutate(AA = ifelse(test = RepeatArtist == 1, yes = "Repeat Artist", no = "New Artist")
) %>%
select(ArtistName, Year.y, Song_Count.y, RepeatArtist, NewArtist, AA) %>%
unique()
#Year_Artist =
left_join(x = TopArtists_ByYear, y = TopArtists_ByYear, by = c("ArtistName")) %>%
mutate("RepeatArtist" = ifelse(test = Year.y > Year.x, 1, 0),
"NewArtist" = ifelse(test = Year.y > Year.x, 0, 1)) %>%
filter(Year.y >= Year.x) %>%
group_by(Year.y, ArtistName) %>%
mutate(AA = ifelse(test = RepeatArtist == 1, yes = "Repeat Artist", no = "New Artist")
) %>%
select(ArtistName, Year.y, Song_Count.y, RepeatArtist, NewArtist, AA) %>%
unique() %>%
filter(ArtistName == "Tori Kelly")
left_join(x = TopArtists_ByYear, y = TopArtists_ByYear, by = c("ArtistName")) %>%
mutate("RepeatArtist" = ifelse(test = Year.y > Year.x, 1, 0),
"NewArtist" = ifelse(test = Year.y > Year.x, 0, 1)) %>%
filter(Year.y >= Year.x)
left_join(x = TopArtists_ByYear, y = TopArtists_ByYear, by = c("ArtistName")) %>%
mutate("RepeatArtist" = ifelse(test = Year.y > Year.x, 1, 0),
"NewArtist" = ifelse(test = Year.y > Year.x, 0, 1)) %>%
filter(Year.y >= Year.x, ArtistName == "Tori Kelly")
left_join(x = TopArtists_ByYear, y = TopArtists_ByYear, by = c("ArtistName")) %>%
mutate("RepeatArtist" = ifelse(test = Year.y > Year.x, 1, 0),
"NewArtist" = ifelse(test = Year.y > Year.x, 0, 1)) %>%
filter(Year.y >= Year.x, ArtistName == "Lifehouse")
left_join(x = TopArtists_ByYear, y = TopArtists_ByYear, by = c("ArtistName")) %>%
mutate("RepeatArtist" = ifelse(test = Year.y > Year.x, 1, 0),
"NewArtist" = ifelse(test = Year.y > Year.x, 0, 1)) %>%
filter(Year.y >= Year.x, ArtistName == "Daughtry")
left_join(x = TopArtists_ByYear, y = TopArtists_ByYear, by = c("ArtistName")) %>%
mutate("RepeatArtist" = ifelse(test = Year.y > Year.x, 1, 0),
"NewArtist" = ifelse(test = Year.y > Year.x, 0, 1)) %>%
filter(Year.y >= Year.x, ArtistName == "Justin Bieber")
left_join(x = TopArtists_ByYear, y = TopArtists_ByYear, by = c("ArtistName")) %>%
mutate("RepeatArtist" = ifelse(test = Year.y > Year.x, 1, 0),
"NewArtist" = ifelse(test = Year.y > Year.x, 0, 1)) %>%
filter(Year.y >= Year.x, ArtistName == "Gavin James")
left_join(x = TopArtists_ByYear, y = TopArtists_ByYear, by = c("ArtistName")) %>%
mutate("RepeatArtist" = ifelse(test = Year.y > Year.x, 1, 0),
"NewArtist" = ifelse(test = Year.y > Year.x, 0, 1)) %>%
filter(Year.y >= Year.x, ArtistName == "Gavin James")
#Year_Artist =
Year_Artist
runApp('spotify.R')
#Year_Artist =
Year_Artist
#Year_Artist =
Year_Artist %>%
filter(ArtistName == "Nickelback")
TopArtists_ByYear
duplicated(TopArtists_ByYear$ArtistName)
mutate(test = KK = duplicated(TopArtists_ByYear$ArtistName), yes = "Repeat", no = "New)"
TopArtists_ByYear %>%
mutate(test = KK = duplicated(TopArtists_ByYear$ArtistName), yes = "Repeat", no = "New")
mutate(KK = ifelse(test = duplicated(TopArtists_ByYear$ArtistName), yes = "Repeat", no = "New")
TopArtists_ByYear %>%
TopArtists_ByYear %>%
mutate(KK = ifelse(test = duplicated(TopArtists_ByYear$ArtistName), yes = "Repeat", no = "New"))
TopArtists_ByYear
TopArtists_ByYear %>%
mutate(KK = ifelse(test = duplicated(TopArtists_ByYear$ArtistName), yes = "Repeat", no = "New"))
TopArtists_ByYear %>%
ungroup() %>%
mutate(KK = ifelse(test = duplicated(TopArtists_ByYear$ArtistName), yes = "Repeat", no = "New"))
TopArtists_ByYear %>%
ungroup() %>%
mutate(KK = ifelse(test = duplicated(TopArtists_ByYear$ArtistName), yes = "Repeat", no = "New")) %>%
filter(ArtistName == "Nickelback")
TopArtists_ByYear %>%
ungroup() %>%
arrange(Year) %>%
mutate(KK = ifelse(test = duplicated(TopArtists_ByYear$ArtistName), yes = "Repeat", no = "New")) %>%
filter(ArtistName == "Nickelback")
TopArtists_ByYear %>%
ungroup() %>%
arrange(Year(desc)) %>%
mutate(KK = ifelse(test = duplicated(TopArtists_ByYear$ArtistName), yes = "Repeat", no = "New")) %>%
filter(ArtistName == "Nickelback")
TopArtists_ByYear %>%
ungroup() %>%
arrange(desc(Year)) %>%
mutate(KK = ifelse(test = duplicated(TopArtists_ByYear$ArtistName), yes = "Repeat", no = "New")) %>%
filter(ArtistName == "Nickelback")
TopArtists_ByYear %>%
ungroup() %>%
#arrange(desc(Year)) %>%
mutate(KK = ifelse(test = duplicated(TopArtists_ByYear$ArtistName), yes = "Repeat", no = "New")) %>%
filter(ArtistName == "Drake")
TopArtists_ByYear %>%
ungroup() %>%
#arrange(desc(Year)) %>%
mutate(KK = ifelse(test = duplicated(TopArtists_ByYear$ArtistName), yes = "Repeat", no = "New")) %>%
filter(ArtistName == "Lifehouse")
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
?coord_polar
?geom_color
?geom_color()
?geom_col()
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
```{r}
Artists_New_Repeat %>%
arrange(Year, -Song_Count) %>%
filter(Year == input$SelectedYear) %>%
group_by(KK) %>%
summarize(`Song Count` = sum(Song_Count))
Artists_New_Repeat =
TopArtists_ByYear %>%
ungroup() %>%
#arrange(desc(Year)) %>%
mutate(KK = ifelse(test = duplicated(TopArtists_ByYear$ArtistName), yes = "Repeat Artist", no = "New Artist"))# %>%
Artists_New_Repeat %>%
arrange(Year, -Song_Count) %>%
filter(Year == input$SelectedYear) %>%
group_by(KK) %>%
summarize(`Song Count` = sum(Song_Count))
Artists_New_Repeat %>%
arrange(Year, -Song_Count) %>%
filter(Year == 2024) %>%
group_by(KK) %>%
summarize(`Song Count` = sum(Song_Count))
Artists_New_Repeat %>%
arrange(Song_Count) %>%
filter(Year == 2024) %>%
group_by(KK) %>%
summarize(`Song Count` = sum(Song_Count))
Artists_New_Repeat %>%
arrange(Song_Count) %>%
filter(Year == 2024) %>%
group_by(KK) %>%
summarize(`Song Count` = sum(Song_Count)) %>%
arrange(desc(`Song Count`))
runApp('spotify.R')
runApp('spotify.R')
library(shiny); runApp('spotify.R')
library(shiny); runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
library(shiny); runApp('spotify.R')
read_data = read.csv(file = "files/running_data.csv", skip = 0)
library(shiny); runApp('spotify.R')
runApp('spotify.R')
runApp('calculators.R')
runApp('calculators.R')
?numericInput()
runApp('calculators.R')
runApp('calculators.R')
runApp('calculators.R')
runApp('calculators.R')
runApp('calculators.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('calculators.R')
runApp('calculators.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('calculators.R')
runApp('calculators.R')
runApp('calculators.R')
runApp('calculators.R')
runApp('calculators.R')
runApp('spotify.R')
runApp('calculators.R')
runApp('calculators.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('spotify.R')
runApp('calculators.R')
runApp('calculators.R')
runApp('calculators.R')
library(shiny); runApp('calculators.R')
runApp('calculators.R')
runApp('calculators.R')
runApp('calculators.R')
runApp('calculators.R')
runApp('calculators.R')
runApp('calculators.R')
runApp('calculators.R')
runApp('calculators.R')
runApp('calculators.R')
runApp('calculators.R')
runApp('calculators.R')
runApp('calculators.R')
runApp('calculators.R')
runApp('calculators.R')
runApp('calculators.R')
runApp('calculators.R')
runApp('calculators.R')
runApp('calculators.R')
runApp('calculators.R')
runApp('calculators.R')
runApp('calculators.R')
?actionButton()
runApp('calculators.R')
runApp('calculators.R')
?actionButton()
runApp('calculators.R')
runApp('calculators.R')
runApp('calculators.R')
runApp('calculators.R')
runApp('calculators.R')
runApp('calculators.R')
runApp('calculators.R')
runApp('calculators.R')
runApp('calculators.R')
runApp('calculators.R')
?eventReactive()
runApp('calculators.R')
runApp('calculators.R')
runApp('calculators.R')
runApp('calculators.R')
runApp('calculators.R')
runApp('calculators.R')
runApp('calculators.R')
runApp('calculators.R')
runApp('calculators.R')
runApp('yourtruelove.R')
runApp('yourtruelove.R')
runApp('yourtruelove.R')
runApp('yourtruelove.R')
runApp('calculators.R')
runApp('calculators.R')
runApp('calculators.R')
runApp('calculators.R')
runApp('calculators.R')
runApp('calculators.R')
runApp('calculators.R')
runApp('calculators.R')
runApp('calculators.R')
kevin_binom = function(trials, prob, type, successes, ...) {
trials = as.numeric(data.frame(unlist(as.list(match.call())[c("trials", "n")])[1]))
prob = as.numeric(data.frame(unlist(as.list(match.call())[c("prob", "p")])[1]))
successes = as.numeric(data.frame(unlist(as.list(match.call())[c("successes", "k")])[1]))
if (trials < successes) {
return(message("ERROR: Check n or k!"))
}
prob_less = pbinom(q = successes[1] - 1, size = trials, prob = prob)
prob_at_most = pbinom(q = successes[1], size = trials, prob = prob)
prob_equal = pbinom(q = successes[1], size = trials, prob = prob) - pbinom(q = successes[1] - 1, size = trials, prob = prob)
prob_greater = 1 - pbinom(q = successes[1], size = trials, prob = prob)
prob_at_least = 1 - pbinom(q = successes[1] - 1, size = trials, prob = prob)
prob_between = pbinom(q = successes[2], size = trials, prob = prob) - pbinom(q = successes[1] - 1, size = trials, prob = prob)
results = list(trials, successes, prob, prob_less, prob_at_most, prob_equal, prob_at_least, prob_greater, prob_between)
names(results) = c(
"Trials",
"Successes",
"Probability of Each Success",
paste("Less Than ", successes[1], " Successes", sep = ""),
paste("At Most ", successes[1], " Successes", sep = ""),
paste("Equal To ", successes[1], " Successes", sep = ""),
paste("At Least ", successes[1], " Successes", sep = ""),
paste("Greater Than ", successes[1], " Successes", sep = ""),
paste("Between ", successes[1], " and ", successes[2], " Successes", sep = "")
)
return(results)
}
kevin_binom(n = 12, prob = .5, k = 11)
runApp('calculators.R')
