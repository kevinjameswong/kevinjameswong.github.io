return(l)
}
total_time = function(minutes, seconds) {
h = (minutes * 60 + seconds) %>% sum() %>% "%/%"(60) %>% "%/%"(60)
m = (minutes * 60 + seconds) %>% sum() %>% "%/%"(60) %>% "%%"(60) %>% paste(":01 ", today(), sep = "") %>% as.POSIXct(format = "%M:%S %Y-%m-%d") %>% str_sub(start = 15, end = 16)
s = (minutes * 60 + seconds) %>% sum() %>% "%%"(60) %>% paste(":01 ", today(), sep = "") %>% as.POSIXct(format = "%M:%S %Y-%m-%d") %>% str_sub(start = 15, end = 16)
t = paste(h, ":", m, ":", s, sep = "")
return(t)
}
miles_per_run = function(distance) {
t = (distance %>% sum() / (distance > 0) %>% sum()) %>% "*"(100) %>% floor() %>% "/"(100)
return(t)
}
miles_per_day = function(distance) {
t = (distance %>% sum() / (n())) %>% "*"(100) %>% floor() %>% "/"(100)
return(t)
}
miles_per_hour = function(distance, minutes, seconds) {
t = (distance %>% sum() * 60 * 60 / (minutes * 60 + seconds)) %>% "*"(1000) %>% floor() %>% "/"(1000)
return(t)
}
total_row = c("Total",
sum(running$RunDistance > 0),
sum(running$RunDistance),
"ok",
"pace")
groupby_year = running %>%
group_by(Year) %>%
summarise(Total_Runs = sum(RunDistance > 0),
Total_Days_of_Running = length(unique(RunCalories)),
Days_Off = sum(RunDistance == 0),
Distance = sum(RunDistance),
Time = total_time(
minutes = RunMinutes %>% sum(),
seconds = RunSeconds %>% sum()
),
Pace = pace_calculator(
distance = RunDistance %>% sum(),
minutes = RunMinutes %>% sum(),
seconds = RunSeconds %>% sum()
),
Miles_Per_Run = miles_per_run(
distance = RunDistance
),
Miles_Per_Day = miles_per_day(
distance = RunDistance %>% sum()
),
Yearly_Mileage_Rate = yearly_mileage_pace(
distance = RunDistance %>% sum()
),
MPH = miles_per_hour(
distance = RunDistance %>% sum(),
minutes = RunMinutes %>% sum(),
seconds = RunSeconds %>% sum()
),
Calories = sum(RunCalories)
)
library(lubridate)
library(knitr)
library(kableExtra)
library(tidyverse)
library(stringr)
library(ggplot2)
Start_Date = as.Date("1/28/2018", format = "%m/%d/%Y")
groupby_year = running %>%
group_by(Year) %>%
summarise(Total_Runs = sum(RunDistance > 0),
Total_Days_of_Running = length(unique(RunCalories)),
Days_Off = sum(RunDistance == 0),
Distance = sum(RunDistance),
Time = total_time(
minutes = RunMinutes %>% sum(),
seconds = RunSeconds %>% sum()
),
Pace = pace_calculator(
distance = RunDistance %>% sum(),
minutes = RunMinutes %>% sum(),
seconds = RunSeconds %>% sum()
),
Miles_Per_Run = miles_per_run(
distance = RunDistance
),
Miles_Per_Day = miles_per_day(
distance = RunDistance %>% sum()
),
Yearly_Mileage_Rate = yearly_mileage_pace(
distance = RunDistance %>% sum()
),
MPH = miles_per_hour(
distance = RunDistance %>% sum(),
minutes = RunMinutes %>% sum(),
seconds = RunSeconds %>% sum()
),
Calories = sum(RunCalories)
)
names(groupby_year) = c("Year", "Total Runs", "Total Days of Running", "Days Off", "Miles", "Time", "Pace", "Miles Per Run", "Miles Per Day", "Yearly Mile Rate", "MPH", "Total Calories Burned")
kable(x = groupby_year, format = "html", align = "lrrrrrrrrrrrrrr") %>%
kable_styling(bootstrap_options = c("hover", "responsive")) %>%
scroll_box(width = "100%", height = "100%")
running$unique_run_count = ifelse(running$RunDistance = max(running$RunDistance), 1, 0)
running$unique_run_count = ifelse(running$RunDistance == max(running$RunDistance, by(running$Date)), 1, 0)
max(running$RunDistance, by(running$Date)
max(running$RunDistance, by(running$Date))
max(running$RunDistance, by(running$Date))
running$unique_run_count = ifelse(running$RunDistance == max(running$RunDistance), by(running$Date), 1, 0)
max(running$RunDistance), by(running$Date)
running %>% group_by(Date) %>% summarise(max = max(RunDistance))
running$unique_run_count = ifelse(running$RunDistance == running %>% group_by(Date) %>% summarise(max = max(RunDistance)), 1, 0)
running %>% group_by(Date) %>% summarise(max = max(RunDistance)) %>% ungroup()
running %>% group_by(Date) %>% summarise(max = max(RunDistance))
running %>% group_by(Date) %>% mutate(3)
View(running)
running %>% group_by(Date) %>% mutate(3)
running %>% group_by(Date) %>% summarise(max = max(RunDistance)) %>% mutate()
running %>% group_by(Date) %>% mutate(summarise(max = max(RunDistance)))
running %>% group_by(Date) %>% summarise(max = max(RunDistance))
running %>% mutate %>% (running %>% group_by(Date) %>% summarise(max = max(RunDistance)))
running %>% mutate %>% (running %>% group_by(Date) %>% summarise(max = max(RunDistance)))
running %>% mutate()
running %>% mutate(newVar = 3)
running %>% group_by(Date) %>% mutate(max(RunDistance))
running %>% group_by(Date) %>% max(RunDistance) %>% mutate()
running %>% group_by(Date) %>% mutate(max(RunDistance))
running %>% group_by(Date) %>% mutate() %>% max(RunDistance)
running %>% group_by(Date) %>% mutate()
running$unique_run_count = ifelse(running$RunDistance == running %>% group_by(Date) %>% mutate(max(RunDistance)), 1, 0)
running %>% group_by(Date) %>% mutate(max(RunDistance))
running %>% group_by(Date) %>% mutate(max(RunDistance))
running %>% group_by(Date) %>% mutate(max(RunDistance))
library(lubridate)
library(knitr)
library(kableExtra)
library(tidyverse)
library(stringr)
library(ggplot2)
Start_Date = as.Date("1/28/2018", format = "%m/%d/%Y")
Update_Date = as.Date("1/1/2020", format = "%m/%d/%Y")
# read_data = read.csv(file = "~/Documents/Kevin Stuff/Not Work/website/Website Files/more website files/Running_10_12_2019.csv", skip = 1)
read_data = read.csv(file = "~/Documents/Kevin Stuff/Not Work/website/Website Files/more website files/Book4.csv", skip = 1)
running = read_data %>%
select(Location,
Day,
Month,
Day.1,
Date,
Run.Calories,
Run.Distance,
Run.Minutes,
Run.Seconds,
Walk.Calories,
Walk.Distance,
Walk.Minutes,
Walk.Seconds,
Start.Time) %>%
# slice(1:(Update_Date - Start_Date - 1) %>% as.integer())
slice(1:713 %>% as.integer())
names(running) = c("Location", "Weekday_Read", "Month_Number_Read", "Day Number", "Date", "Run Calories", "Run Distance", "Run Minutes", "Run Seconds", "Walk Calories", "Walk Distance", "Walk Minutes", "Walk Seconds", "StartTime")
running$Date         = running$Date            %>% as.Date(format = "%m/%d/%y")
running$DayNumber    = running$`Day Number`    %>% as.character() %>% as.integer()
running$RunCalories  = running$`Run Calories`  %>% as.character() %>% as.integer()
running$RunDistance  = running$`Run Distance`  %>% as.character() %>% as.numeric()
running$RunMinutes   = running$`Run Minutes`   %>% as.character() %>% as.integer()
running$RunSeconds   = running$`Run Seconds`   %>% as.character() %>% as.integer()
running$WalkCalories = running$`Walk Calories` %>% as.character() %>% as.integer()
running$WalkDistance = running$`Walk Distance` %>% as.character() %>% as.numeric()
running$WalkMinutes  = running$`Walk Minutes`  %>% as.character() %>% as.integer()
running$WalkSeconds  = running$`Walk Seconds`  %>% as.character() %>% as.integer()
running = running %>%
select(Location,
Weekday_Read,
Month_Number_Read,
Date,
StartTime,
DayNumber,
RunCalories,
RunDistance,
RunMinutes,
RunSeconds,
WalkCalories,
WalkDistance,
WalkMinutes,
WalkSeconds)
running$Month = factor(running$Month_Number_Read)
levels(running$Month) = c(month.name, "Total")
running$Year = running$Date %>%
format(format = "%Y") %>%
factor(levels = running$Date %>%
format(format = "%Y") %>%
unique() %>%
sort()
)
running$Weekday = factor(x = running$Weekday_Read,
levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday", "Total"))
running$YearMonth = paste(running$Month, " ", running$Year, sep = "") %>% factor(levels = paste(month.name, rep(running$Year %>% levels(), each = length(month.name)))[1:(Update_Date %>% format(format = "%m") %>% as.integer() %>% "+"(1) - Start_Date %>% format(format = "%m") %>% as.integer() + (Update_Date %>% format(format = "%y") %>% as.integer() - Start_Date %>% format(format = "%y") %>% as.integer()) %>% "*"(12))])
running = select(running, - Weekday_Read, - Month_Number_Read)
running$Treadmill = ifelse(running$Location == "Arc" | running$Location == "Ike" | running$Location == "CRCE" | running$Location == "Lifetime Fitness" | running$Location == "Lifetime", 1, 0)
running$CumRunDistance = cumsum(running$RunDistance)
running$run_Count = ifelse(running$RunDistance > 0, 1, 0)
running$unique_run_count = ifelse(running$RunDistance == running %>% group_by(Date) %>% mutate(max(RunDistance)), 1, 0)
View(running)
running$yeet = running %>% group_by(Date) %>% mutate(max(RunDistance)
running$yeet = running %>% group_by(Date) %>% mutate(max(RunDistance))
running$yeet = running %>% group_by(Date) %>% mutate(max(RunDistance))
View(running)
running %>% group_by(Date) %>% mutate(max(RunDistance))
library(lubridate)
library(knitr)
library(kableExtra)
library(tidyverse)
library(stringr)
library(ggplot2)
Start_Date = as.Date("1/28/2018", format = "%m/%d/%Y")
Update_Date = as.Date("1/1/2020", format = "%m/%d/%Y")
# read_data = read.csv(file = "~/Documents/Kevin Stuff/Not Work/website/Website Files/more website files/Running_10_12_2019.csv", skip = 1)
read_data = read.csv(file = "~/Documents/Kevin Stuff/Not Work/website/Website Files/more website files/Book4.csv", skip = 1)
running = read_data %>%
select(Location,
Day,
Month,
Day.1,
Date,
Run.Calories,
Run.Distance,
Run.Minutes,
Run.Seconds,
Walk.Calories,
Walk.Distance,
Walk.Minutes,
Walk.Seconds,
Start.Time) %>%
# slice(1:(Update_Date - Start_Date - 1) %>% as.integer())
slice(1:713 %>% as.integer())
names(running) = c("Location", "Weekday_Read", "Month_Number_Read", "Day Number", "Date", "Run Calories", "Run Distance", "Run Minutes", "Run Seconds", "Walk Calories", "Walk Distance", "Walk Minutes", "Walk Seconds", "StartTime")
running$Date         = running$Date            %>% as.Date(format = "%m/%d/%y")
running$DayNumber    = running$`Day Number`    %>% as.character() %>% as.integer()
running$RunCalories  = running$`Run Calories`  %>% as.character() %>% as.integer()
running$RunDistance  = running$`Run Distance`  %>% as.character() %>% as.numeric()
running$RunMinutes   = running$`Run Minutes`   %>% as.character() %>% as.integer()
running$RunSeconds   = running$`Run Seconds`   %>% as.character() %>% as.integer()
running$WalkCalories = running$`Walk Calories` %>% as.character() %>% as.integer()
running$WalkDistance = running$`Walk Distance` %>% as.character() %>% as.numeric()
running$WalkMinutes  = running$`Walk Minutes`  %>% as.character() %>% as.integer()
running$WalkSeconds  = running$`Walk Seconds`  %>% as.character() %>% as.integer()
running = running %>%
select(Location,
Weekday_Read,
Month_Number_Read,
Date,
StartTime,
DayNumber,
RunCalories,
RunDistance,
RunMinutes,
RunSeconds,
WalkCalories,
WalkDistance,
WalkMinutes,
WalkSeconds)
running$Month = factor(running$Month_Number_Read)
levels(running$Month) = c(month.name, "Total")
running$Year = running$Date %>%
format(format = "%Y") %>%
factor(levels = running$Date %>%
format(format = "%Y") %>%
unique() %>%
sort()
)
running$Weekday = factor(x = running$Weekday_Read,
levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday", "Total"))
running$YearMonth = paste(running$Month, " ", running$Year, sep = "") %>% factor(levels = paste(month.name, rep(running$Year %>% levels(), each = length(month.name)))[1:(Update_Date %>% format(format = "%m") %>% as.integer() %>% "+"(1) - Start_Date %>% format(format = "%m") %>% as.integer() + (Update_Date %>% format(format = "%y") %>% as.integer() - Start_Date %>% format(format = "%y") %>% as.integer()) %>% "*"(12))])
running = select(running, - Weekday_Read, - Month_Number_Read)
running$Treadmill = ifelse(running$Location == "Arc" | running$Location == "Ike" | running$Location == "CRCE" | running$Location == "Lifetime Fitness" | running$Location == "Lifetime", 1, 0)
running$CumRunDistance = cumsum(running$RunDistance)
running$run_Count = ifelse(running$RunDistance > 0, 1, 0)
# running$unique_run_count = ifelse(running$RunDistance == running %>% group_by(Date) %>% mutate(max(RunDistance)), 1, 0)
running %>% group_by(Date) %>% mutate(max(RunDistance))
running %>% group_by(Date) %>% mutate(yeet = ifelse(running$RunDistance == max(RunDistance), 1, 0))
running %>% group_by(Date) %>% mutate(ifelse(running$RunDistance == max(RunDistance), 1, 0))
running %>% group_by(Date) %>% mutate(max(RunDistance))
running$unique_run_count = ifelse(running$RunDistance == running %>% group_by(Date) %>% mutate(max(RunDistance)), 1, 0))
View(running)
# 2 - 1 - 2020: There has to be a better way to do this but it's whatever. this will do
running = running %>% group_by(Date) %>% mutate(y = max(RunDistance))
running$unique_run_count = ifelse(running$RunDistance == running$y, 1, 0)
View(running)
ggplot(data = groupby_year, aes(x = Year, y = Miles)) +
geom_bar(stat = "identity", fill = "darkblue") +
geom_text(aes(label = groupby_year$Miles %>% round(digits = 2) %>% format(nsmall = 2)), vjust = 1.6, color = "white", size = 5) +
xlab(label = "Year") +
ylab(label = "Miles") +
ggtitle(label = "Miles by Year") +
theme(plot.title = element_text(hjust = 0.5))
library(lubridate)
library(knitr)
library(kableExtra)
library(tidyverse)
library(stringr)
library(ggplot2)
Start_Date = as.Date("1/28/2018", format = "%m/%d/%Y")
Update_Date = as.Date("1/1/2020", format = "%m/%d/%Y")
# read_data = read.csv(file = "~/Documents/Kevin Stuff/Not Work/website/Website Files/more website files/Running_10_12_2019.csv", skip = 1)
read_data = read.csv(file = "~/Documents/Kevin Stuff/Not Work/website/Website Files/more website files/Book4.csv", skip = 1)
running = read_data %>%
select(Location,
Day,
Month,
Day.1,
Date,
Run.Calories,
Run.Distance,
Run.Minutes,
Run.Seconds,
Walk.Calories,
Walk.Distance,
Walk.Minutes,
Walk.Seconds,
Start.Time) %>%
# slice(1:(Update_Date - Start_Date - 1) %>% as.integer())
slice(1:713 %>% as.integer())
names(running) = c("Location", "Weekday_Read", "Month_Number_Read", "Day Number", "Date", "Run Calories", "Run Distance", "Run Minutes", "Run Seconds", "Walk Calories", "Walk Distance", "Walk Minutes", "Walk Seconds", "StartTime")
running$Date         = running$Date            %>% as.Date(format = "%m/%d/%y")
running$DayNumber    = running$`Day Number`    %>% as.character() %>% as.integer()
running$RunCalories  = running$`Run Calories`  %>% as.character() %>% as.integer()
running$RunDistance  = running$`Run Distance`  %>% as.character() %>% as.numeric()
running$RunMinutes   = running$`Run Minutes`   %>% as.character() %>% as.integer()
running$RunSeconds   = running$`Run Seconds`   %>% as.character() %>% as.integer()
running$WalkCalories = running$`Walk Calories` %>% as.character() %>% as.integer()
running$WalkDistance = running$`Walk Distance` %>% as.character() %>% as.numeric()
running$WalkMinutes  = running$`Walk Minutes`  %>% as.character() %>% as.integer()
running$WalkSeconds  = running$`Walk Seconds`  %>% as.character() %>% as.integer()
running = running %>%
select(Location,
Weekday_Read,
Month_Number_Read,
Date,
StartTime,
DayNumber,
RunCalories,
RunDistance,
RunMinutes,
RunSeconds,
WalkCalories,
WalkDistance,
WalkMinutes,
WalkSeconds)
running$Month = factor(running$Month_Number_Read)
levels(running$Month) = c(month.name, "Total")
running$Year = running$Date %>%
format(format = "%Y") %>%
factor(levels = running$Date %>%
format(format = "%Y") %>%
unique() %>%
sort()
)
running$Weekday = factor(x = running$Weekday_Read,
levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday", "Total"))
running$YearMonth = paste(running$Month, " ", running$Year, sep = "") %>% factor(levels = paste(month.name, rep(running$Year %>% levels(), each = length(month.name)))[1:(Update_Date %>% format(format = "%m") %>% as.integer() %>% "+"(1) - Start_Date %>% format(format = "%m") %>% as.integer() + (Update_Date %>% format(format = "%y") %>% as.integer() - Start_Date %>% format(format = "%y") %>% as.integer()) %>% "*"(12))])
running = select(running, - Weekday_Read, - Month_Number_Read)
running$Treadmill = ifelse(running$Location == "Arc" | running$Location == "Ike" | running$Location == "CRCE" | running$Location == "Lifetime Fitness" | running$Location == "Lifetime", 1, 0)
running$CumRunDistance = cumsum(running$RunDistance)
running$run_Count = ifelse(running$RunDistance > 0, 1, 0)
# running$unique_run_count = ifelse(running$RunDistance == running %>% group_by(Date) %>% mutate(max(RunDistance)), 1, 0)
# 2 - 1 - 2020: There has to be a better way to do this but it's whatever. this will do
running = running %>% group_by(Date) %>% mutate(y = max(RunDistance))
running$unique_run_count = ifelse(running$RunDistance == running$y & running$y != 0, 1, 0)
pace_calculator = function(distance, minutes, seconds) {
m = ((minutes * 60 + seconds) / distance) %>% ceiling() %>% "%/%"(60)
s = ((minutes * 60 + seconds) / distance) %>% ceiling() %>% "%%"(60)
pace = paste(m %>% as.numeric() %>% as.character(),
":",
s %>% paste(":01 ", today(), sep = "") %>% as.POSIXct(format = "%M:%S %Y-%m-%d") %>% str_sub(start = 15, end = 16),
sep = "")
return(pace)
}
yearly_mileage_pace = function(distance) {
l = (distance / n()) %>% "*"(365) %>% "*"(100) %>% floor() %>% "/"(100)
return(l)
}
total_time = function(minutes, seconds) {
h = (minutes * 60 + seconds) %>% sum() %>% "%/%"(60) %>% "%/%"(60)
m = (minutes * 60 + seconds) %>% sum() %>% "%/%"(60) %>% "%%"(60) %>% paste(":01 ", today(), sep = "") %>% as.POSIXct(format = "%M:%S %Y-%m-%d") %>% str_sub(start = 15, end = 16)
s = (minutes * 60 + seconds) %>% sum() %>% "%%"(60) %>% paste(":01 ", today(), sep = "") %>% as.POSIXct(format = "%M:%S %Y-%m-%d") %>% str_sub(start = 15, end = 16)
t = paste(h, ":", m, ":", s, sep = "")
return(t)
}
miles_per_run = function(distance) {
t = (distance %>% sum() / (distance > 0) %>% sum()) %>% "*"(100) %>% floor() %>% "/"(100)
return(t)
}
miles_per_day = function(distance) {
t = (distance %>% sum() / (n())) %>% "*"(100) %>% floor() %>% "/"(100)
return(t)
}
miles_per_hour = function(distance, minutes, seconds) {
t = (distance %>% sum() * 60 * 60 / (minutes * 60 + seconds)) %>% "*"(1000) %>% floor() %>% "/"(1000)
return(t)
}
total_row = c("Total",
sum(running$RunDistance > 0),
sum(running$RunDistance),
"ok",
"pace")
groupby_year = running %>%
group_by(Year) %>%
summarise(Total_Runs = sum(RunDistance > 0),
Total_Days_Runs = sum(unique_run_count),
Distance = sum(RunDistance),
Time = total_time(
minutes = RunMinutes %>% sum(),
seconds = RunSeconds %>% sum()
),
Pace = pace_calculator(
distance = RunDistance %>% sum(),
minutes = RunMinutes %>% sum(),
seconds = RunSeconds %>% sum()
)
)
# groupby_year = rbind(groupby_year, total_row)
names(groupby_year) = c("Year", "Total Runs", "Total Run Days", "Miles", "Time", "Pace")
groupby_year = groupby_year[order(groupby_year$Year), ]
kable(groupby_year, format = "html", align = "lrrrr") %>%
kable_styling(bootstrap_options = c("hover", "responsive"))# %>%
#row_spec(row = nrow(groupby_year), bold = TRUE, font_size = 21)
ggplot(data = groupby_year, aes(x = Year, y = Miles)) +
geom_bar(stat = "identity", fill = "darkblue") +
geom_text(aes(label = groupby_year$Miles %>% round(digits = 2) %>% format(nsmall = 2)), vjust = 1.6, color = "white", size = 5) +
xlab(label = "Year") +
ylab(label = "Miles") +
ggtitle(label = "Miles by Year") +
theme(plot.title = element_text(hjust = 0.5))
cool = c("help", "help")
cool
help = c(2, 2)
p = c(2, 3)
data = data.frame(
help = help,
p = p
)
View(data)
library(dplyr)
install.packages("ggplot2")
librray("googlesheets4")
library("googlesheets4")
library(lubridate)
install.packages("lubridate")
library(lubridate)
install.package("lubridate")
library(knitr)
library(kableExtra)
library(tidyverse)
library(stringr)
library(ggplot2)
library(dplyr)
library(knitr)
library(kableExtra)
install.packages("kableExtra")
install.packages("scales")
library(kableExtra)
install.packages("kableExtra")
library(kableExtra)
update_packages("rlang")
remotes::update_packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("kableExtra")
install.packages("rlang")
install.packages("rlang")
library(knitr)
library(kableExtra)
install.packages("kableExtra")
install.packages("stringi")
library(kableExtra)
library(tidyverse)
install.packages("tidyverse")
install.packages("stringi")
install.packages("stringi")
install.packages("tidyverse")
library(knitr)
library(kableExtra)
library("kableExtra")
install.packages("kableExtra")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
library(kableExtra)
install.packages("kableExtra")
library(knitr)
library(knitr)
library(kableExtra)
library(rlang)
library(tidyverse)
library(tidyverse)
library(stringr)
library(stringr)
library(ggplot2)
library(dplyr)
library(kableExtra)
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
library(knitr)
library(kableExtra)
library(rlang)
library(tidyverse)
library(tidyverse)
library(stringr)
library(ggplot2)
library(dplyr)
