Pace = ifelse(test = (ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60 <= 9,
yes = paste("0", (ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60, sep = ""),
no = paste((ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60)))
names(groupby_month) = c("Month", "Pace")
kable(groupby_month, format = "html") %>%
kable_styling(bootstrap_options = c("hover", "responsive"))
groupby_month = running %>%
group_by(Month) %>%
summarise(
Minutes = paste((ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %/% 60, ifelse(test = (ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60 <= 9,
yes = paste("0", (ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60, sep = ""),
no = paste((ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60)), sep = ":")
)
names(groupby_month) = c("Month", "Pace")
kable(groupby_month, format = "html") %>%
kable_styling(bootstrap_options = c("hover", "responsive"))
groupby_month = running %>%
group_by(Month) %>%
summarise(
Pace = paste((ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %/% 60, ifelse(test = (ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60 <= 9,
yes = paste("0", (ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60, sep = ""),
no = paste((ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60)), sep = ":")
)
names(groupby_month) = c("Month", "Pace")
kable(groupby_month, format = "html") %>%
kable_styling(bootstrap_options = c("hover", "responsive"))
groupby_weekday = running %>%
group_by(Weekday) %>%
summarise(Total_Runs = sum(RunDistance > 0),
Distance = sum(RunDistance),
Time = paste(ifelse(test = (sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60 <= 9,
yes = paste("0", (sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60, sep = ""),
no = as.character((sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60)),
ifelse(test = (sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60 <= 9,
yes = paste("0", (sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60, sep = ""),
no = as.character((sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60)),
ifelse(test = sum(RunSeconds) %% 60 <= 9,
yes = paste("0", sum(RunSeconds) %% 60, sep = ""),
no = as.character(sum(RunSeconds) %% 60)), sep = ":"),
Pace = paste((ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %/% 60, ifelse(test = (ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60 <= 9,
yes = paste("0", (ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60, sep = ""),
no = paste((ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60)), sep = ":"))
# Miles_Per_Run = floor(sum(RunDistance) * 100 / sum(RunDistance > 0)) / 100,
#MPH = floor(sum(RunDistance) / (((((sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60) * 60 * 60 + ((sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60) * 60 + sum(RunSeconds) %% 60)) / (60 * 60)) * 1000) / 1000,
#Calories = sum(RunCalories)
#)
names(groupby_weekday) = c("Weekday", "Total Runs", "Miles", "Time", "Pace")#, "MPH", "Calories")
# names(groupby_weekday) = c("Weekday", "Total Runs", "Distance", "Time", "Pace", "Miles Per Run", "MPH", "Calories")
kable(groupby_weekday, format = "html") %>%
kable_styling(bootstrap_options = c("hover", "responsive"))
groupby_yearmonth = running %>%
group_by(Year, Month) %>%
summarise(Total_Runs = sum(RunDistance > 0),
Distance = sum(RunDistance),
Time = paste(ifelse(test = (sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60 <= 9,
yes = paste("0", (sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60, sep = ""),
no = as.character((sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60)),
ifelse(test = (sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60 <= 9,
yes = paste("0", (sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60, sep = ""),
no = as.character((sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60)),
ifelse(test = sum(RunSeconds) %% 60 <= 9,
yes = paste("0", sum(RunSeconds) %% 60, sep = ""),
no = as.character(sum(RunSeconds) %% 60)), sep = ":"),
Pace = paste((ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %/% 60, ifelse(test = (ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60 <= 9,
yes = paste("0", (ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60, sep = ""),
no = paste((ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60)), sep = ":"))
# Miles_Per_Run = floor(sum(RunDistance) * 100 / sum(RunDistance > 0)) / 100,
#MPH = floor(sum(RunDistance) / (((((sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60) * 60 * 60 + ((sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60) * 60 + sum(RunSeconds) %% 60)) / (60 * 60)) * 1000) / 1000,
#Calories = sum(RunCalories)
#)
groupby_yearmonth$yearmonth = paste(groupby_yearmonth$Month, groupby_yearmonth$Year, sep = " ")
groupby_yearmonth = select(as.data.frame(select(groupby_yearmonth, - Month)), - Year)
groupby_yearmonth = groupby_yearmonth[, c(5, 1:4)]
names(groupby_yearmonth) = c("Month", "Total Runs", "Miles", "Time", "Pace")#, "MPH", "Calories")
# names(groupby_weekday) = c("Weekday", "Total Runs", "Distance", "Time", "Pace", "Miles Per Run", "MPH", "Calories")
kable(groupby_yearmonth, format = "html") %>%
kable_styling(bootstrap_options = c("hover", "responsive"))
groupby_year = running %>%
group_by(Year) %>%
summarise(Total_Runs = sum(RunDistance > 0),
Distance = sum(RunDistance),
Time = paste(ifelse(test = (sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60 <= 9,
yes = paste("0", (sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60, sep = ""),
no = as.character((sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60)),
ifelse(test = (sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60 <= 9,
yes = paste("0", (sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60, sep = ""),
no = as.character((sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60)),
ifelse(test = sum(RunSeconds) %% 60 <= 9,
yes = paste("0", sum(RunSeconds) %% 60, sep = ""),
no = as.character(sum(RunSeconds) %% 60)), sep = ":"),
Pace = paste((ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %/% 60, ifelse(test = (ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60 <= 9,
yes = paste("0", (ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60, sep = ""),
no = paste((ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60)), sep = ":")
# Miles_Per_Run = floor(sum(RunDistance) * 100 / sum(RunDistance > 0)) / 100,
#MPH = floor(sum(RunDistance) / (((((sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60) * 60 * 60 + ((sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60) * 60 + sum(RunSeconds) %% 60)) / (60 * 60)) * 1000) / 1000,
#Calories = sum(RunCalories)
#)
names(groupby_year) = c("Year", "Total Runs", "Miles", "Time", "Pace")#, "MPH", "Calories")
groupby_year = running %>%
group_by(Year) %>%
summarise(Total_Runs = sum(RunDistance > 0),
Distance = sum(RunDistance),
Time = paste(ifelse(test = (sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60 <= 9,
yes = paste("0", (sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60, sep = ""),
no = as.character((sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60)),
ifelse(test = (sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60 <= 9,
yes = paste("0", (sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60, sep = ""),
no = as.character((sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60)),
ifelse(test = sum(RunSeconds) %% 60 <= 9,
yes = paste("0", sum(RunSeconds) %% 60, sep = ""),
no = as.character(sum(RunSeconds) %% 60)), sep = ":"),
Pace = paste((ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %/% 60, ifelse(test = (ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60 <= 9,
yes = paste("0", (ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60, sep = ""),
no = paste((ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60)), sep = ":"))
# Miles_Per_Run = floor(sum(RunDistance) * 100 / sum(RunDistance > 0)) / 100,
#MPH = floor(sum(RunDistance) / (((((sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60) * 60 * 60 + ((sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60) * 60 + sum(RunSeconds) %% 60)) / (60 * 60)) * 1000) / 1000,
#Calories = sum(RunCalories)
#)
names(groupby_year) = c("Year", "Total Runs", "Miles", "Time", "Pace")#, "MPH", "Calories")
# names(groupby_weekday) = c("Weekday", "Total Runs", "Distance", "Time", "Pace", "Miles Per Run", "MPH", "Calories")
kable(groupby_year, format = "html") %>%
kable_styling(bootstrap_options = c("hover", "responsive"))
library(knitr)
library(kableExtra)
library(dplyr)
library(stringr)
Start_Date = as.Date("1/28/2018", format = "%m/%d/%Y")
Update_Date = as.Date("3/7/2019", format = "%m/%d/%Y")
read_data = read.csv("Running_3_07_19.csv", skip = 1)
read_data = read_data[c(1:(Update_Date - Start_Date)-1), ]
running = read_data[, c(1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 18, 19, 25)]
names(running) = c("Location", "Weekday_Read", "Month_Number_Read", "Day Number", "Date", "Run Calories", "Run Distance", "Run Minutes", "Run Seconds", "Walk Calories", "Walk Distance", "Walk Minutes", "Walk Seconds", "StartTime")
running$DayNumber    = running$`Day Number`    %>% as.character() %>% as.integer()
running$RunCalories  = running$`Run Calories`  %>% as.character() %>% as.integer()
running$RunDistance  = running$`Run Distance`  %>% as.character() %>% as.numeric()
running$RunMinutes   = running$`Run Minutes`   %>% as.character() %>% as.integer()
running$RunSeconds   = running$`Run Seconds`   %>% as.character() %>% as.integer()
running$WalkCalories = running$`Walk Calories` %>% as.character() %>% as.integer()
running$WalkDistance = running$`Walk Distance` %>% as.character() %>% as.numeric()
running$WalkMinutes  = running$`Walk Minutes`  %>% as.character() %>% as.integer()
running$WalkSeconds  = running$`Walk Seconds`  %>% as.character() %>% as.integer()
running = running[ , c(1, 2, 3, 5, 14:23)]
running$Month = factor(running$Month_Number_Read)
levels(running$Month) = c("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December")
running$Year = as.factor(paste("20", (str_sub(running$Date, start = 7, end = 8)), sep = ""))
running$Weekday = factor(x = running$Weekday_Read,
levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))
running = select(running, - Weekday_Read, - Month_Number_Read)
groupby_year = running %>%
group_by(Year) %>%
summarise(Total_Runs = sum(RunDistance > 0),
Distance = sum(RunDistance),
Time = paste(ifelse(test = (sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60 <= 9,
yes = paste("0", (sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60, sep = ""),
no = as.character((sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60)),
ifelse(test = (sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60 <= 9,
yes = paste("0", (sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60, sep = ""),
no = as.character((sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60)),
ifelse(test = sum(RunSeconds) %% 60 <= 9,
yes = paste("0", sum(RunSeconds) %% 60, sep = ""),
no = as.character(sum(RunSeconds) %% 60)), sep = ":"),
Pace = paste((ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %/% 60, ifelse(test = (ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60 <= 9,
yes = paste("0", (ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60, sep = ""),
no = paste((ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60)), sep = ":"))
# Miles_Per_Run = floor(sum(RunDistance) * 100 / sum(RunDistance > 0)) / 100,
#MPH = floor(sum(RunDistance) / (((((sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60) * 60 * 60 + ((sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60) * 60 + sum(RunSeconds) %% 60)) / (60 * 60)) * 1000) / 1000,
#Calories = sum(RunCalories)
#)
names(groupby_year) = c("Year", "Total Runs", "Miles", "Time", "Pace")#, "MPH", "Calories")
# names(groupby_weekday) = c("Weekday", "Total Runs", "Distance", "Time", "Pace", "Miles Per Run", "MPH", "Calories")
kable(groupby_year, format = "html") %>%
kable_styling(bootstrap_options = c("hover", "responsive"))
groupby_yearmonth = running %>%
group_by(Year, Month) %>%
summarise(Total_Runs = sum(RunDistance > 0),
Distance = sum(RunDistance),
Time = paste(ifelse(test = (sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60 <= 9,
yes = paste("0", (sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60, sep = ""),
no = as.character((sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60)),
ifelse(test = (sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60 <= 9,
yes = paste("0", (sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60, sep = ""),
no = as.character((sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60)),
ifelse(test = sum(RunSeconds) %% 60 <= 9,
yes = paste("0", sum(RunSeconds) %% 60, sep = ""),
no = as.character(sum(RunSeconds) %% 60)), sep = ":"),
Pace = paste((ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %/% 60, ifelse(test = (ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60 <= 9,
yes = paste("0", (ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60, sep = ""),
no = paste((ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60)), sep = ":"))
# Miles_Per_Run = floor(sum(RunDistance) * 100 / sum(RunDistance > 0)) / 100,
#MPH = floor(sum(RunDistance) / (((((sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60) * 60 * 60 + ((sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60) * 60 + sum(RunSeconds) %% 60)) / (60 * 60)) * 1000) / 1000,
#Calories = sum(RunCalories)
#)
groupby_yearmonth$yearmonth = paste(groupby_yearmonth$Month, groupby_yearmonth$Year, sep = " ")
groupby_yearmonth = select(as.data.frame(select(groupby_yearmonth, - Month)), - Year)
groupby_yearmonth = groupby_yearmonth[, c(5, 1:4)]
names(groupby_yearmonth) = c("Month", "Total Runs", "Miles", "Time", "Pace")#, "MPH", "Calories")
# names(groupby_weekday) = c("Weekday", "Total Runs", "Distance", "Time", "Pace", "Miles Per Run", "MPH", "Calories")
kable(groupby_yearmonth, format = "html") %>%
kable_styling(bootstrap_options = c("hover", "responsive"))
groupby_weekday = running %>%
group_by(Weekday) %>%
summarise(Total_Runs = sum(RunDistance > 0),
Distance = sum(RunDistance),
Time = paste(ifelse(test = (sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60 <= 9,
yes = paste("0", (sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60, sep = ""),
no = as.character((sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60)),
ifelse(test = (sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60 <= 9,
yes = paste("0", (sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60, sep = ""),
no = as.character((sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60)),
ifelse(test = sum(RunSeconds) %% 60 <= 9,
yes = paste("0", sum(RunSeconds) %% 60, sep = ""),
no = as.character(sum(RunSeconds) %% 60)), sep = ":"),
Pace = paste((ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %/% 60, ifelse(test = (ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60 <= 9,
yes = paste("0", (ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60, sep = ""),
no = paste((ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60)), sep = ":"))
# Miles_Per_Run = floor(sum(RunDistance) * 100 / sum(RunDistance > 0)) / 100,
#MPH = floor(sum(RunDistance) / (((((sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60) * 60 * 60 + ((sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60) * 60 + sum(RunSeconds) %% 60)) / (60 * 60)) * 1000) / 1000,
#Calories = sum(RunCalories)
#)
names(groupby_weekday) = c("Weekday", "Total Runs", "Miles", "Time", "Pace")#, "MPH", "Calories")
# names(groupby_weekday) = c("Weekday", "Total Runs", "Distance", "Time", "Pace", "Miles Per Run", "MPH", "Calories")
kable(groupby_weekday, format = "html") %>%
kable_styling(bootstrap_options = c("hover", "responsive"))
groupby_month = running %>%
group_by(Month) %>%
summarise(
Pace = paste(((((sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60) * 60 * 60 + ((sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60) * 60 + sum(RunSeconds) %% 60) / sum(RunDistance)) %/% 60,
ifelse(test = (ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60) <= 9,
yes = paste("0", (ceiling((sum(RunMinutes) * 60 + sum(RunSeconds)) / sum(RunDistance))) %% 60), sep = ""),
no = as.character((ceiling(((((sum(RunMinutes) + sum(RunSeconds) %/% 60) %/% 60) * 60 * 60 + ((sum(RunMinutes) + sum(RunSeconds) %/% 60) %% 60) * 60 + sum(RunSeconds) %% 60) / sum(RunDistance)) %% 60)))) %/% 60, sep = ":"))
View(running)
library(knitr)
library(kableExtra)
library(dplyr)
library(stringr)
Start_Date = as.Date("1/28/2018", format = "%m/%d/%Y")
Update_Date = as.Date("3/16/2019", format = "%m/%d/%Y")
read_data = read.csv("Running_3_16_19.csv", skip = 1)
read_data = read_data[c(1:(Update_Date - Start_Date)-1), ]
running = read_data[, c(1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 18, 19, 25)]
names(running) = c("Location", "Weekday_Read", "Month_Number_Read", "Day Number", "Date", "Run Calories", "Run Distance", "Run Minutes", "Run Seconds", "Walk Calories", "Walk Distance", "Walk Minutes", "Walk Seconds", "StartTime")
running$DayNumber    = running$`Day Number`    %>% as.character() %>% as.integer()
running$RunCalories  = running$`Run Calories`  %>% as.character() %>% as.integer()
running$RunDistance  = running$`Run Distance`  %>% as.character() %>% as.numeric()
running$RunMinutes   = running$`Run Minutes`   %>% as.character() %>% as.integer()
running$RunSeconds   = running$`Run Seconds`   %>% as.character() %>% as.integer()
running$WalkCalories = running$`Walk Calories` %>% as.character() %>% as.integer()
running$WalkDistance = running$`Walk Distance` %>% as.character() %>% as.numeric()
running$WalkMinutes  = running$`Walk Minutes`  %>% as.character() %>% as.integer()
running$WalkSeconds  = running$`Walk Seconds`  %>% as.character() %>% as.integer()
running = running[ , c(1, 2, 3, 5, 14:23)]
running$Month = factor(running$Month_Number_Read)
levels(running$Month) = c("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December")
running$Year = as.factor(paste("20", (str_sub(running$Date, start = 7, end = 8)), sep = ""))
running$Weekday = factor(x = running$Weekday_Read,
levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))
running = select(running, - Weekday_Read, - Month_Number_Read)
View(running)
2.4 + 0.06 * 9
exp(2.4 + 0.06 * 9)
center = 2
exp(2.4 + 0.06 * 9)
center = 2
dL = 1.21
dU = 1.75
4 - dL
4 - dU
sqrt(12.25)
3.5 - 6
sqrt(12.25)
3.5 - 6
4 + 9 + 4 + 6.25
4 + 9 + 4 + 6.25 / (25 + 49 + 16 + 36 + 12.25)
(4 + 9 + 4 + 6.25) / (25 + 49 + 16 + 36 + 12.25)
system("python python_testing.py")
sleep$Sleep.Notes %>% str_detect(pattern = "Took a nap \\(1 hour\\)" %>% sum(na.rm = TRUE) + sleep$Sleep.Notes %>% str_detect(pattern = "Took a nap \\(1.5 hours\\)" %>% sum(na.rm = TRUE) + sleep$Sleep.Notes %>% str_detect(pattern = "Took a nap \\(2 hours\\)" %>% sum(na.rm = TRUE)
library(knitr)
library(knitr)
library(kableExtra)
library(dplyr)
library(stringr)
Start_Date = as.Date("2/7/2017", format = "%m/%d/%Y")
Update_Date = as.Date("3/20/2019", format = "%m/%d/%Y")
sleep = read.csv("sleepdata.csv", sep = ";")
sleep$Sleep.quality = str_extract(string = sleep$Sleep.quality, pattern = "[0-9]{1,3}") %>% as.integer()
sleep$Time.in.bed = paste(str_extract(string = sleep$Time.in.bed, pattern = "[0-9]{1,2}") %>% as.integer(),
ifelse(
test = str_extract(string = sleep$Time.in.bed, pattern = ":[0-9]{1,2}") %>% str_extract(pattern = "[0-9]{1,2}") %>% as.integer() <= 9,
yes = paste("0", str_extract(string = sleep$Time.in.bed, pattern = ":[0-9]{1,2}") %>% str_extract(pattern = "[0-9]{1,2}") %>% as.integer(), sep = ""),
no = paste(str_extract(string = sleep$Time.in.bed, pattern = ":[0-9]{1,2}") %>% str_extract(pattern = "[0-9]{1,2}") %>% as.integer(), sep = ""))
, sep = ":")
sleep$sleepmin = str_extract(string = sleep$Time.in.bed, pattern = "[0-9]{1,2}") %>% as.integer() * 60 + str_extract(string = sleep$Time.in.bed, pattern = ":[0-9]{1,2}") %>% str_extract(pattern = "[0-9]{1,2}") %>% as.integer()
sleep$enddates = str_extract(string = sleep$End, pattern = "[0-9]{4}-[0-9]{2}-[0-9]{2}") %>% as.Date()
add_on = cbind(matrix(setdiff(c(as.Date(1:(Update_Date - Start_Date), origin = Start_Date)), str_extract(string = sleep$End, pattern = "[0-9]{4}-[0-9]{2}-[0-9]{2}") %>% as.Date()),
nrow = length(setdiff(c(as.Date(1:(Update_Date - Start_Date), origin = Start_Date)), str_extract(string = sleep$End, pattern = "[0-9]{4}-[0-9]{2}-[0-9]{2}") %>% as.Date())),
ncol = 1),
matrix(NA,
nrow = length(setdiff(c(as.Date(1:(Update_Date - Start_Date), origin = Start_Date)), str_extract(string = sleep$End, pattern = "[0-9]{4}-[0-9]{2}-[0-9]{2}") %>% as.Date())),
ncol = ncol(sleep) - 1)) %>% as.data.frame()
add_on$V1 = as.Date(add_on$V1, origin = "1970-01-01")
names(add_on) = names(sleep)
add_on$enddates = add_on$Start
add_on$Start = add_on$End
sleep = rbind(sleep, add_on)
sleep = sleep[order(sleep$enddates, decreasing = FALSE), ]
sleep$Weekday = factor(x = rep(c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"), len = nrow(sleep)),
levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))
sleep$Sleep.Notes %>% str_detect(pattern = "Took a nap \\(1 hour\\)" %>% sum(na.rm = TRUE) + sleep$Sleep.Notes %>% str_detect(pattern = "Took a nap \\(1.5 hours\\)" %>% sum(na.rm = TRUE) + sleep$Sleep.Notes %>% str_detect(pattern = "Took a nap \\(2 hours\\)" %>% sum(na.rm = TRUE)
sleep$Sleep.Notes %>% str_detect(pattern = "Took a nap \\(1 hour\\)" %>% sum(na.rm = TRUE) + sleep$Sleep.Notes %>% str_detect(pattern = "Took a nap \\(1.5 hours\\)" %>% sum(na.rm = TRUE) + sleep$Sleep.Notes %>% str_detect(pattern = "Took a nap \\(2 hours\\)" %>% sum(na.rm = TRUE)
sleep$Sleep.Notes %>% str_detect(pattern = "Took a nap \\(1 hour\\)") %>% sum(na.rm = TRUE) + sleep$Sleep.Notes %>% str_detect(pattern = "Took a nap \\(1.5 hours\\)") %>% sum(na.rm = TRUE) + sleep$Sleep.Notes %>% str_detect(pattern = "Took a nap \\(2 hours\\)") %>% sum(na.rm = TRUE)
sleep$Sleep.Notes %>% str_detect(pattern = "Took a nap \\(1 hour\\)|Took a nap \\(1.5 hours\\)|Took a nap \\(2 hours\\)") %>% sum(na.rm = TRUE)
sleep$Sleep.Notes %>% str_detect(pattern = "Took a nap \\(1 hour\\) | Took a nap \\(1.5 hours\\) | Took a nap \\(2 hours\\)") %>% sum(na.rm = TRUE)
sleep$Sleep.Notes %>% str_detect(pattern = "Took a nap \\(1 hour\\)|Took a nap \\(1.5 hours\\)|Took a nap \\(2 hours\\)") %>% sum(na.rm = TRUE)
sleep$Sleep.Notes %>% str_detect(pattern = "Took a nap \\(1 hour\\)|Took a nap \\(1.5 hours\\)|Took a nap \\(2 hours\\)") %>% sum(na.rm = TRUE)
sleep$Sleep.Notes %>% str_detect(pattern = "Took a nap \\(1 hour\\)") %>% sum(na.rm = TRUE) + sleep$Sleep.Notes %>% str_detect(pattern = "Took a nap \\(1.5 hours\\)") %>% sum(na.rm = TRUE) + sleep$Sleep.Notes %>% str_detect(pattern = "Took a nap \\(2 hours\\)") %>% sum(na.rm = TRUE)
groupby_weekday = sleep %>%
group_by(Weekday) %>%
summarise(total = Sleep.quality %>% ">="(0) %>% sum(na.rm = TRUE),
avg_quality = Sleep.quality %>% mean(na.rm = TRUE) %>% "*"(100) %>% floor() %>% "/"(100),
time_in_bed = paste(str_extract(string = Time.in.bed, pattern = "[0-9]{1,2}") %>% as.numeric() %>% "*"(60) %>% "+"(str_extract(string = Time.in.bed, pattern = ":[0-9]{1,2}") %>% str_extract(pattern = "[0-9]{1,2}") %>% as.numeric()) %>% mean(na.rm = TRUE) %/% 60,
ifelse(str_extract(string = Time.in.bed, pattern = "[0-9]{1,2}") %>% as.numeric() %>% "*"(60) %>% "+"(str_extract(string = Time.in.bed, pattern = ":[0-9]{1,2}") %>% str_extract(pattern = "[0-9]{1,2}") %>% as.numeric()) %>% mean(na.rm = TRUE) %>% floor() <= 9,
yes = paste("0", str_extract(string = Time.in.bed, pattern = "[0-9]{1,2}") %>% as.numeric() %>% "*"(60) %>% "+"(str_extract(string = Time.in.bed, pattern = ":[0-9]{1,2}") %>% str_extract(pattern = "[0-9]{1,2}") %>% as.numeric()) %>% mean(na.rm = TRUE) %>% floor() %% 60, sep = ""),
no = paste(str_extract(string = Time.in.bed, pattern = "[0-9]{1,2}") %>% as.numeric() %>% "*"(60) %>% "+"(str_extract(string = Time.in.bed, pattern = ":[0-9]{1,2}") %>% str_extract(pattern = "[0-9]{1,2}") %>% as.numeric()) %>% mean(na.rm = TRUE) %>% floor() %% 60)), sep = ":"),
nap_prob = sleep$Sleep.Notes %>% str_detect(pattern = "Took a nap \\(1 hour\\)") %>% sum(na.rm = TRUE) + sleep$Sleep.Notes %>% str_detect(pattern = "Took a nap \\(1.5 hours\\)") %>% sum(na.rm = TRUE) + sleep$Sleep.Notes %>% str_detect(pattern = "Took a nap \\(2 hours\\)") %>% sum(na.rm = TRUE),
avg_footsteps = Activity..steps. %>% mean(na.rm = TRUE) %>% floor()
)
names(groupby_weekday) = c("Weekday", "Sleeps Recorded", "Sleep Quality (%)", "Average Time in Bed", "Average Footsteps")
kable(groupby_weekday, format = "html") %>%
kable_styling(bootstrap_options = c("hover", "responsive"))
groupby_weekday = sleep %>%
group_by(Weekday) %>%
summarise(total = Sleep.quality %>% ">="(0) %>% sum(na.rm = TRUE),
avg_quality = Sleep.quality %>% mean(na.rm = TRUE) %>% "*"(100) %>% floor() %>% "/"(100),
time_in_bed = paste(str_extract(string = Time.in.bed, pattern = "[0-9]{1,2}") %>% as.numeric() %>% "*"(60) %>% "+"(str_extract(string = Time.in.bed, pattern = ":[0-9]{1,2}") %>% str_extract(pattern = "[0-9]{1,2}") %>% as.numeric()) %>% mean(na.rm = TRUE) %/% 60,
ifelse(str_extract(string = Time.in.bed, pattern = "[0-9]{1,2}") %>% as.numeric() %>% "*"(60) %>% "+"(str_extract(string = Time.in.bed, pattern = ":[0-9]{1,2}") %>% str_extract(pattern = "[0-9]{1,2}") %>% as.numeric()) %>% mean(na.rm = TRUE) %>% floor() <= 9,
yes = paste("0", str_extract(string = Time.in.bed, pattern = "[0-9]{1,2}") %>% as.numeric() %>% "*"(60) %>% "+"(str_extract(string = Time.in.bed, pattern = ":[0-9]{1,2}") %>% str_extract(pattern = "[0-9]{1,2}") %>% as.numeric()) %>% mean(na.rm = TRUE) %>% floor() %% 60, sep = ""),
no = paste(str_extract(string = Time.in.bed, pattern = "[0-9]{1,2}") %>% as.numeric() %>% "*"(60) %>% "+"(str_extract(string = Time.in.bed, pattern = ":[0-9]{1,2}") %>% str_extract(pattern = "[0-9]{1,2}") %>% as.numeric()) %>% mean(na.rm = TRUE) %>% floor() %% 60)), sep = ":"),
nap_prob = Sleep.Notes %>% str_detect(pattern = "Took a nap \\(1 hour\\)") %>% sum(na.rm = TRUE) + Sleep.Notes %>% str_detect(pattern = "Took a nap \\(1.5 hours\\)") %>% sum(na.rm = TRUE) + Sleep.Notes %>% str_detect(pattern = "Took a nap \\(2 hours\\)") %>% sum(na.rm = TRUE),
avg_footsteps = Activity..steps. %>% mean(na.rm = TRUE) %>% floor()
)
names(groupby_weekday) = c("Weekday", "Sleeps Recorded", "Sleep Quality (%)", "Average Time in Bed", "Average Footsteps")
kable(groupby_weekday, format = "html") %>%
kable_styling(bootstrap_options = c("hover", "responsive"))
groupby_weekday = sleep %>%
group_by(Weekday) %>%
summarise(total = Sleep.quality %>% ">="(0) %>% sum(na.rm = TRUE),
avg_quality = Sleep.quality %>% mean(na.rm = TRUE) %>% "*"(100) %>% floor() %>% "/"(100),
time_in_bed = paste(str_extract(string = Time.in.bed, pattern = "[0-9]{1,2}") %>% as.numeric() %>% "*"(60) %>% "+"(str_extract(string = Time.in.bed, pattern = ":[0-9]{1,2}") %>% str_extract(pattern = "[0-9]{1,2}") %>% as.numeric()) %>% mean(na.rm = TRUE) %/% 60,
ifelse(str_extract(string = Time.in.bed, pattern = "[0-9]{1,2}") %>% as.numeric() %>% "*"(60) %>% "+"(str_extract(string = Time.in.bed, pattern = ":[0-9]{1,2}") %>% str_extract(pattern = "[0-9]{1,2}") %>% as.numeric()) %>% mean(na.rm = TRUE) %>% floor() <= 9,
yes = paste("0", str_extract(string = Time.in.bed, pattern = "[0-9]{1,2}") %>% as.numeric() %>% "*"(60) %>% "+"(str_extract(string = Time.in.bed, pattern = ":[0-9]{1,2}") %>% str_extract(pattern = "[0-9]{1,2}") %>% as.numeric()) %>% mean(na.rm = TRUE) %>% floor() %% 60, sep = ""),
no = paste(str_extract(string = Time.in.bed, pattern = "[0-9]{1,2}") %>% as.numeric() %>% "*"(60) %>% "+"(str_extract(string = Time.in.bed, pattern = ":[0-9]{1,2}") %>% str_extract(pattern = "[0-9]{1,2}") %>% as.numeric()) %>% mean(na.rm = TRUE) %>% floor() %% 60)), sep = ":"),
nap_prob = (Sleep.Notes %>% str_detect(pattern = "Took a nap \\(1 hour\\)") %>% sum(na.rm = TRUE) + Sleep.Notes %>% str_detect(pattern = "Took a nap \\(1.5 hours\\)") %>% sum(na.rm = TRUE) + Sleep.Notes %>% str_detect(pattern = "Took a nap \\(2 hours\\)") %>% sum(na.rm = TRUE)) %>% "/"(Sleep.quality %>% ">="(0) %>% sum(na.rm = TRUE)),
avg_footsteps = Activity..steps. %>% mean(na.rm = TRUE) %>% floor()
)
names(groupby_weekday) = c("Weekday", "Sleeps Recorded", "Sleep Quality (%)", "Average Time in Bed", "Average Footsteps")
kable(groupby_weekday, format = "html") %>%
kable_styling(bootstrap_options = c("hover", "responsive"))
groupby_weekday = sleep %>%
group_by(Weekday) %>%
summarise(total = Sleep.quality %>% ">="(0) %>% sum(na.rm = TRUE),
avg_quality = Sleep.quality %>% mean(na.rm = TRUE) %>% "*"(100) %>% floor() %>% "/"(100),
time_in_bed = paste(str_extract(string = Time.in.bed, pattern = "[0-9]{1,2}") %>% as.numeric() %>% "*"(60) %>% "+"(str_extract(string = Time.in.bed, pattern = ":[0-9]{1,2}") %>% str_extract(pattern = "[0-9]{1,2}") %>% as.numeric()) %>% mean(na.rm = TRUE) %/% 60,
ifelse(str_extract(string = Time.in.bed, pattern = "[0-9]{1,2}") %>% as.numeric() %>% "*"(60) %>% "+"(str_extract(string = Time.in.bed, pattern = ":[0-9]{1,2}") %>% str_extract(pattern = "[0-9]{1,2}") %>% as.numeric()) %>% mean(na.rm = TRUE) %>% floor() <= 9,
yes = paste("0", str_extract(string = Time.in.bed, pattern = "[0-9]{1,2}") %>% as.numeric() %>% "*"(60) %>% "+"(str_extract(string = Time.in.bed, pattern = ":[0-9]{1,2}") %>% str_extract(pattern = "[0-9]{1,2}") %>% as.numeric()) %>% mean(na.rm = TRUE) %>% floor() %% 60, sep = ""),
no = paste(str_extract(string = Time.in.bed, pattern = "[0-9]{1,2}") %>% as.numeric() %>% "*"(60) %>% "+"(str_extract(string = Time.in.bed, pattern = ":[0-9]{1,2}") %>% str_extract(pattern = "[0-9]{1,2}") %>% as.numeric()) %>% mean(na.rm = TRUE) %>% floor() %% 60)), sep = ":"),
nap_prob = (Sleep.Notes %>% str_detect(pattern = "Took a nap \\(1 hour\\)") %>% sum(na.rm = TRUE) + Sleep.Notes %>% str_detect(pattern = "Took a nap \\(1.5 hours\\)") %>% sum(na.rm = TRUE) + Sleep.Notes %>% str_detect(pattern = "Took a nap \\(2 hours\\)") %>% sum(na.rm = TRUE)) %>% "/"(Sleep.quality %>% ">="(0) %>% sum(na.rm = TRUE)) %>% "*"(100),
avg_footsteps = Activity..steps. %>% mean(na.rm = TRUE) %>% floor()
)
groupby_weekday = sleep %>%
group_by(Weekday) %>%
summarise(total = Sleep.quality %>% ">="(0) %>% sum(na.rm = TRUE),
avg_quality = Sleep.quality %>% mean(na.rm = TRUE) %>% "*"(100) %>% floor() %>% "/"(100),
time_in_bed = paste(str_extract(string = Time.in.bed, pattern = "[0-9]{1,2}") %>% as.numeric() %>% "*"(60) %>% "+"(str_extract(string = Time.in.bed, pattern = ":[0-9]{1,2}") %>% str_extract(pattern = "[0-9]{1,2}") %>% as.numeric()) %>% mean(na.rm = TRUE) %/% 60,
ifelse(str_extract(string = Time.in.bed, pattern = "[0-9]{1,2}") %>% as.numeric() %>% "*"(60) %>% "+"(str_extract(string = Time.in.bed, pattern = ":[0-9]{1,2}") %>% str_extract(pattern = "[0-9]{1,2}") %>% as.numeric()) %>% mean(na.rm = TRUE) %>% floor() <= 9,
yes = paste("0", str_extract(string = Time.in.bed, pattern = "[0-9]{1,2}") %>% as.numeric() %>% "*"(60) %>% "+"(str_extract(string = Time.in.bed, pattern = ":[0-9]{1,2}") %>% str_extract(pattern = "[0-9]{1,2}") %>% as.numeric()) %>% mean(na.rm = TRUE) %>% floor() %% 60, sep = ""),
no = paste(str_extract(string = Time.in.bed, pattern = "[0-9]{1,2}") %>% as.numeric() %>% "*"(60) %>% "+"(str_extract(string = Time.in.bed, pattern = ":[0-9]{1,2}") %>% str_extract(pattern = "[0-9]{1,2}") %>% as.numeric()) %>% mean(na.rm = TRUE) %>% floor() %% 60)), sep = ":"),
nap_prob = (Sleep.Notes %>% str_detect(pattern = "Took a nap \\(1 hour\\)") %>% sum(na.rm = TRUE) + Sleep.Notes %>% str_detect(pattern = "Took a nap \\(1.5 hours\\)") %>% sum(na.rm = TRUE) + Sleep.Notes %>% str_detect(pattern = "Took a nap \\(2 hours\\)") %>% sum(na.rm = TRUE)) %>% "/"(Sleep.quality %>% ">="(0) %>% sum(na.rm = TRUE)) %>% "*"(100),
avg_footsteps = Activity..steps. %>% mean(na.rm = TRUE) %>% floor()
)
names(groupby_weekday) = c("Weekday", "Sleeps Recorded", "Sleep Quality (%)", "Average Time in Bed", "Average Footsteps")
kable(groupby_weekday, format = "html") %>%
kable_styling(bootstrap_options = c("hover", "responsive"))
groupby_weekday = sleep %>%
group_by(Weekday) %>%
summarise(total = Sleep.quality %>% ">="(0) %>% sum(na.rm = TRUE),
avg_quality = Sleep.quality %>% mean(na.rm = TRUE) %>% "*"(100) %>% floor() %>% "/"(100),
time_in_bed = paste(str_extract(string = Time.in.bed, pattern = "[0-9]{1,2}") %>% as.numeric() %>% "*"(60) %>% "+"(str_extract(string = Time.in.bed, pattern = ":[0-9]{1,2}") %>% str_extract(pattern = "[0-9]{1,2}") %>% as.numeric()) %>% mean(na.rm = TRUE) %/% 60,
ifelse(str_extract(string = Time.in.bed, pattern = "[0-9]{1,2}") %>% as.numeric() %>% "*"(60) %>% "+"(str_extract(string = Time.in.bed, pattern = ":[0-9]{1,2}") %>% str_extract(pattern = "[0-9]{1,2}") %>% as.numeric()) %>% mean(na.rm = TRUE) %>% floor() <= 9,
yes = paste("0", str_extract(string = Time.in.bed, pattern = "[0-9]{1,2}") %>% as.numeric() %>% "*"(60) %>% "+"(str_extract(string = Time.in.bed, pattern = ":[0-9]{1,2}") %>% str_extract(pattern = "[0-9]{1,2}") %>% as.numeric()) %>% mean(na.rm = TRUE) %>% floor() %% 60, sep = ""),
no = paste(str_extract(string = Time.in.bed, pattern = "[0-9]{1,2}") %>% as.numeric() %>% "*"(60) %>% "+"(str_extract(string = Time.in.bed, pattern = ":[0-9]{1,2}") %>% str_extract(pattern = "[0-9]{1,2}") %>% as.numeric()) %>% mean(na.rm = TRUE) %>% floor() %% 60)), sep = ":"),
nap_prob = (Sleep.Notes %>% str_detect(pattern = "Took a nap \\(1 hour\\)") %>% sum(na.rm = TRUE) + Sleep.Notes %>% str_detect(pattern = "Took a nap \\(1.5 hours\\)") %>% sum(na.rm = TRUE) + Sleep.Notes %>% str_detect(pattern = "Took a nap \\(2 hours\\)") %>% sum(na.rm = TRUE)) %>% "/"(Sleep.quality %>% ">="(0) %>% sum(na.rm = TRUE)) %>% "*"(100),
avg_footsteps = Activity..steps. %>% mean(na.rm = TRUE) %>% floor()
)
names(groupby_weekday) = c("Weekday", "Sleeps Recorded", "Sleep Quality (%)", "Average Time in Bed", "Average Footsteps")
kable(groupby_weekday, format = "html") %>%
kable_styling(bootstrap_options = c("hover", "responsive"))
groupby_weekday = sleep %>%
group_by(Weekday) %>%
summarise(total = Sleep.quality %>% ">="(0) %>% sum(na.rm = TRUE),
avg_quality = Sleep.quality %>% mean(na.rm = TRUE) %>% "*"(100) %>% floor() %>% "/"(100),
time_in_bed = paste(str_extract(string = Time.in.bed, pattern = "[0-9]{1,2}") %>% as.numeric() %>% "*"(60) %>% "+"(str_extract(string = Time.in.bed, pattern = ":[0-9]{1,2}") %>% str_extract(pattern = "[0-9]{1,2}") %>% as.numeric()) %>% mean(na.rm = TRUE) %/% 60,
ifelse(str_extract(string = Time.in.bed, pattern = "[0-9]{1,2}") %>% as.numeric() %>% "*"(60) %>% "+"(str_extract(string = Time.in.bed, pattern = ":[0-9]{1,2}") %>% str_extract(pattern = "[0-9]{1,2}") %>% as.numeric()) %>% mean(na.rm = TRUE) %>% floor() <= 9,
yes = paste("0", str_extract(string = Time.in.bed, pattern = "[0-9]{1,2}") %>% as.numeric() %>% "*"(60) %>% "+"(str_extract(string = Time.in.bed, pattern = ":[0-9]{1,2}") %>% str_extract(pattern = "[0-9]{1,2}") %>% as.numeric()) %>% mean(na.rm = TRUE) %>% floor() %% 60, sep = ""),
no = paste(str_extract(string = Time.in.bed, pattern = "[0-9]{1,2}") %>% as.numeric() %>% "*"(60) %>% "+"(str_extract(string = Time.in.bed, pattern = ":[0-9]{1,2}") %>% str_extract(pattern = "[0-9]{1,2}") %>% as.numeric()) %>% mean(na.rm = TRUE) %>% floor() %% 60)), sep = ":"),
nap_prob = (Sleep.Notes %>% str_detect(pattern = "Took a nap \\(1 hour\\)") %>% sum(na.rm = TRUE) + Sleep.Notes %>% str_detect(pattern = "Took a nap \\(1.5 hours\\)") %>% sum(na.rm = TRUE) + Sleep.Notes %>% str_detect(pattern = "Took a nap \\(2 hours\\)") %>% sum(na.rm = TRUE)) %>% "/"(Sleep.quality %>% ">="(0) %>% sum(na.rm = TRUE)) %>% "*"(10000) %>% floor() %>% "/"(100),
avg_footsteps = Activity..steps. %>% mean(na.rm = TRUE) %>% floor()
)
names(groupby_weekday) = c("Weekday", "Sleeps Recorded", "Sleep Quality (%)", "Average Time in Bed", "Average Footsteps")
kable(groupby_weekday, format = "html") %>%
kable_styling(bootstrap_options = c("hover", "responsive"))
groupby_weekday = sleep %>%
group_by(Weekday) %>%
summarise(total = Sleep.quality %>% ">="(0) %>% sum(na.rm = TRUE),
avg_quality = Sleep.quality %>% mean(na.rm = TRUE) %>% "*"(100) %>% floor() %>% "/"(100),
time_in_bed = paste(str_extract(string = Time.in.bed, pattern = "[0-9]{1,2}") %>% as.numeric() %>% "*"(60) %>% "+"(str_extract(string = Time.in.bed, pattern = ":[0-9]{1,2}") %>% str_extract(pattern = "[0-9]{1,2}") %>% as.numeric()) %>% mean(na.rm = TRUE) %/% 60,
ifelse(str_extract(string = Time.in.bed, pattern = "[0-9]{1,2}") %>% as.numeric() %>% "*"(60) %>% "+"(str_extract(string = Time.in.bed, pattern = ":[0-9]{1,2}") %>% str_extract(pattern = "[0-9]{1,2}") %>% as.numeric()) %>% mean(na.rm = TRUE) %>% floor() <= 9,
yes = paste("0", str_extract(string = Time.in.bed, pattern = "[0-9]{1,2}") %>% as.numeric() %>% "*"(60) %>% "+"(str_extract(string = Time.in.bed, pattern = ":[0-9]{1,2}") %>% str_extract(pattern = "[0-9]{1,2}") %>% as.numeric()) %>% mean(na.rm = TRUE) %>% floor() %% 60, sep = ""),
no = paste(str_extract(string = Time.in.bed, pattern = "[0-9]{1,2}") %>% as.numeric() %>% "*"(60) %>% "+"(str_extract(string = Time.in.bed, pattern = ":[0-9]{1,2}") %>% str_extract(pattern = "[0-9]{1,2}") %>% as.numeric()) %>% mean(na.rm = TRUE) %>% floor() %% 60)), sep = ":"),
nap_prob = paste((Sleep.Notes %>% str_detect(pattern = "Took a nap \\(1 hour\\)") %>% sum(na.rm = TRUE) + Sleep.Notes %>% str_detect(pattern = "Took a nap \\(1.5 hours\\)") %>% sum(na.rm = TRUE) + Sleep.Notes %>% str_detect(pattern = "Took a nap \\(2 hours\\)") %>% sum(na.rm = TRUE)) %>% "/"(Sleep.quality %>% ">="(0) %>% sum(na.rm = TRUE)) %>% "*"(10000) %>% floor() %>% "/"(100), "%", sep = ""),
avg_footsteps = Activity..steps. %>% mean(na.rm = TRUE) %>% floor()
)
names(groupby_weekday) = c("Weekday", "Sleeps Recorded", "Sleep Quality (%)", "Average Time in Bed", "Average Footsteps")
kable(groupby_weekday, format = "html") %>%
kable_styling(bootstrap_options = c("hover", "responsive"))
percent = function(x, digits = 2, format = "f", ...) {
paste0(formatC(100 * x, format = format, digits = digits, ...), "%")
}
percent = function(x, digits = 2, format = "f", ...) {
paste0(formatC(100 * x, format = format, digits = digits, ...), "%")
}
a = 900
b = 2.33423
c = 93021,
percent = function(x, digits = 2, format = "f", ...) {
paste0(formatC(100 * x, format = format, digits = digits, ...), "%")
}
a = 900
b = 2.33423
c = 93021
d = .1324
percent(a)
percent(b)
percent(c)
percent(d)
formatC
?formatC
formatC(100 * x, format = format, digits = digits, ...) %>% paste(sep = "")
percent = function(x, digits = 2, format = "f", ...) {
formatC(100 * x, format = format, digits = digits, ...) %>% paste(sep = "")
}
a = 900
b = 2.33423
c = 93021
d = .1324
percent(d)
formatC(100 * x, format = format, digits = digits, ...) %>% paste("%", sep = "")
percent = function(x, digits = 2, format = "f", ...) {
formatC(100 * x, format = format, digits = digits, ...) %>% paste("%", sep = "")
}
a = 900
b = 2.33423
c = 93021
d = .1324
percent(d)
library(knitr)
library(kableExtra)
library(dplyr)
library(stringr)
Start_Date = as.Date("2/7/2017", format = "%m/%d/%Y")
percent = function(x, digits = 2, format = "f", ...) {
formatC(100 * x, format = format, digits = digits, ...) %>% paste("%", sep = "")
}
p = c(a, b, c, d)
a = 900
b = 2.33423
c = 93021
d = .1324
p = c(a, b, c, d)
formatC(p, format = format, digits = digits)
formatC(p, format = "f", digits = 2)
d = .139
p = c(a, b, c, d)
formatC(p, format = "f", digits = 2)
floor(formatC(p, format = "f", digits = 2))
formatC(p, format = "f", digits = 2)
formatC(p, format = "f", digits = 2) %>% as.numeric
formatC(p, format = "f", digits = 2) %>% as.numeric %>% floor
formatC(p, format = "f", digits = 2) %>% as.numeric() %>% floor()
formatC(p, format = "f", digits = 2) %>% as.numeric %>% floor
nrow(sleep, na.rm = TRUE)
nrow(sleep)
nrow(sleep) - is.na(sleep) %>% sum()
nrow(sleep) - (is.na(sleep) %>% sum())
nrow(sleep) - (is.na(sleep$Start) %>% sum())
nrow(sleep) - (is.na(sleep$Sleep.quality) %>% sum())
a = c(1, 2, 3, 4)
b = c(2, 3, 4, 5)
d = data.frame(
a = a,
b = b
)
kable(d)
library(kableExtra)
which(b == 2)
which(b == c(2, 3)
which(b == c(2, 3))
which(b == c(2, 3))
b[which(b == c(2, 3)),]
b[which(b == c(2, 3))]
which(b == c(2, 3)
which(b == c(2, 3))
which(b == c(2, 3))
