"0","kevin_binom = function(trials, prob, type, successes, ...) {"
"0","  trials = as.numeric(data.frame(unlist(as.list(match.call())[c(""trials"", ""n"")])[1]))"
"0","  prob = as.numeric(data.frame(unlist(as.list(match.call())[c(""prob"", ""p"")])[1]))"
"0","  successes = as.numeric(data.frame(unlist(as.list(match.call())[c(""successes"", ""k"")])[1]))"
"0","  "
"0","  if (trials < successes) {"
"0","    return(message(""ERROR: Check n or k!""))"
"0","  }"
"0","  prob_less = pbinom(q = successes[1] - 1, size = trials, prob = prob)"
"0","  prob_at_most = pbinom(q = successes[1], size = trials, prob = prob)"
"0","  prob_equal = pbinom(q = successes[1], size = trials, prob = prob) - pbinom(q = successes[1] - 1, size = trials, prob = prob)"
"0","  prob_greater = 1 - pbinom(q = successes[1], size = trials, prob = prob)"
"0","  prob_at_least = 1 - pbinom(q = successes[1] - 1, size = trials, prob = prob)"
"0","  prob_between = pbinom(q = successes[2], size = trials, prob = prob) - pbinom(q = successes[1] - 1, size = trials, prob = prob)"
"0","  "
"0","  results = list(trials, successes, prob, prob_less, prob_at_most, prob_equal, prob_at_least, prob_greater, prob_between)"
"0","  names(results) = c("
"0","    ""Trials"","
"0","    ""Successes"","
"0","    ""Probability of Each Success"","
"0","    paste(""Less Than "", successes[1], "" Successes"", sep = """"),"
"0","    paste(""At Most "", successes[1], "" Successes"", sep = """"),"
"0","    paste(""Equal To "", successes[1], "" Successes"", sep = """"),"
"0","    paste(""At Least "", successes[1], "" Successes"", sep = """"),"
"0","    paste(""Greater Than "", successes[1], "" Successes"", sep = """"),"
"0","    paste(""Between "", successes[1], "" and "", successes[2], "" Successes"", sep = """")"
"0","  )"
"0","  return(results)"
"0","}"
"0","# kevin_binom(n = 12, prob = .5, k = 11)"
